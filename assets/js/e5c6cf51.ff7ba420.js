"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[3329],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=o,b=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(b,s(s({ref:t},c),{},{components:n})):r.createElement(b,s({ref:t},c))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},19438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={hide_table_of_contents:!0},s="Robot",i={unversionedId:"examples/plugin-dragonbones/robot",id:"examples/plugin-dragonbones/robot",title:"Robot",description:"",source:"@site/docs/examples/plugin-dragonbones/robot.md",sourceDirName:"examples/plugin-dragonbones",slug:"/examples/plugin-dragonbones/robot",permalink:"/examples/plugin-dragonbones/robot",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/plugin-dragonbones/robot.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Spineboy Pro",permalink:"/examples/plugin-spine/spineboy-pro"},next:{title:"Eye Tracking",permalink:"/examples/plugin-dragonbones/eyetracking"}},p={},l=[],c={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"robot"},"Robot"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ antialias: true, resizeTo: window });\ndocument.body.appendChild(app.view);\n\napp.stop();\n\n// load spine data\nPIXI.Loader.shared\n    .add('skeleton', 'https://beta.pixijs.com/assets/pixi-dragonbones/robot/mecha_1002_101d_show_ske.json')\n    .add('texture_json', 'https://beta.pixijs.com/assets/pixi-dragonbones/robot/mecha_1002_101d_show_tex.json')\n    .add('texture_png', 'https://beta.pixijs.com/assets/pixi-dragonbones/robot/mecha_1002_101d_show_tex.png')\n    .load(onAssetsLoaded);\n\nfunction onAssetsLoaded(loader, res) {\n    const factory = dragonBones.PixiFactory.factory;\n\n    factory.parseDragonBonesData(res.skeleton.data);\n    factory.parseTextureAtlasData(res.texture_json.data, res.texture_png.texture);\n\n    const armatureDisplay = factory.buildArmatureDisplay('mecha_1002_101d', 'mecha_1002_101d_show');\n    armatureDisplay.animation.play('idle');\n    armatureDisplay.x = 400.0;\n    armatureDisplay.y = 500.0;\n\n    app.stage.addChild(armatureDisplay);\n\n    app.start();\n}\n")))}u.isMDXComponent=!0}}]);