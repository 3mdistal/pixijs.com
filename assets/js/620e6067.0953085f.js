"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[286],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",o={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=d(a),c=n,k=m["".concat(p,".").concat(c)]||m[c]||o[c]||l;return a?r.createElement(k,i(i({ref:t},u),{},{components:a})):r.createElement(k,i({ref:t},u))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:n,i[1]=s;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},33822:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const l={id:"PIXI.CanvasExtract.pixi_canvas_extract",title:"Class: PIXI.CanvasExtract",sidebar_label:"PIXI.CanvasExtract",custom_edit_url:null},i=void 0,s={unversionedId:"api/classes/PIXI.CanvasExtract.pixi_canvas_extract",id:"api/classes/PIXI.CanvasExtract.pixi_canvas_extract",title:"Class: PIXI.CanvasExtract",description:"@pixi/canvas-extract.CanvasExtract",source:"@site/docs/api/classes/PIXI.CanvasExtract.pixi_canvas_extract.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.CanvasExtract.pixi_canvas_extract",permalink:"/api/classes/PIXI.CanvasExtract.pixi_canvas_extract",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.CanvasExtract.pixi_canvas_extract",title:"Class: PIXI.CanvasExtract",sidebar_label:"PIXI.CanvasExtract",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.CanvasContextSystem",permalink:"/api/classes/PIXI.CanvasContextSystem.pixi_canvas_renderer"},next:{title:"PIXI.CanvasGraphicsRenderer",permalink:"/api/classes/PIXI.CanvasGraphicsRenderer.pixi_canvas_graphics"}},p={},d=[{value:"new PIXI.CanvasExtract: <span><code>(renderer: CanvasRenderer) </code></span>",id:"new-pixicanvasextract-renderer-canvasrenderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"renderer: <span><code>CanvasRenderer</code></span>",id:"renderer-canvasrenderer",level:3},{value:"Methods",id:"methods",level:2},{value:"base64: <span><code>(target: DisplayObject | RenderTexture, format: string, quality: number) -&gt; Promise&lt;string&gt;</code></span>",id:"base64-target-displayobject--rendertexture-format-string-quality-number---promisestring",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4},{value:"canvas: <span><code>(target: DisplayObject | RenderTexture, frame: Rectangle) -&gt; ICanvas</code></span>",id:"canvas-target-displayobject--rendertexture-frame-rectangle---icanvas",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"image: <span><code>(target: DisplayObject | RenderTexture, format: string, quality: number) -&gt; Promise&lt;HTMLImageElement&gt;</code></span>",id:"image-target-displayobject--rendertexture-format-string-quality-number---promisehtmlimageelement",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"pixels: <span><code>(target: DisplayObject | RenderTexture, frame: Rectangle) -&gt; Uint8ClampedArray</code></span>",id:"pixels-target-displayobject--rendertexture-frame-rectangle---uint8clampedarray",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-3",level:4}],u={toc:d};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_canvas_extract"},"@pixi/canvas-extract"),".CanvasExtract"),(0,n.kt)("p",null,"The extract manager provides functionality to export content from the renderers.\nAn instance of this class is automatically created by default, and can be found at ",(0,n.kt)("inlineCode",{parentName:"p"},"renderer.extract")),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixicanvasextract-renderer-canvasrenderer-"},"new PIXI.CanvasExtract: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," CanvasRenderer) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"CanvasRenderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"A reference to the current renderer"))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"renderer-canvasrenderer"},"renderer: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"CanvasRenderer"))),(0,n.kt)("p",null,"A reference to the current renderer")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"base64-target-displayobject--rendertexture-format-string-quality-number---promisestring"},"base64: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(target",":"," DisplayObject ","|"," RenderTexture, format",":"," string, quality",":"," number) -",">"," Promise","<","string",">"))),(0,n.kt)("p",null,"Will return a base64 encoded string of this target. It works by calling",(0,n.kt)("inlineCode",{parentName:"p"},"CanvasExtract.getCanvas")," and then running toDataURL on that."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"target"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"DisplayObject ","|"," RenderTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"A displayObject or renderTexture to convert. If left empty will use the main renderer")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},'Image format, e.g. "image/jpeg" or "image/webp".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"quality"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"JPEG or Webp compression from 0 to 1","."," Default is 0.92.")))),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Promise","<","string",">")),(0,n.kt)("td",{parentName:"tr",align:null},"A base64 encoded string of the texture."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"canvas-target-displayobject--rendertexture-frame-rectangle---icanvas"},"canvas: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(target",":"," DisplayObject ","|"," RenderTexture, frame",":"," Rectangle) -",">"," ICanvas"))),(0,n.kt)("p",null,"Creates a Canvas element, renders this target to it and then returns it."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"target"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"DisplayObject ","|"," RenderTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"A displayObject or renderTexture to convert. If left empty will use the main renderer")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"frame"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Rectangle")),(0,n.kt)("td",{parentName:"tr",align:null},"The frame the extraction is restricted to.")))),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"ICanvas")),(0,n.kt)("td",{parentName:"tr",align:null},"A Canvas element with the texture rendered on."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Destroys the extract")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"image-target-displayobject--rendertexture-format-string-quality-number---promisehtmlimageelement"},"image: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(target",":"," DisplayObject ","|"," RenderTexture, format",":"," string, quality",":"," number) -",">"," Promise","<","HTMLImageElement",">"))),(0,n.kt)("p",null,"Will return a HTML Image of the target"),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"target"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"DisplayObject ","|"," RenderTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"A displayObject or renderTexture to convert. If left empty will use the main renderer")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},'Image format, e.g. "image/jpeg" or "image/webp".')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"quality"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"JPEG or Webp compression from 0 to 1","."," Default is 0.92.")))),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Promise","<","HTMLImageElement",">")),(0,n.kt)("td",{parentName:"tr",align:null},"HTML Image of the target"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"pixels-target-displayobject--rendertexture-frame-rectangle---uint8clampedarray"},"pixels: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(target",":"," DisplayObject ","|"," RenderTexture, frame",":"," Rectangle) -",">"," Uint8ClampedArray"))),(0,n.kt)("p",null,"Will return a one-dimensional array containing the pixel data of the entire texture in RGBA order, with integer values between 0 and 255 (included)."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"target"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"DisplayObject ","|"," RenderTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"A displayObject or renderTexture to convert. If left empty will use the main renderer")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"frame"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Rectangle")),(0,n.kt)("td",{parentName:"tr",align:null},"The frame the extraction is restricted to.")))),(0,n.kt)("h4",{id:"returns-3"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Uint8ClampedArray")),(0,n.kt)("td",{parentName:"tr",align:null},"One-dimensional array containing the pixel data of the entire texture"))))),(0,n.kt)("hr",null))}m.isMDXComponent=!0}}]);