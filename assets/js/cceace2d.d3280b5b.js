"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[3804],{3905:(e,t,l)=>{l.d(t,{Zo:()=>o,kt:()=>m});var a=l(67294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function u(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function i(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):u(u({},t),e)),l},o=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=d(l),c=n,m=p["".concat(s,".").concat(c)]||p[c]||k[c]||r;return l?a.createElement(m,u(u({ref:t},o),{},{components:l})):a.createElement(m,u({ref:t},o))}));function m(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=l.length,u=new Array(r);u[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,u[1]=i;for(var d=2;d<r;d++)u[d]=l[d];return a.createElement.apply(null,u)}return a.createElement.apply(null,l)}c.displayName="MDXCreateElement"},38469:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>s,contentTitle:()=>u,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var a=l(87462),n=(l(67294),l(3905));const r={id:"PIXI.BaseRenderTexture.pixi_core",title:"Class: PIXI.BaseRenderTexture",sidebar_label:"PIXI.BaseRenderTexture",custom_edit_url:null},u=void 0,i={unversionedId:"api/classes/PIXI.BaseRenderTexture.pixi_core",id:"api/classes/PIXI.BaseRenderTexture.pixi_core",title:"Class: PIXI.BaseRenderTexture",description:"@pixi/core.BaseRenderTexture",source:"@site/docs/api/classes/PIXI.BaseRenderTexture.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.BaseRenderTexture.pixi_core",permalink:"/api/classes/PIXI.BaseRenderTexture.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.BaseRenderTexture.pixi_core",title:"Class: PIXI.BaseRenderTexture",sidebar_label:"PIXI.BaseRenderTexture",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.BasePrepare",permalink:"/api/classes/PIXI.BasePrepare.pixi_prepare"},next:{title:"PIXI.BaseTexture",permalink:"/api/classes/PIXI.BaseTexture.pixi_core"}},s={},d=[{value:"new PIXI.BaseRenderTexture: <span><code>(options: IBaseTextureOptions) </code></span>",id:"new-pixibaserendertexture-options-ibasetextureoptions-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"_batchEnabled: <span><code>number</code></span>",id:"_batchenabled-number",level:3},{value:"_batchLocation: <span><code>number</code></span>",id:"_batchlocation-number",level:3},{value:"alphaMode: <span><code>PIXI.ALPHA_MODES</code></span>",id:"alphamode-pixialpha_modes",level:3},{value:"anisotropicLevel: <span><code>number</code></span>",id:"anisotropiclevel-number",level:3},{value:"cacheId: <span><code>string</code></span>",id:"cacheid-string",level:3},{value:"clear: <span><code>Color</code></span>",id:"clear-color",level:3},{value:"clearColor: <span><code>ColorSource</code></span>",id:"clearcolor-colorsource",level:3},{value:"destroyed: <span><code>boolean</code></span>",id:"destroyed-boolean",level:3},{value:"dirtyId: <span><code>number</code></span>",id:"dirtyid-number",level:3},{value:"filterStack: <span><code>Array&lt;any&gt;</code></span>",id:"filterstack-arrayany",level:3},{value:"format: <span><code>FORMATS</code></span>",id:"format-formats",level:3},{value:"height: <span><code>number</code></span>",id:"height-number",level:3},{value:"isPowerOfTwo: <span><code>boolean</code></span>",id:"ispoweroftwo-boolean",level:3},{value:"maskStack: <span><code>Array&lt;MaskData&gt;</code></span>",id:"maskstack-arraymaskdata",level:3},{value:"mipmap: <span><code>MIPMAP_MODES</code></span>",id:"mipmap-mipmap_modes",level:3},{value:"parentTextureArray: <span><code>PIXI.BaseTexture</code></span>",id:"parenttexturearray-pixibasetexture",level:3},{value:"realHeight: <span><code>number</code></span>",id:"realheight-number",level:3},{value:"realWidth: <span><code>number</code></span>",id:"realwidth-number",level:3},{value:"resolution: <span><code>number</code></span>",id:"resolution-number",level:3},{value:"resource: <span><code>PIXI.Resource</code></span>",id:"resource-pixiresource",level:3},{value:"scaleMode: <span><code>SCALE_MODES</code></span>",id:"scalemode-scale_modes",level:3},{value:"target: <span><code>TARGETS</code></span>",id:"target-targets",level:3},{value:"textureCacheIds: <span><code>Array&lt;string&gt;</code></span>",id:"texturecacheids-arraystring",level:3},{value:"type: <span><code>TYPES</code></span>",id:"type-types",level:3},{value:"valid: <span><code>boolean</code></span>",id:"valid-boolean",level:3},{value:"width: <span><code>number</code></span>",id:"width-number",level:3},{value:"wrapMode: <span><code>WRAP_MODES</code></span>",id:"wrapmode-wrap_modes",level:3},{value:"_canvasRenderTarget: <span><code>PIXI.utils.CanvasRenderTarget</code></span>",id:"_canvasrendertarget-pixiutilscanvasrendertarget",level:3},{value:"dirtyStyleId: <span><code>number</code></span>",id:"dirtystyleid-number",level:3},{value:"touched: <span><code>number</code></span>",id:"touched-number",level:3},{value:"uid: <span><code>number</code></span>",id:"uid-number",level:3},{value:"Methods",id:"methods",level:2},{value:"castToBaseTexture: <span><code>() -&gt; BaseTexture</code></span>",id:"casttobasetexture----basetexture",level:3},{value:"Returns:",id:"returns",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"dispose: <span><code>() -&gt; void</code></span>",id:"dispose----void",level:3},{value:"getDrawableSource: <span><code>() -&gt; PIXI.ICanvasImageSource</code></span>",id:"getdrawablesource----pixiicanvasimagesource",level:3},{value:"Returns:",id:"returns-1",level:4},{value:"resize: <span><code>(desiredWidth: number, desiredHeight: number) -&gt; void</code></span>",id:"resize-desiredwidth-number-desiredheight-number---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"setRealSize: <span><code>(realWidth: number, realHeight: number, resolution: number) -&gt; this</code></span>",id:"setrealsize-realwidth-number-realheight-number-resolution-number---this",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"setResolution: <span><code>(resolution: number) -&gt; this</code></span>",id:"setresolution-resolution-number---this",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"setResource: <span><code>(resource: R) -&gt; this</code></span>",id:"setresource-resource-r---this",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"setSize: <span><code>(desiredWidth: number, desiredHeight: number, resolution: number) -&gt; this</code></span>",id:"setsize-desiredwidth-number-desiredheight-number-resolution-number---this",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"setStyle: <span><code>(scaleMode: SCALE_MODES, mipmap: MIPMAP_MODES) -&gt; this</code></span>",id:"setstyle-scalemode-scale_modes-mipmap-mipmap_modes---this",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"update: <span><code>() -&gt; void</code></span>",id:"update----void",level:3}],o={toc:d};function p(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},o,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".BaseRenderTexture"),(0,n.kt)("p",null,"A BaseRenderTexture is a special texture that allows any PixiJS display object to be rendered to it.\n",(0,n.kt)("strong",{parentName:"p"},"Hint"),":"," All DisplayObjects (i.e. Sprites) that render to a BaseRenderTexture should be preloaded otherwise black rectangles will be drawn instead."),(0,n.kt)("p",null,"A BaseRenderTexture takes a snapshot of any Display Object given to its render method. The position and rotation of the given Display Objects is ignored. For example",":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"}," import { autoDetectRenderer, BaseRenderTexture, RenderTexture, Sprite } from 'pixi.js';\n\n const renderer = autoDetectRenderer();\n const baseRenderTexture = new BaseRenderTexture({ width: 800, height: 600 });\n const renderTexture = new RenderTexture(baseRenderTexture);\n const sprite = Sprite.from('spinObj_01.png');\n\n sprite.position.x = 800 / 2;\n sprite.position.y = 600 / 2;\n sprite.anchor.x = 0.5;\n sprite.anchor.y = 0.5;\n\n renderer.render(sprite, { renderTexture });\n\n // The Sprite in this case will be rendered using its local transform.\n // To render this sprite at 0,0 you can clear the transform\n sprite.setTransform();\n\n const baseRenderTexture = new BaseRenderTexture({ width: 100, height: 100 });\n const renderTexture = new RenderTexture(baseRenderTexture);\n\n renderer.render(sprite, { renderTexture }); // Renders to center of RenderTexture\n")),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixibaserendertexture-options-ibasetextureoptions-"},"new PIXI.BaseRenderTexture: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(options",":"," IBaseTextureOptions) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"IBaseTextureOptions")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.width"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"100")),(0,n.kt)("td",{parentName:"tr",align:null},"The width of the base render texture.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.height"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"100")),(0,n.kt)("td",{parentName:"tr",align:null},"The height of the base render texture.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.scaleMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.SCALE_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.BaseTexture.defaultOptions.scaleMode")),(0,n.kt)("td",{parentName:"tr",align:null},"See ",(0,n.kt)("a",{parentName:"td",href:"../enums/PIXI.SCALE_MODES.pixi_constants"},"PIXI.SCALE_MODES")," for possible values.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.settings.RESOLUTION")),(0,n.kt)("td",{parentName:"tr",align:null},"The resolution / device pixel ratio of the texture being generated.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.multisample"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.MSAA_QUALITY")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.MSAA_QUALITY.NONE")),(0,n.kt)("td",{parentName:"tr",align:null},"The number of samples of the frame buffer."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"extends"},"Extends"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../classes/PIXI.BaseTexture.pixi_core"},"PIXI.BaseTexture"))),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_batchenabled-number"},"_batchEnabled: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Number of the texture batch, used by multi-texture renderers")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_batchlocation-number"},"_batchLocation: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Location inside texture batch, used by multi-texture renderers")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"alphamode-pixialpha_modes"},"alphaMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.ALPHA_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.ALPHA_MODES.UNPACK"))),(0,n.kt)("p",null,"How to treat premultiplied alpha, see ",(0,n.kt)("a",{parentName:"p",href:"../enums/PIXI.ALPHA_MODES.pixi_constants"},"PIXI.ALPHA_MODES"),".")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"anisotropiclevel-number"},"anisotropicLevel: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"0"))),(0,n.kt)("p",null,"Anisotropic filtering level of texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"cacheid-string"},"cacheId: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"string"))),(0,n.kt)("p",null,"Currently default cache ID.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"clear-color"},"clear: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Color"))),(0,n.kt)("p",null,"Color object when clearning the texture.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"clearcolor-colorsource"},"clearColor: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"ColorSource"))),(0,n.kt)("p",null,"Color when clearning the texture.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroyed-boolean"},"destroyed: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,"Flag if BaseTexture has been destroyed.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dirtyid-number"},"dirtyId: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Used by TextureSystem to only update texture to the GPU when needed. Please call ",(0,n.kt)("inlineCode",{parentName:"p"},"update()")," to increment it.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"filterstack-arrayany"},"filterStack: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Array","<","any",">"))),(0,n.kt)("p",null,"The data structure for the filters.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"format-formats"},"format: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"FORMATS"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.FORMATS.RGBA"))),(0,n.kt)("p",null,"The pixel format of the texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"height-number"},"height: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The height of the base texture set when the image has loaded")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"ispoweroftwo-boolean"},"isPowerOfTwo: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"false"))),(0,n.kt)("p",null,"Whether or not the texture is a power of two, try to use power of two textures as much as you can")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"maskstack-arraymaskdata"},"maskStack: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Array","<","MaskData",">"))),(0,n.kt)("p",null,"The data structure for the stencil masks.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"mipmap-mipmap_modes"},"mipmap: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"MIPMAP_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.MIPMAP_MODES.POW2"))),(0,n.kt)("p",null,"Mipmap mode of the texture, affects downscaled images")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"parenttexturearray-pixibasetexture"},"parentTextureArray: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.BaseTexture"))),(0,n.kt)("p",null,"Whether its a part of another texture, handled by ArrayResource or CubeResource")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"realheight-number"},"realHeight: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Pixel height of the source of this texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"realwidth-number"},"realWidth: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Pixel width of the source of this texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"resolution-number"},"resolution: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.settings.RESOLUTION"))),(0,n.kt)("p",null,"The resolution / device pixel ratio of the texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"resource-pixiresource"},"resource: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.Resource"))),(0,n.kt)("p",null,"The resource used by this BaseTexture, there can only be one resource per BaseTexture, but textures can share resources.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"scalemode-scale_modes"},"scaleMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"SCALE_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.SCALE_MODES.LINEAR"))),(0,n.kt)("p",null,"The scale mode to apply when scaling this texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"target-targets"},"target: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"TARGETS"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.TARGETS.TEXTURE_2D"))),(0,n.kt)("p",null,"The target type")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"texturecacheids-arraystring"},"textureCacheIds: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Array","<","string",">"))),(0,n.kt)("p",null,"The collection of alternative cache ids, since some BaseTextures can have more than one ID, short name and longer full URL")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"type-types"},"type: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"TYPES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.TYPES.UNSIGNED_BYTE"))),(0,n.kt)("p",null,"The type of resource data")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"valid-boolean"},"valid: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,"Generally speaking means when resource is loaded.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"width-number"},"width: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The width of the base texture set when the image has loaded")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"wrapmode-wrap_modes"},"wrapMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"WRAP_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.WRAP_MODES.CLAMP"))),(0,n.kt)("p",null,"How the texture wraps")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_canvasrendertarget-pixiutilscanvasrendertarget"},"_canvasRenderTarget: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.utils.CanvasRenderTarget"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"undefined"))),(0,n.kt)("p",null,"A reference to the canvas render target (we only need one as this can be shared across renderers)")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dirtystyleid-number"},"dirtyStyleId: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Used by TextureSystem to only update texture style when needed.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"touched-number"},"touched: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Used by automatic texture Garbage Collection, stores last GC tick when it was bound")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"uid-number"},"uid: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Global unique identifier for this BaseTexture")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"casttobasetexture----basetexture"},"castToBaseTexture: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," BaseTexture"))),(0,n.kt)("p",null,"Utility function for BaseTexture","|","Texture cast."),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Destroys this texture.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dispose----void"},"dispose: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Frees the texture and framebuffer from WebGL memory without destroying this texture object. This means you can still use the texture later which will upload it to GPU memory again.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getdrawablesource----pixiicanvasimagesource"},"getDrawableSource: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," PIXI.ICanvasImageSource"))),(0,n.kt)("p",null,"Get the drawable source, such as HTMLCanvasElement or HTMLImageElement suitable for rendering with CanvasRenderer. Provided by ",(0,n.kt)("strong",{parentName:"p"},"@","pixi/canvas-renderer")," package."),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.ICanvasImageSource")),(0,n.kt)("td",{parentName:"tr",align:null},"Source to render with CanvasRenderer"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"resize-desiredwidth-number-desiredheight-number---void"},"resize: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(desiredWidth",":"," number, desiredHeight",":"," number) -",">"," void"))),(0,n.kt)("p",null,"Resizes the BaseRenderTexture."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"desiredWidth"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The desired width to resize to.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"desiredHeight"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The desired height to resize to."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setrealsize-realwidth-number-realheight-number-resolution-number---this"},"setRealSize: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(realWidth",":"," number, realHeight",":"," number, resolution",":"," number) -",">"," this"))),(0,n.kt)("p",null,"Sets real size of baseTexture, preserves current resolution."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"realWidth"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Full rendered width")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"realHeight"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Full rendered height")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Optionally set resolution")))),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setresolution-resolution-number---this"},"setResolution: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(resolution",":"," number) -",">"," this"))),(0,n.kt)("p",null,"Changes resolution"),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"res")))),(0,n.kt)("h4",{id:"returns-3"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setresource-resource-r---this"},"setResource: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(resource",":"," R) -",">"," this"))),(0,n.kt)("p",null,"Sets the resource if it wasn't set. Throws error if resource already present"),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resource"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"R")),(0,n.kt)("td",{parentName:"tr",align:null},"that is managing this BaseTexture")))),(0,n.kt)("h4",{id:"returns-4"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setsize-desiredwidth-number-desiredheight-number-resolution-number---this"},"setSize: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(desiredWidth",":"," number, desiredHeight",":"," number, resolution",":"," number) -",">"," this"))),(0,n.kt)("p",null,"Changes w/h/resolution. Texture becomes valid if width and height are greater than zero."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"desiredWidth"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Desired visual width")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"desiredHeight"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Desired visual height")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Optionally set resolution")))),(0,n.kt)("h4",{id:"returns-5"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setstyle-scalemode-scale_modes-mipmap-mipmap_modes---this"},"setStyle: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(scaleMode",":"," SCALE_MODES, mipmap",":"," MIPMAP_MODES) -",">"," this"))),(0,n.kt)("p",null,"Changes style options of BaseTexture"),(0,n.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"scaleMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"SCALE_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},"Pixi scalemode")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"mipmap"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"MIPMAP_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},"enable mipmaps")))),(0,n.kt)("h4",{id:"returns-6"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"update----void"},"update: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Invalidates the object. Texture becomes valid if width and height are greater than zero.")),(0,n.kt)("hr",null))}p.isMDXComponent=!0}}]);