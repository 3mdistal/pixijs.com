"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[9508],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,k=c["".concat(p,".").concat(d)]||c[d]||m[d]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88781:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const l={id:"PIXI.Polygon.pixi_math",title:"Class: PIXI.Polygon",sidebar_label:"PIXI.Polygon",custom_edit_url:null},o=void 0,i={unversionedId:"api/classes/PIXI.Polygon.pixi_math",id:"api/classes/PIXI.Polygon.pixi_math",title:"Class: PIXI.Polygon",description:"@pixi/math.Polygon",source:"@site/docs/api/classes/PIXI.Polygon.pixi_math.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.Polygon.pixi_math",permalink:"/api/classes/PIXI.Polygon.pixi_math",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.Polygon.pixi_math",title:"Class: PIXI.Polygon",sidebar_label:"PIXI.Polygon",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.Point",permalink:"/api/classes/PIXI.Point.pixi_math"},next:{title:"PIXI.Prepare",permalink:"/api/classes/PIXI.Prepare.pixi_prepare"}},p={},s=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"closeStroke",id:"closestroke",level:3},{value:"points",id:"points",level:3},{value:"type",id:"type",level:3},{value:"Methods",id:"methods",level:2},{value:"clone",id:"clone",level:3},{value:"Returns:",id:"returns",level:4},{value:"contains",id:"contains",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns-1",level:4}],u={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{class:"package-name"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../modules/pixi_math"},"@pixi/math"),".Polygon")),(0,r.kt)("p",null,"A class to define a shape via user defined coordinates."),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"constructor"},"Constructor:"),(0,r.kt)("h4",null,(0,r.kt)("code",null,"new PIXI.Polygon(points: Array<PIXI.IPointData> | Array<number>) ")),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"points"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array","<","PIXI.IPointData",">"," ","|"," Array","<","number",">")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"This can be an array of Points that form the polygon, a flat array of numbers that will be interpreted as ","[x,y, x,y, ...]",", or the arguments passed can be all the points of the polygon e.g.",(0,r.kt)("inlineCode",{parentName:"td"},"new Polygon(new Point(), new Point(), ...)"),", or the arguments passed can be flat x,y values e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"new Polygon(x,y, x,y, x,y, ...)")," where ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," are Numbers."))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"members"},"Members"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"closestroke"},"closeStroke"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," after moveTo, ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," after ",(0,r.kt)("inlineCode",{parentName:"p"},"closePath"),". In all other cases it is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),".")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"points"},"points"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number[]")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," An array of the points of this polygon.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"type"},"type"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"SHAPES.POLY")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.SHAPES.POLY")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The type of the object, mainly used to avoid ",(0,r.kt)("inlineCode",{parentName:"p"},"instanceof")," checks")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"clone"},"clone"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"() -",">"," Polygon")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Creates a clone of this polygon."),(0,r.kt)("h4",{id:"returns"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Polygon")),(0,r.kt)("td",{parentName:"tr",align:null},"* A copy of the polygon."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"contains"},"contains"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(x",":"," number, y",":"," number) -",">"," boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Checks whether the x and y coordinates passed to this function are contained within this polygon."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The X coordinate of the point to test.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"y"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"The Y coordinate of the point to test.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"* Whether the x/y coordinates are within this polygon."))))),(0,r.kt)("hr",null))}c.isMDXComponent=!0}}]);