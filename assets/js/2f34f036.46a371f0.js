"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[8986],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=p(t),d=o,m=g["".concat(s,".").concat(d)]||g[d]||u[d]||a;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[g]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},95109:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const a={hide_table_of_contents:!0},i="Logger",l={unversionedId:"examples/events/logger",id:"examples/events/logger",title:"Logger",description:"",source:"@site/docs/examples/events/logger.md",sourceDirName:"examples/events",slug:"/examples/events/logger",permalink:"/examples/events/logger",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/events/logger.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Nested Boundary",permalink:"/examples/events/nested-boundary-with-projection"},next:{title:"Graphics",permalink:"/examples/masks/graphics"}},s={},p=[],c={toc:p};function g(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"logger"},"Logger"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\n// This example logs the order of events hover-related events in the scene.\nconst app = new PIXI.Application<HTMLCanvasElement>({\ndocument.body.appendChild(app.view);\n    antialias: true,\n    background: '#1099bb',\n});\n\nconst title = app.stage.addChild(new PIXI.Text(\n    `Move your mouse slowly over the boxes to\n    see the order of pointerenter, pointerleave,\n    pointerover, pointerout events on each target!`, {\n        fontSize: 16,\n    },\n));\n\ntitle.x = 2;\n\nconst logs = [];\nconst logText = app.stage.addChild(new PIXI.Text('', {\n    fontSize: 14,\n}));\n\nlogText.y = 80;\nlogText.x = 2;\n\napp.stage.name = 'stage';\n\n// Mount outer black box\nconst blackBox = app.stage.addChild(new PIXI.Graphics()\n    .beginFill(0)\n    .drawRect(0, 0, 400, 400)\n    .endFill());\nblackBox.name = 'black box';\nblackBox.x = 400;\n\n// Mount white box inside the white one\nconst whiteBox = blackBox.addChild(new PIXI.Graphics()\n    .beginFill(0xffffff)\n    .drawRect(100, 100, 200, 200)\n    .endFill());\nwhiteBox.name = 'white box';\n\n// Enable interactivity everywhere!\napp.stage.interactive = true;\napp.stage.hitArea = app.screen;\nwhiteBox.interactive = true;\nblackBox.interactive = true;\n\nfunction onEvent(e) {\n    const type = e.type;\n    const targetName = e.target.name;\n    const currentTargetName = e.currentTarget.name;\n\n    // Add event to top of logs\n    logs.push(`${currentTargetName} received ${type} event (target is ${targetName})`);\n\n    if (currentTargetName === 'stage'\n        || type === 'pointerenter'\n        || type === 'pointerleave') {\n        logs.push('-----------------------------------------', '');\n    }\n\n    // Prevent logs from growing too long\n    if (logs.length > 30) {\n        while (logs.length > 30) {\n            logs.shift();\n        }\n    }\n\n    // Update logText\n    logText.text = logs.join('\\n');\n}\n\n[app.stage, whiteBox, blackBox].forEach((object) => {\n    object.addEventListener('pointerenter', onEvent);\n    object.addEventListener('pointerleave', onEvent);\n    object.addEventListener('pointerover', onEvent);\n    object.addEventListener('pointerout', onEvent);\n});\n")))}g.isMDXComponent=!0}}]);