"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[1665],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var d=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);n&&(d=d.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,d)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,d,r=function(e,n){if(null==e)return{};var t,d,r={},i=Object.keys(e);for(d=0;d<i.length;d++)t=i[d],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(d=0;d<i.length;d++)t=i[d],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=d.createContext({}),u=function(e){var n=d.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return d.createElement(s.Provider,{value:n},e.children)},p="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return d.createElement(d.Fragment,{},n)}},m=d.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,h=p["".concat(s,".").concat(m)]||p[m]||l[m]||i;return t?d.createElement(h,a(a({ref:n},c),{},{components:t})):d.createElement(h,a({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:r,a[1]=o;for(var u=2;u<i;u++)a[u]=t[u];return d.createElement.apply(null,a)}return d.createElement.apply(null,t)}m.displayName="MDXCreateElement"},65600:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var d=t(87462),r=(t(67294),t(3905));const i={hide_table_of_contents:!0},a="Tinting",o={unversionedId:"examples/basic/tinting",id:"examples/basic/tinting",title:"Tinting",description:"",source:"@site/docs/examples/basic/tinting.md",sourceDirName:"examples/basic",slug:"/examples/basic/tinting",permalink:"/examples/basic/tinting",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/basic/tinting.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"SimplePlane",permalink:"/examples/basic/simpleplane"},next:{title:"Transparent Background",permalink:"/examples/basic/transparent-background"}},s={},u=[],c={toc:u};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,d.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tinting"},"Tinting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ resizeTo: window });\ndocument.body.appendChild(app.view);\n\n// holder to store the aliens\nconst aliens = [];\n\nconst totalDudes = 20;\n\nfor (let i = 0; i < totalDudes; i++) {\n    // create a new Sprite that uses the image name that we just generated as its source\n    const dude = PIXI.Sprite.from('https://beta.pixijs.com/assets/eggHead.png');\n\n    // set the anchor point so the texture is centered on the sprite\n    dude.anchor.set(0.5);\n\n    // set a random scale for the dude - no point them all being the same size!\n    dude.scale.set(0.8 + Math.random() * 0.3);\n\n    // finally lets set the dude to be at a random position..\n    dude.x = Math.random() * app.screen.width;\n    dude.y = Math.random() * app.screen.height;\n\n    dude.tint = Math.random() * 0xFFFFFF;\n\n    // create some extra properties that will control movement :\n    // create a random direction in radians. This is a number between 0 and PI*2 which is the equivalent of 0 - 360 degrees\n    dude.direction = Math.random() * Math.PI * 2;\n\n    // this number will be used to modify the direction of the dude over time\n    dude.turningSpeed = Math.random() - 0.8;\n\n    // create a random speed for the dude between 2 - 4\n    dude.speed = 2 + Math.random() * 2;\n\n    // finally we push the dude into the aliens array so it it can be easily accessed later\n    aliens.push(dude);\n\n    app.stage.addChild(dude);\n}\n\n// create a bounding box for the little dudes\nconst dudeBoundsPadding = 100;\nconst dudeBounds = new PIXI.Rectangle(-dudeBoundsPadding,\n    -dudeBoundsPadding,\n    app.screen.width + dudeBoundsPadding * 2,\n    app.screen.height + dudeBoundsPadding * 2);\n\napp.ticker.add(() => {\n    // iterate through the dudes and update their position\n    for (let i = 0; i < aliens.length; i++) {\n        const dude = aliens[i];\n        dude.direction += dude.turningSpeed * 0.01;\n        dude.x += Math.sin(dude.direction) * dude.speed;\n        dude.y += Math.cos(dude.direction) * dude.speed;\n        dude.rotation = -dude.direction - Math.PI / 2;\n\n        // wrap the dudes by testing their bounds...\n        if (dude.x < dudeBounds.x) {\n            dude.x += dudeBounds.width;\n        } else if (dude.x > dudeBounds.x + dudeBounds.width) {\n            dude.x -= dudeBounds.width;\n        }\n\n        if (dude.y < dudeBounds.y) {\n            dude.y += dudeBounds.height;\n        } else if (dude.y > dudeBounds.y + dudeBounds.height) {\n            dude.y -= dudeBounds.height;\n        }\n    }\n});\n")))}p.isMDXComponent=!0}}]);