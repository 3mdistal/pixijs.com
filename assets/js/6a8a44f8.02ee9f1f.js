"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[8894],{3905:(e,a,t)=>{t.d(a,{Zo:()=>o,kt:()=>m});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=r.createContext({}),d=function(e){var a=r.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},o=function(e){var a=d(e.components);return r.createElement(p.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},k=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),c=d(t),k=n,m=c["".concat(p,".").concat(k)]||c[k]||u[k]||l;return t?r.createElement(m,s(s({ref:a},o),{},{components:t})):r.createElement(m,s({ref:a},o))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,s=new Array(l);s[0]=k;var i={};for(var p in a)hasOwnProperty.call(a,p)&&(i[p]=a[p]);i.originalType=e,i[c]="string"==typeof e?e:n,s[1]=i;for(var d=2;d<l;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},2302:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=t(87462),n=(t(67294),t(3905));const l={id:"PIXI.CanvasMaskSystem.pixi_canvas_renderer",title:"Class: PIXI.CanvasMaskSystem",sidebar_label:"PIXI.CanvasMaskSystem",custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/PIXI.CanvasMaskSystem.pixi_canvas_renderer",id:"api/classes/PIXI.CanvasMaskSystem.pixi_canvas_renderer",title:"Class: PIXI.CanvasMaskSystem",description:"@pixi/canvas-renderer.CanvasMaskSystem",source:"@site/docs/api/classes/PIXI.CanvasMaskSystem.pixi_canvas_renderer.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.CanvasMaskSystem.pixi_canvas_renderer",permalink:"/api/classes/PIXI.CanvasMaskSystem.pixi_canvas_renderer",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.CanvasMaskSystem.pixi_canvas_renderer",title:"Class: PIXI.CanvasMaskSystem",sidebar_label:"PIXI.CanvasMaskSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.CanvasGraphicsRenderer",permalink:"/api/classes/PIXI.CanvasGraphicsRenderer.pixi_canvas_graphics"},next:{title:"PIXI.CanvasMeshRenderer",permalink:"/api/classes/PIXI.CanvasMeshRenderer.pixi_canvas_mesh"}},p={},d=[{value:"new PIXI.CanvasMaskSystem: <span><code>(renderer: CanvasRenderer) </code></span>",id:"new-pixicanvasmasksystem-renderer-canvasrenderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"popMask: <span><code>(renderer: CanvasRenderer) -&gt; void</code></span>",id:"popmask-renderer-canvasrenderer---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"pushMask: <span><code>(maskData: MaskData | Graphics) -&gt; void</code></span>",id:"pushmask-maskdata-maskdata--graphics---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"recursiveFindShapes: <span><code>(container: Container, out: Array&lt;Graphics&gt;) -&gt; void</code></span>",id:"recursivefindshapes-container-container-out-arraygraphics---void",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"renderGraphicsShape: <span><code>(graphics: Graphics) -&gt; void</code></span>",id:"rendergraphicsshape-graphics-graphics---void",level:3},{value:"Parameters:",id:"parameters-4",level:4}],o={toc:d};function c(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_canvas_renderer"},"@pixi/canvas-renderer"),".CanvasMaskSystem"),(0,n.kt)("p",null,"A set of functions used to handle masking.\nSprite masking is not supported on the CanvasRenderer."),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixicanvasmasksystem-renderer-canvasrenderer-"},"new PIXI.CanvasMaskSystem: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," CanvasRenderer) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"CanvasRenderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"A reference to the current renderer"))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Destroys this canvas mask manager.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"popmask-renderer-canvasrenderer---void"},"popMask: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," CanvasRenderer) -",">"," void"))),(0,n.kt)("p",null,"Restores the current drawing context to the state it was before the mask was applied."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"CanvasRenderer")),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer context to use."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"pushmask-maskdata-maskdata--graphics---void"},"pushMask: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(maskData",":"," MaskData ","|"," Graphics) -",">"," void"))),(0,n.kt)("p",null,"This method adds it to the current stack of masks."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maskData"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"MaskData ","|"," Graphics")),(0,n.kt)("td",{parentName:"tr",align:null},"the maskData that will be pushed"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"recursivefindshapes-container-container-out-arraygraphics---void"},"recursiveFindShapes: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(container",":"," Container, out",":"," Array","<","Graphics",">",") -",">"," void"))),(0,n.kt)("p",null,"Renders all PIXI.Graphics shapes in a subtree."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"container"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Container")),(0,n.kt)("td",{parentName:"tr",align:null},"container to scan.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"out"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","Graphics",">")),(0,n.kt)("td",{parentName:"tr",align:null},"where to put found shapes"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"rendergraphicsshape-graphics-graphics---void"},"renderGraphicsShape: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(graphics",":"," Graphics) -",">"," void"))),(0,n.kt)("p",null,"Renders a PIXI.Graphics shape."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"graphics"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Graphics")),(0,n.kt)("td",{parentName:"tr",align:null},"The object to render."))))),(0,n.kt)("hr",null))}c.isMDXComponent=!0}}]);