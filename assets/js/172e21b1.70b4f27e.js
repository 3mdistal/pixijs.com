"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[4778],{3905:(n,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>u});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var p=a.createContext({}),s=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},l=function(n){var e=s(n.components);return a.createElement(p.Provider,{value:e},n.children)},h="mdxType",g={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,p=n.parentName,l=c(n,["components","mdxType","originalType","parentName"]),h=s(t),d=r,u=h["".concat(p,".").concat(d)]||h[d]||g[d]||i;return t?a.createElement(u,o(o({ref:e},l),{},{components:t})):a.createElement(u,o({ref:e},l))}));function u(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,o=new Array(i);o[0]=d;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=n,c[h]="string"==typeof n?n:r,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5406:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const i={hide_table_of_contents:!0},o="Dynamic",c={unversionedId:"examples/graphics/dynamic",id:"examples/graphics/dynamic",title:"Dynamic",description:"",source:"@site/docs/examples/graphics/dynamic.md",sourceDirName:"examples/graphics",slug:"/examples/graphics/dynamic",permalink:"/examples/graphics/dynamic",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/graphics/dynamic.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Advanced",permalink:"/examples/graphics/advanced"},next:{title:"Simple",permalink:"/examples/graphics/simple"}},p={},s=[],l={toc:s};function h(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,a.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dynamic"},"Dynamic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ antialias: true, resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\napp.stage.interactive = true;\napp.stage.hitArea = app.screen;\n\nconst graphics = new PIXI.Graphics();\n\n// set a fill and line style\ngraphics.beginFill(0xFF3300);\ngraphics.lineStyle(10, 0xffd900, 1);\n\n// draw a shape\ngraphics.moveTo(50, 50);\ngraphics.lineTo(250, 50);\ngraphics.lineTo(100, 100);\ngraphics.lineTo(250, 220);\ngraphics.lineTo(50, 220);\ngraphics.lineTo(50, 50);\ngraphics.closePath();\ngraphics.endFill();\n\n// set a fill and line style again\ngraphics.lineStyle(10, 0xFF0000, 0.8);\ngraphics.beginFill(0xFF700B, 1);\n\n// draw a second shape\ngraphics.moveTo(210, 300);\ngraphics.lineTo(450, 320);\ngraphics.lineTo(570, 350);\ngraphics.quadraticCurveTo(600, 0, 480, 100);\ngraphics.lineTo(330, 120);\ngraphics.lineTo(410, 200);\ngraphics.lineTo(210, 300);\ngraphics.closePath();\ngraphics.endFill();\n\n// draw a rectangle\ngraphics.lineStyle(2, 0x0000FF, 1);\ngraphics.drawRect(50, 250, 100, 100);\n\n// draw a circle\ngraphics.lineStyle(0);\ngraphics.beginFill(0xFFFF0B, 0.5);\ngraphics.drawCircle(470, 200, 100);\ngraphics.endFill();\n\ngraphics.lineStyle(20, 0x33FF00);\ngraphics.moveTo(30, 30);\ngraphics.lineTo(600, 300);\n\napp.stage.addChild(graphics);\n\n// let's create a moving shape\nconst thing = new PIXI.Graphics();\n\napp.stage.addChild(thing);\nthing.x = 800 / 2;\nthing.y = 600 / 2;\n\nlet count = 0;\n\n// Just click on the stage to draw random lines\nwindow.app = app;\napp.stage.on('pointerdown', () =>\n{\n    graphics.lineStyle(Math.random() * 30, Math.random() * 0xFFFFFF, 1);\n    graphics.moveTo(Math.random() * 800, Math.random() * 600);\n    graphics.bezierCurveTo(\n        Math.random() * 800, Math.random() * 600,\n        Math.random() * 800, Math.random() * 600,\n        Math.random() * 800, Math.random() * 600,\n    );\n});\n\napp.ticker.add(() =>\n{\n    count += 0.1;\n\n    thing.clear();\n    thing.lineStyle(10, 0xff0000, 1);\n    thing.beginFill(0xffFF00, 0.5);\n\n    thing.moveTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n    thing.lineTo(120 + Math.cos(count) * 20, -100 + Math.sin(count) * 20);\n    thing.lineTo(120 + Math.sin(count) * 20, 100 + Math.cos(count) * 20);\n    thing.lineTo(-120 + Math.cos(count) * 20, 100 + Math.sin(count) * 20);\n    thing.lineTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n    thing.closePath();\n\n    thing.rotation = count * 0.1;\n});\n")))}h.isMDXComponent=!0}}]);