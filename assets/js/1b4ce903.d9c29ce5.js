"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[2331],{3905:(t,e,a)=>{a.d(e,{Zo:()=>k,kt:()=>c});var l=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,l)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,l,n=function(t,e){if(null==t)return{};var a,l,n={},r=Object.keys(t);for(l=0;l<r.length;l++)a=r[l],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(l=0;l<r.length;l++)a=r[l],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var u=l.createContext({}),o=function(t){var e=l.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},k=function(t){var e=o(t.components);return l.createElement(u.Provider,{value:e},t.children)},d="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},m=l.forwardRef((function(t,e){var a=t.components,n=t.mdxType,r=t.originalType,u=t.parentName,k=p(t,["components","mdxType","originalType","parentName"]),d=o(a),m=n,c=d["".concat(u,".").concat(m)]||d[m]||s[m]||r;return a?l.createElement(c,i(i({ref:e},k),{},{components:a})):l.createElement(c,i({ref:e},k))}));function c(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var r=a.length,i=new Array(r);i[0]=m;var p={};for(var u in e)hasOwnProperty.call(e,u)&&(p[u]=e[u]);p.originalType=t,p[d]="string"==typeof t?t:n,i[1]=p;for(var o=2;o<r;o++)i[o]=a[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}m.displayName="MDXCreateElement"},22741:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>o});var l=a(87462),n=(a(67294),a(3905));const r={id:"PIXI.GraphicsGeometry.pixi_graphics",title:"Class: PIXI.GraphicsGeometry",sidebar_label:"PIXI.GraphicsGeometry",custom_edit_url:null},i=void 0,p={unversionedId:"api/classes/PIXI.GraphicsGeometry.pixi_graphics",id:"api/classes/PIXI.GraphicsGeometry.pixi_graphics",title:"Class: PIXI.GraphicsGeometry",description:"@pixi/graphics.GraphicsGeometry",source:"@site/docs/api/classes/PIXI.GraphicsGeometry.pixi_graphics.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.GraphicsGeometry.pixi_graphics",permalink:"/api/classes/PIXI.GraphicsGeometry.pixi_graphics",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.GraphicsGeometry.pixi_graphics",title:"Class: PIXI.GraphicsGeometry",sidebar_label:"PIXI.GraphicsGeometry",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.GraphicsData",permalink:"/api/classes/PIXI.GraphicsData.pixi_graphics"},next:{title:"PIXI.HTMLText",permalink:"/api/classes/PIXI.HTMLText.pixi_text_html"}},u={},o=[{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"BATCHABLE_SIZE",id:"batchable_size",level:3},{value:"batchDirty",id:"batchdirty",level:3},{value:"batches",id:"batches",level:3},{value:"bounds",id:"bounds",level:3},{value:"boundsPadding",id:"boundspadding",level:3},{value:"closePointEps",id:"closepointeps",level:3},{value:"colors",id:"colors",level:3},{value:"drawCalls",id:"drawcalls",level:3},{value:"glVertexArrayObjects",id:"glvertexarrayobjects",level:3},{value:"graphicsData",id:"graphicsdata",level:3},{value:"indices",id:"indices",level:3},{value:"instanceCount",id:"instancecount",level:3},{value:"instanced",id:"instanced",level:3},{value:"points",id:"points",level:3},{value:"refCount",id:"refcount",level:3},{value:"textureIds",id:"textureids",level:3},{value:"uvs",id:"uvs",level:3},{value:"_bounds",id:"_bounds",level:3},{value:"_buffer",id:"_buffer",level:3},{value:"_indexBuffer",id:"_indexbuffer",level:3},{value:"boundsDirty",id:"boundsdirty",level:3},{value:"cacheDirty",id:"cachedirty",level:3},{value:"clearDirty",id:"cleardirty",level:3},{value:"dirty",id:"dirty",level:3},{value:"shapeIndex",id:"shapeindex",level:3},{value:"Methods",id:"methods",level:2},{value:"addAttribute",id:"addattribute",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"addIndex",id:"addindex",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"clear",id:"clear",level:3},{value:"Returns:",id:"returns-2",level:4},{value:"clone",id:"clone",level:3},{value:"Returns:",id:"returns-3",level:4},{value:"containsPoint",id:"containspoint",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"destroy",id:"destroy",level:3},{value:"dispose",id:"dispose",level:3},{value:"drawHole",id:"drawhole",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"drawShape",id:"drawshape",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"getAttribute",id:"getattribute",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"getBuffer",id:"getbuffer",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"getIndex",id:"getindex",level:3},{value:"Returns:",id:"returns-9",level:4},{value:"getSize",id:"getsize",level:3},{value:"Returns:",id:"returns-10",level:4},{value:"interleave",id:"interleave",level:3},{value:"Returns:",id:"returns-11",level:4},{value:"updateBatches",id:"updatebatches",level:3},{value:"_compareStyles",id:"_comparestyles",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Returns:",id:"returns-12",level:4},{value:"addColors",id:"addcolors",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"addTextureIds",id:"addtextureids",level:3},{value:"Parameters:",id:"parameters-9",level:4},{value:"addUvs",id:"adduvs",level:3},{value:"Parameters:",id:"parameters-10",level:4},{value:"adjustUvs",id:"adjustuvs",level:3},{value:"Parameters:",id:"parameters-11",level:4},{value:"buildDrawCalls",id:"builddrawcalls",level:3},{value:"calculateBounds",id:"calculatebounds",level:3},{value:"invalidate",id:"invalidate",level:3},{value:"isBatchable",id:"isbatchable",level:3},{value:"Returns:",id:"returns-13",level:4},{value:"packAttributes",id:"packattributes",level:3},{value:"packBatches",id:"packbatches",level:3},{value:"processFill",id:"processfill",level:3},{value:"Parameters:",id:"parameters-12",level:4},{value:"processHoles",id:"processholes",level:3},{value:"Parameters:",id:"parameters-13",level:4},{value:"processLine",id:"processline",level:3},{value:"Parameters:",id:"parameters-14",level:4},{value:"transformPoints",id:"transformpoints",level:3},{value:"Parameters:",id:"parameters-15",level:4},{value:"validateBatching",id:"validatebatching",level:3},{value:"Returns:",id:"returns-14",level:4}],k={toc:o};function d(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,l.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("div",{class:"package-name"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_graphics"},"@pixi/graphics"),".GraphicsGeometry")),(0,n.kt)("p",null,"The Graphics class contains methods used to draw primitive shapes such as lines, circles and rectangles to the display, and to color and fill them."),(0,n.kt)("p",null,"GraphicsGeometry is designed to not be continually updating the geometry since it's expensive to re-tesselate using ",(0,n.kt)("strong",{parentName:"p"},"earcut"),". Consider using ",(0,n.kt)("a",{parentName:"p",href:"../classes/PIXI.Mesh.pixi_mesh"},"PIXI.Mesh")," for this use-case, it's much faster."),(0,n.kt)("article",null,"### Contructor:",(0,n.kt)("h4",null,(0,n.kt)("code",null,"new PIXI()"))),(0,n.kt)("h2",{id:"extends"},"Extends"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../classes/PIXI.BatchGeometry.pixi_core"},"PIXI.BatchGeometry"))),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"batchable_size"},"BATCHABLE_SIZE"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"100")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:"),' The maximum number of points to consider an object "batchable", able to be batched by the renderer\'s batch system.')),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"batchdirty"},"batchDirty"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"-1")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Batches need to regenerated if the geometry is updated.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"batches"},"batches"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Array","<","PIXI.graphicsUtils.BatchPart",">")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Intermediate abstract format sent to batch system. Can be converted to drawCalls or to batchable objects.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"bounds"},"bounds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Bounds")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Get the current bounds of the graphic geometry.\nSince 6.5.0, bounds of the graphics geometry are calculated based on the vertices of generated geometry. Since shapes or strokes with full transparency (",(0,n.kt)("inlineCode",{parentName:"p"},"alpha: 0"),") will not generate geometry, they are not considered when calculating bounds for the graphics geometry. See PR ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/pull/8343"},"#8343")," and issue ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/pull/8623"},"#8623"),".")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"boundspadding"},"boundsPadding"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"0")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Padding to add to the bounds.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"closepointeps"},"closePointEps"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"0.0001")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Minimal distance between points that are considered different. Affects line tesselation.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"colors"},"colors"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number[]")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The collection of colors")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"drawcalls"},"drawCalls"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Array","<","PIXI.BatchDrawCall",">")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," List of current draw calls drived from the batches.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"glvertexarrayobjects"},"glVertexArrayObjects"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"object")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," A map of renderer IDs to webgl VAOs")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"graphicsdata"},"graphicsData"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Array","<","PIXI.GraphicsData",">")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The collection of drawn shapes.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"indices"},"indices"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number[]")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The indices of the vertices")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"instancecount"},"instanceCount"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"1")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Number of instances in this geometry, pass it to ",(0,n.kt)("inlineCode",{parentName:"p"},"GeometrySystem.draw()"),".")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"instanced"},"instanced"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"boolean")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Whether the geometry is instanced.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"points"},"points"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number[]")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," An array of points to draw, 2 numbers per point")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"refcount"},"refCount"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Count of existing (not destroyed) meshes that reference this geometry.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"textureids"},"textureIds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number[]")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Reference to the texture IDs.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"uvs"},"uvs"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number[]")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The UVs collection")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_bounds"},"_bounds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Bounds")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Cached bounds.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_buffer"},"_buffer"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Buffer")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Buffer used for position, color, texture IDs")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_indexbuffer"},"_indexBuffer"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Buffer")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Index buffer data")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"boundsdirty"},"boundsDirty"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"-1")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The bounds dirty flag.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"cachedirty"},"cacheDirty"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"-1")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Used to check if the cache is dirty.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"cleardirty"},"clearDirty"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"0")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Used to detect if we cleared the graphicsData.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dirty"},"dirty"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"0")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Used to detect if the graphics object has changed.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"shapeindex"},"shapeIndex"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,n.kt)("code",null,"0")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Index of the last batched shape in the stack of calls.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"addattribute"},"addAttribute"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(id",":"," string, buffer",":"," PIXI.Buffer ","|"," Array","<","number",">",", size",":"," number, normalized",":"," boolean, type",":"," TYPES, stride",":"," number, start",":"," number, instance",":"," boolean) -",">"," this")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Adds an attribute to the geometry Note",":"," ",(0,n.kt)("inlineCode",{parentName:"p"},"stride")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"start")," should be ",(0,n.kt)("inlineCode",{parentName:"p"},"undefined")," if you dont know them, not 0!"),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"id"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"the name of the attribute (matching up to a shader)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"buffer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.Buffer ","|"," Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null},"the buffer that holds the data of the attribute . You can also provide an Array and a buffer will be created from it.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"size"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"normalized"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"should the data be normalized.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"type"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"TYPES")),(0,n.kt)("td",{parentName:"tr",align:null},"what type of number is the attribute. Check ",(0,n.kt)("a",{parentName:"td",href:"../enums/PIXI.TYPES.pixi_constants"},"PIXI.TYPES")," to see the ones available")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"stride"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"How far apart, in bytes, the start of each value is. (used for interleaving data)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"start"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"How far into the array to start reading values (used for interleaving data)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"instance"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"Instancing flag")))),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"addindex"},"addIndex"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(buffer",":"," PIXI.Buffer ","|"," Array","<","number",">",") -",">"," Geometry")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Adds an index buffer to the geometry The index buffer contains integers, three for each triangle in the geometry, which reference the various attribute buffers (position, colour, UV coordinates, other UV coordinates, normal, \u2026). There is only ONE index buffer."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"buffer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.Buffer ","|"," Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The buffer that holds the data of the index buffer. You can also provide an Array and a buffer will be created from it.")))),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"clear"},"clear"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," GraphicsGeometry")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings."),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GraphicsGeometry")),(0,n.kt)("td",{parentName:"tr",align:null},"* This GraphicsGeometry object. Good for chaining method calls"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"clone"},"clone"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," Geometry")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Returns a clone of the geometry."),(0,n.kt)("h4",{id:"returns-3"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"* A new clone of this geometry."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"containspoint"},"containsPoint"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(point",":"," IPointData) -",">"," boolean")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Check to see if a point is contained within this geometry."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"point"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"IPointData")),(0,n.kt)("td",{parentName:"tr",align:null},"Point to check if it's contained.")))),(0,n.kt)("h4",{id:"returns-4"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"true")," if the point is contained within geometry."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy"},"destroy"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Destroys the GraphicsGeometry object.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dispose"},"dispose"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Disposes WebGL resources that are connected to this geometry.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"drawhole"},"drawHole"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(shape",":"," PIXI.Circle ","|"," PIXI.Ellipse ","|"," PIXI.Polygon ","|"," PIXI.Rectangle ","|"," PIXI.RoundedRectangle, matrix",":"," Matrix) -",">"," GraphicsGeometry")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shape"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.Circle ","|"," PIXI.Ellipse ","|"," PIXI.Polygon ","|"," PIXI.Rectangle ","|"," PIXI.RoundedRectangle")),(0,n.kt)("td",{parentName:"tr",align:null},"The shape object to draw.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("td",{parentName:"tr",align:null},"Transform applied to the points of the shape.")))),(0,n.kt)("h4",{id:"returns-5"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GraphicsGeometry")),(0,n.kt)("td",{parentName:"tr",align:null},"* Returns geometry for chaining."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"drawshape"},"drawShape"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(shape",":"," PIXI.Circle ","|"," PIXI.Ellipse ","|"," PIXI.Polygon ","|"," PIXI.Rectangle ","|"," PIXI.RoundedRectangle, fillStyle",":"," FillStyle, lineStyle",":"," LineStyle, matrix",":"," Matrix) -",">"," GraphicsGeometry")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shape"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.Circle ","|"," PIXI.Ellipse ","|"," PIXI.Polygon ","|"," PIXI.Rectangle ","|"," PIXI.RoundedRectangle")),(0,n.kt)("td",{parentName:"tr",align:null},"The shape object to draw.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"fillStyle"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"FillStyle")),(0,n.kt)("td",{parentName:"tr",align:null},"Defines style of the fill.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"lineStyle"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"LineStyle")),(0,n.kt)("td",{parentName:"tr",align:null},"Defines style of the lines.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("td",{parentName:"tr",align:null},"Transform applied to the points of the shape.")))),(0,n.kt)("h4",{id:"returns-6"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GraphicsGeometry")),(0,n.kt)("td",{parentName:"tr",align:null},"* Returns geometry for chaining."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getattribute"},"getAttribute"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(id",":"," string) -",">"," Attribute")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Returns the requested attribute."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"id"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"The name of the attribute required")))),(0,n.kt)("h4",{id:"returns-7"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Attribute")),(0,n.kt)("td",{parentName:"tr",align:null},"* The attribute requested."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getbuffer"},"getBuffer"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(id",":"," string) -",">"," Buffer")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Returns the requested buffer."),(0,n.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"id"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"The name of the buffer required.")))),(0,n.kt)("h4",{id:"returns-8"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Buffer")),(0,n.kt)("td",{parentName:"tr",align:null},"* The buffer requested."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getindex"},"getIndex"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," Buffer")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Returns the index buffer"),(0,n.kt)("h4",{id:"returns-9"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Buffer")),(0,n.kt)("td",{parentName:"tr",align:null},"* The index buffer."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getsize"},"getSize"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Get the size of the geometries, in vertices."),(0,n.kt)("h4",{id:"returns-10"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"interleave"},"interleave"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," Geometry")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," This function modifies the structure so that all current attributes become interleaved into a single buffer This can be useful if your model remains static as it offers a little performance boost"),(0,n.kt)("h4",{id:"returns-11"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"updatebatches"},"updateBatches"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Generates intermediate batch data. Either gets converted to drawCalls or used to convert to batch objects directly by the Graphics object.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_comparestyles"},"_compareStyles"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(styleA",":"," FillStyle ","|"," LineStyle, styleB",":"," FillStyle ","|"," LineStyle) -",">"," boolean")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Affinity check"),(0,n.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"styleA"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"FillStyle ","|"," LineStyle")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"styleB"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"FillStyle ","|"," LineStyle")),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h4",{id:"returns-12"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"addcolors"},"addColors"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(colors",":"," Array","<","number",">",", color",":"," number, alpha",":"," number, size",":"," number, offset",":"," number) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Add colors."),(0,n.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"colors"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null},"List of colors to add to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"color"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Color to add")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"alpha"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Alpha to use")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"size"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Number of colors to add")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"offset"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"addtextureids"},"addTextureIds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(textureIds",":"," Array","<","number",">",", id",":"," number, size",":"," number, offset",":"," number) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Add texture id that the shader/fragment wants to use."),(0,n.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"textureIds"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"id"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"size"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"offset"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"adduvs"},"addUvs"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(verts",":"," Array","<","number",">",", uvs",":"," Array","<","number",">",", texture",":"," Texture, start",":"," number, size",":"," number, matrix",":"," Matrix) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Generates the UVs for a shape."),(0,n.kt)("h4",{id:"parameters-10"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"verts"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null},"Vertices")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uvs"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null},"UVs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"texture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Texture")),(0,n.kt)("td",{parentName:"tr",align:null},"Reference to Texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"start"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Index buffer start index.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"size"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The size/length for index buffer.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("td",{parentName:"tr",align:null},"Optional transform for all points."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"adjustuvs"},"adjustUvs"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(uvs",":"," Array","<","number",">",", texture",":"," Texture, start",":"," number, size",":"," number) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Modify uvs array according to position of texture region Does not work with rotated or trimmed textures"),(0,n.kt)("h4",{id:"parameters-11"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uvs"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null},"array")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"texture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Texture")),(0,n.kt)("td",{parentName:"tr",align:null},"region")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"start"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"starting index for uvs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"size"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"how many points to adjust"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"builddrawcalls"},"buildDrawCalls"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Converts intermediate batches data to drawCalls.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"calculatebounds"},"calculateBounds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Update the local bounds of the object. Expensive to use performance-wise.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"invalidate"},"invalidate"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Call if you changed graphicsData manually. Empties all batch buffers.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"isbatchable"},"isBatchable"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," boolean")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Checks to see if this graphics geometry can be batched. Currently it needs to be small enough and not contain any native lines."),(0,n.kt)("h4",{id:"returns-13"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"packattributes"},"packAttributes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Packs attributes to single buffer.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"packbatches"},"packBatches"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Offset the indices so that it works with the batcher.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"processfill"},"processFill"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(data",":"," GraphicsData) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Process fill part of Graphics."),(0,n.kt)("h4",{id:"parameters-12"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"data"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GraphicsData")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"processholes"},"processHoles"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(holes",":"," Array","<","GraphicsData",">",") -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Process the holes data."),(0,n.kt)("h4",{id:"parameters-13"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"holes"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","GraphicsData",">")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"processline"},"processLine"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(data",":"," GraphicsData) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Process line part of Graphics."),(0,n.kt)("h4",{id:"parameters-14"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"data"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GraphicsData")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"transformpoints"},"transformPoints"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(points",":"," Array","<","number",">",", matrix",":"," Matrix) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Transform points using matrix."),(0,n.kt)("h4",{id:"parameters-15"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"points"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","number",">")),(0,n.kt)("td",{parentName:"tr",align:null},"Points to transform")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("td",{parentName:"tr",align:null},"Transform matrix"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"validatebatching"},"validateBatching"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," boolean")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Test geometry for batching process."),(0,n.kt)("h4",{id:"returns-14"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null))}d.isMDXComponent=!0}}]);