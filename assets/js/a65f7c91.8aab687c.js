"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[7315],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>c});var l=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,l,a=function(e,t){if(null==e)return{};var r,l,a={},n=Object.keys(e);for(l=0;l<n.length;l++)r=n[l],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)r=n[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=l.createContext({}),o=function(e){var t=l.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=o(e.components);return l.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,p=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),s=o(r),k=a,c=s["".concat(p,".").concat(k)]||s[k]||m[k]||n;return r?l.createElement(c,i(i({ref:t},d),{},{components:r})):l.createElement(c,i({ref:t},d))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=k;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u[s]="string"==typeof e?e:a,i[1]=u;for(var o=2;o<n;o++)i[o]=r[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,r)}k.displayName="MDXCreateElement"},98296:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>n,metadata:()=>u,toc:()=>o});var l=r(87462),a=(r(67294),r(3905));const n={id:"PIXI.FilterSystem.pixi_core",title:"Class: PIXI.FilterSystem",sidebar_label:"PIXI.FilterSystem",custom_edit_url:null},i=void 0,u={unversionedId:"api/classes/PIXI.FilterSystem.pixi_core",id:"api/classes/PIXI.FilterSystem.pixi_core",title:"Class: PIXI.FilterSystem",description:"@pixi/core.FilterSystem",source:"@site/docs/api/classes/PIXI.FilterSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.FilterSystem.pixi_core",permalink:"/api/classes/PIXI.FilterSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.FilterSystem.pixi_core",title:"Class: PIXI.FilterSystem",sidebar_label:"PIXI.FilterSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.Filter",permalink:"/api/classes/PIXI.Filter.pixi_core"},next:{title:"PIXI.Framebuffer",permalink:"/api/classes/PIXI.Framebuffer.pixi_core"}},p={},o=[{value:"Pipeline",id:"pipeline",level:2},{value:"Usage",id:"usage",level:2},{value:"new PIXI.FilterSystem: <span><code>(renderer: Renderer) </code></span>",id:"new-pixifiltersystem-renderer-renderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"defaultFilterStack: <span><code>Array&lt;object&gt;</code></span>",id:"defaultfilterstack-arrayobject",level:3},{value:"forceClear: <span><code>boolean</code></span>",id:"forceclear-boolean",level:3},{value:"statePool: <span><code>Array&lt;FilterState&gt;</code></span>",id:"statepool-arrayfilterstate",level:3},{value:"texturePool: <span><code>RenderTexturePool</code></span>",id:"texturepool-rendertexturepool",level:3},{value:"useMaxPadding: <span><code>boolean</code></span>",id:"usemaxpadding-boolean",level:3},{value:"activeState: <span><code>object</code></span>",id:"activestate-object",level:3},{value:"globalUniforms: <span><code>UniformGroup</code></span>",id:"globaluniforms-uniformgroup",level:3},{value:"filterArea: <span><code>Float32Array</code></span>",id:"filterarea-float32array",level:3},{value:"filterClamp: <span><code>Float32Array</code></span>",id:"filterclamp-float32array",level:3},{value:"inputClamp: <span><code>Float32Array</code></span>",id:"inputclamp-float32array",level:3},{value:"inputPixel: <span><code>Float32Array</code></span>",id:"inputpixel-float32array",level:3},{value:"inputSize: <span><code>Float32Array</code></span>",id:"inputsize-float32array",level:3},{value:"outputFrame: <span><code>PIXI.Rectangle</code></span>",id:"outputframe-pixirectangle",level:3},{value:"resolution: <span><code>number</code></span>",id:"resolution-number",level:3},{value:"quad: <span><code>Quad</code></span>",id:"quad-quad",level:3},{value:"quadUv: <span><code>QuadUv</code></span>",id:"quaduv-quaduv",level:3},{value:"Methods",id:"methods",level:2},{value:"applyFilter: <span><code>(filter: Filter, input: RenderTexture, output: RenderTexture, clearMode: CLEAR_MODES) -&gt; void</code></span>",id:"applyfilter-filter-filter-input-rendertexture-output-rendertexture-clearmode-clear_modes---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"bindAndClear: <span><code>(filterTexture: RenderTexture, clearMode: CLEAR_MODES) -&gt; void</code></span>",id:"bindandclear-filtertexture-rendertexture-clearmode-clear_modes---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"calculateSpriteMatrix: <span><code>(outputMatrix: Matrix, sprite: PIXI.Sprite) -&gt; Matrix</code></span>",id:"calculatespritematrix-outputmatrix-matrix-sprite-pixisprite---matrix",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"emptyPool: <span><code>() -&gt; void</code></span>",id:"emptypool----void",level:3},{value:"getFilterTexture: <span><code>(input: RenderTexture, resolution: number, multisample: MSAA_QUALITY) -&gt; RenderTexture</code></span>",id:"getfiltertexture-input-rendertexture-resolution-number-multisample-msaa_quality---rendertexture",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"pop: <span><code>() -&gt; void</code></span>",id:"pop----void",level:3},{value:"push: <span><code>(target: PIXI.DisplayObject, filters: Array&lt;Filter&gt;) -&gt; void</code></span>",id:"push-target-pixidisplayobject-filters-arrayfilter---void",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"resize: <span><code>() -&gt; void</code></span>",id:"resize----void",level:3},{value:"returnFilterTexture: <span><code>(renderTexture: RenderTexture) -&gt; void</code></span>",id:"returnfiltertexture-rendertexture-rendertexture---void",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"getOptimalFilterTexture: <span><code>(minWidth: number, minHeight: number, resolution: number, multisample: MSAA_QUALITY) -&gt; RenderTexture</code></span>",id:"getoptimalfiltertexture-minwidth-number-minheight-number-resolution-number-multisample-msaa_quality---rendertexture",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Returns:",id:"returns-2",level:4}],d={toc:o};function s(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,l.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".FilterSystem"),(0,a.kt)("p",null,"System plugin to the renderer to manage filters."),(0,a.kt)("h2",{id:"pipeline"},"Pipeline"),(0,a.kt)("p",null,"The FilterSystem executes the filtering pipeline by rendering the display-object into a texture, applying its ",(0,a.kt)("a",{parentName:"p",href:"../classes/PIXI.Filter.pixi_core"},"filters")," in series, and the last filter outputs into the final render-target."),(0,a.kt)("p",null,"The filter-frame is the rectangle in world space being filtered, and those contents are mapped into",(0,a.kt)("inlineCode",{parentName:"p"},"(0, 0, filterFrame.width, filterFrame.height)")," into the filter render-texture. The filter-frame is also called the source-frame, as it is used to bind the filter render-textures. The last filter outputs to the ",(0,a.kt)("inlineCode",{parentName:"p"},"filterFrame"),"in the final render-target."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../classes/PIXI.Container.pixi_display#renderAdvanced"},"PIXI.Container#renderAdvanced")," is an example of how to use the filter system. It is a 3 step process",":"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"push"),":"," Use ",(0,a.kt)("a",{parentName:"p",href:"../classes/PIXI.FilterSystem.pixi_core#push"},"PIXI.FilterSystem#push")," to push the set of filters to be applied on a filter-target.",(0,a.kt)("strong",{parentName:"p"},"render"),":"," Render the contents to be filtered using the renderer. The filter-system will only capture the contents inside the bounds of the filter-target. NOTE",":"," Using ",(0,a.kt)("a",{parentName:"p",href:"../classes/PIXI.Renderer.pixi_core#render"},"PIXI.Renderer#render")," is illegal during an existing render cycle, and it may reset the filter system.",(0,a.kt)("strong",{parentName:"p"},"pop"),":"," Use ",(0,a.kt)("a",{parentName:"p",href:"../classes/PIXI.FilterSystem.pixi_core#pop"},"PIXI.FilterSystem#pop")," to pop & execute the filters you initially pushed. It will apply them serially and output to the bounds of the filter-target."),(0,a.kt)("p",null,"// TODO: @see"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"new-pixifiltersystem-renderer-renderer-"},"new PIXI.FilterSystem: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(renderer",":"," Renderer) "))),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"renderer"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Renderer")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null)),(0,a.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"defaultfilterstack-arrayobject"},"defaultFilterStack: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Array","<","object",">"))),(0,a.kt)("p",null,"List of filters for the FilterSystem")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"forceclear-boolean"},"forceClear: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"boolean"))),(0,a.kt)("p",null,"Whether to clear output renderTexture in AUTO/BLIT mode. See ",(0,a.kt)("a",{parentName:"p",href:"../enums/PIXI.CLEAR_MODES.pixi_constants"},"PIXI.CLEAR_MODES"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"statepool-arrayfilterstate"},"statePool: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Array","<","FilterState",">"))),(0,a.kt)("p",null,"A pool for storing filter states, save us creating new ones each tick.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"texturepool-rendertexturepool"},"texturePool: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"RenderTexturePool"))),(0,a.kt)("p",null,"Stores a bunch of POT textures used for filtering.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"usemaxpadding-boolean"},"useMaxPadding: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"boolean"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,a.kt)("code",null,"false"))),(0,a.kt)("p",null,"Old padding behavior is to use the max amount instead of sum padding. Use this flag if you need the old behavior.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"activestate-object"},"activeState: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"object"))),(0,a.kt)("p",null,"Active state")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"globaluniforms-uniformgroup"},"globalUniforms: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"UniformGroup"))),(0,a.kt)("p",null,"This uniform group is attached to filter uniforms when used.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"filterarea-float32array"},"filterArea: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Float32Array")))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"filterclamp-float32array"},"filterClamp: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Float32Array")))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"inputclamp-float32array"},"inputClamp: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Float32Array")))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"inputpixel-float32array"},"inputPixel: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Float32Array")))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"inputsize-float32array"},"inputSize: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Float32Array")))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"outputframe-pixirectangle"},"outputFrame: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"PIXI.Rectangle")))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"resolution-number"},"resolution: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number")))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"quad-quad"},"quad: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Quad"))),(0,a.kt)("p",null,"A very simple geometry used when drawing a filter effect to the screen.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"quaduv-quaduv"},"quadUv: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"QuadUv"))),(0,a.kt)("p",null,"Quad UVs")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"applyfilter-filter-filter-input-rendertexture-output-rendertexture-clearmode-clear_modes---void"},"applyFilter: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(filter",":"," Filter, input",":"," RenderTexture, output",":"," RenderTexture, clearMode",":"," CLEAR_MODES) -",">"," void"))),(0,a.kt)("p",null,"Draws a filter using the default rendering process.\nThis should be called only by ",(0,a.kt)("a",{parentName:"p",href:"../classes/PIXI.Filter.pixi_core#apply"},"PIXI.Filter#apply"),"."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"filter"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Filter")),(0,a.kt)("td",{parentName:"tr",align:null},"The filter to draw.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"input"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"The input render target.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"output"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"The target to output to.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"clearMode"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"CLEAR_MODES")),(0,a.kt)("td",{parentName:"tr",align:null},"Should the output be cleared before rendering to it"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"bindandclear-filtertexture-rendertexture-clearmode-clear_modes---void"},"bindAndClear: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(filterTexture",":"," RenderTexture, clearMode",":"," CLEAR_MODES) -",">"," void"))),(0,a.kt)("p",null,"Binds a renderTexture with corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"filterFrame"),", clears it if mode corresponds."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"filterTexture"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"renderTexture to bind, should belong to filter pool or filter stack")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"clearMode"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"CLEAR_MODES")),(0,a.kt)("td",{parentName:"tr",align:null},"clearMode, by default its CLEAR/YES. See ",(0,a.kt)("a",{parentName:"td",href:"../enums/PIXI.CLEAR_MODES.pixi_constants"},"PIXI.CLEAR_MODES")))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"calculatespritematrix-outputmatrix-matrix-sprite-pixisprite---matrix"},"calculateSpriteMatrix: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(outputMatrix",":"," Matrix, sprite",":"," PIXI.Sprite) -",">"," Matrix"))),(0,a.kt)("p",null,"Multiply ",(0,a.kt)("em",{parentName:"p"},"input normalized coordinates")," to this matrix to get ",(0,a.kt)("em",{parentName:"p"},"sprite texture normalized coordinates"),".\nUse ",(0,a.kt)("inlineCode",{parentName:"p"},"outputMatrix * vTextureCoord")," in the shader."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"outputMatrix"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Matrix")),(0,a.kt)("td",{parentName:"tr",align:null},"The matrix to output to.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"sprite"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"PIXI.Sprite")),(0,a.kt)("td",{parentName:"tr",align:null},"The sprite to map to.")))),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Matrix")),(0,a.kt)("td",{parentName:"tr",align:null},"The mapped matrix."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"destroy----void"},"destroy: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Destroys this Filter System.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"emptypool----void"},"emptyPool: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Empties the texture pool.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"getfiltertexture-input-rendertexture-resolution-number-multisample-msaa_quality---rendertexture"},"getFilterTexture: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(input",":"," RenderTexture, resolution",":"," number, multisample",":"," MSAA_QUALITY) -",">"," RenderTexture"))),(0,a.kt)("p",null,"Gets extra render texture to use inside current filter To be compliant with older filters, you can use params in any order"),(0,a.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"input"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"renderTexture from which size and resolution will be copied")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"resolution"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"override resolution of the renderTexture")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"multisample"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"MSAA_QUALITY")),(0,a.kt)("td",{parentName:"tr",align:null},"number of samples of the renderTexture")))),(0,a.kt)("h4",{id:"returns-1"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null}))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"pop----void"},"pop: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Pops off the filter and applies it.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"push-target-pixidisplayobject-filters-arrayfilter---void"},"push: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(target",":"," PIXI.DisplayObject, filters",":"," Array","<","Filter",">",") -",">"," void"))),(0,a.kt)("p",null,"Pushes a set of filters to be applied later to the system. This will redirect further rendering into an input render-texture for the rest of the filtering pipeline."),(0,a.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"target"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"PIXI.DisplayObject")),(0,a.kt)("td",{parentName:"tr",align:null},"The target of the filter to render.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"filters"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Array","<","Filter",">")),(0,a.kt)("td",{parentName:"tr",align:null},"The filters to apply."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"resize----void"},"resize: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Calls ",(0,a.kt)("inlineCode",{parentName:"p"},"texturePool.resize()"),", affects fullScreen renderTextures.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"returnfiltertexture-rendertexture-rendertexture---void"},"returnFilterTexture: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(renderTexture",":"," RenderTexture) -",">"," void"))),(0,a.kt)("p",null,"Frees a render texture back into the pool."),(0,a.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"renderTexture"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"The renderTarget to free"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"getoptimalfiltertexture-minwidth-number-minheight-number-resolution-number-multisample-msaa_quality---rendertexture"},"getOptimalFilterTexture: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(minWidth",":"," number, minHeight",":"," number, resolution",":"," number, multisample",":"," MSAA_QUALITY) -",">"," RenderTexture"))),(0,a.kt)("p",null,"Gets a Power-of-Two render texture or fullScreen texture"),(0,a.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"minWidth"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"The minimum width of the render texture in real pixels.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"minHeight"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"The minimum height of the render texture in real pixels.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"resolution"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"The resolution of the render texture.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"multisample"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"MSAA_QUALITY")),(0,a.kt)("td",{parentName:"tr",align:null},"Number of samples of the render texture.")))),(0,a.kt)("h4",{id:"returns-2"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"* The new render texture."))))),(0,a.kt)("hr",null))}s.isMDXComponent=!0}}]);