"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[69405],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),g=i,f=u["".concat(c,".").concat(g)]||u[g]||d[g]||a;return t?r.createElement(f,o(o({ref:n},l),{},{components:t})):r.createElement(f,o({ref:n},l))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},95739:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const a={hide_table_of_contents:!0},o="Polygon Packing",s={unversionedId:"examples/plugin-heaven/polygon",id:"examples/plugin-heaven/polygon",title:"Polygon Packing",description:"",source:"@site/docs/examples/plugin-heaven/polygon.md",sourceDirName:"examples/plugin-heaven",slug:"/examples/plugin-heaven/polygon",permalink:"/examples/plugin-heaven/polygon",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/plugin-heaven/polygon.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Invert",permalink:"/examples/plugin-heaven/invert"},next:{title:"Decals",permalink:"/examples/plugin-heaven/decals"}},c={},p=[],l={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"polygon-packing"},"Polygon Packing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\n// the plugin is here: https://github.com/gameofbombs/pixi-heaven/tree/master\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ background: '#1099bb', autoStart: false, resizeTo: window });\ndocument.body.appendChild(app.view);\n\nconst container = new PIXI.Container();\napp.stage.addChild(container);\n\napp.loader.add('dudes', 'https://beta.pixijs.com/assets/polygon/dudes.json');\napp.loader.load((loader, resources) => {\n    const keys = Object.keys(resources.dudes.textures);\n    const textures = keys.map((x) => resources.dudes.textures[x]);\n\n    // Create a 5x5 grid of bunnies\n    for (let i = 0; i < 25; i++) {\n        const bunny = new PIXI.heaven.SpriteH(textures[i % textures.length]);\n\n        const graphics = new PIXI.Graphics();\n        genWireframe(bunny, graphics);\n        bunny.addChild(graphics);\n\n        bunny.scale.set(0.5);\n        bunny.x = (i % 5) * 90;\n        bunny.y = Math.floor(i / 5) * 100;\n\n        container.addChild(bunny);\n    }\n\n    // Move container to the center\n    container.x = app.screen.width / 2;\n    container.y = app.screen.height / 2;\n\n    // Center bunny sprite in local container coordinates\n    container.pivot.x = container.width / 2;\n    container.pivot.y = container.height / 2;\n\n    app.start();\n});\n\nfunction genWireframe(sprite, graphics) {\n    sprite.calculateVertices();\n\n    const indices = sprite.indices;\n    const vertices = sprite.vertexData;\n\n    graphics.lineStyle(4.0, Math.random() * 0xffffff | 0);\n    // generating it in current sprite world coords.\n    // they are local if sprite wasnt added yet\n    console.log(indices);\n    console.log(vertices);\n    for (let i = 0; i < indices.length; i += 3) {\n        let ind = indices[i + 2];\n        graphics.moveTo(vertices[ind * 2], vertices[ind * 2 + 1]);\n        for (let j = 0; j < 3; j++) {\n            ind = indices[i + j];\n            graphics.lineTo(vertices[ind * 2], vertices[ind * 2 + 1]);\n        }\n    }\n\n    return graphics;\n}\n\n// Listen for animate update\napp.ticker.add((delta) => {\n    // rotate the container!\n    // use delta to create frame-independent transform\n    container.rotation -= 0.01 * delta;\n});\n")))}u.isMDXComponent=!0}}]);