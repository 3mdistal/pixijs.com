"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[4794],{3905:(t,e,r)=>{r.d(e,{Zo:()=>m,kt:()=>c});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=a.createContext({}),u=function(t){var e=a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},m=function(t){var e=u(t.components);return a.createElement(o.Provider,{value:e},t.children)},s="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),s=u(r),k=n,c=s["".concat(o,".").concat(k)]||s[k]||d[k]||l;return r?a.createElement(c,i(i({ref:e},m),{},{components:r})):a.createElement(c,i({ref:e},m))}));function c(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,i=new Array(l);i[0]=k;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[s]="string"==typeof t?t:n,i[1]=p;for(var u=2;u<l;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},87698:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const l={id:"PIXI.ShaderSystem.pixi_core",title:"Class: PIXI.ShaderSystem",sidebar_label:"PIXI.ShaderSystem",custom_edit_url:null},i=void 0,p={unversionedId:"api/classes/PIXI.ShaderSystem.pixi_core",id:"api/classes/PIXI.ShaderSystem.pixi_core",title:"Class: PIXI.ShaderSystem",description:"@pixi/core.ShaderSystem",source:"@site/docs/api/classes/PIXI.ShaderSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.ShaderSystem.pixi_core",permalink:"/api/classes/PIXI.ShaderSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.ShaderSystem.pixi_core",title:"Class: PIXI.ShaderSystem",sidebar_label:"PIXI.ShaderSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.Shader",permalink:"/api/classes/PIXI.Shader.pixi_core"},next:{title:"PIXI.SimpleMesh",permalink:"/api/classes/PIXI.SimpleMesh.pixi_mesh_extras"}},o={},u=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"gl",id:"gl",level:3},{value:"Methods",id:"methods",level:2},{value:"bind",id:"bind",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4},{value:"destroy",id:"destroy",level:3},{value:"disposeShader",id:"disposeshader",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"generateProgram",id:"generateprogram",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"getGlProgram",id:"getglprogram",level:3},{value:"Returns:",id:"returns-2",level:4},{value:"reset",id:"reset",level:3},{value:"setUniforms",id:"setuniforms",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"syncUniformBufferGroup",id:"syncuniformbuffergroup",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"syncUniformGroup",id:"syncuniformgroup",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"syncUniforms",id:"syncuniforms",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"createSyncBufferGroup",id:"createsyncbuffergroup",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"Returns:",id:"returns-3",level:4}],m={toc:u};function s(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("div",{class:"package-name"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".ShaderSystem")),(0,n.kt)("p",null,"System plugin to the renderer to manage shaders."),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"constructor"},"Constructor:"),(0,n.kt)("h4",null,(0,n.kt)("code",null,"new PIXI.ShaderSystem(renderer: Renderer) ")),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"gl"},"gl"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"WebGLRenderingContext")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The current WebGL rendering context.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"bind"},"bind"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(shader",":"," Shader, dontSync",":"," boolean) -",">"," GLProgram")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Changes the current shader to the one given in parameter."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"the new shader")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"dontSync"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"false if the shader should automatically sync its uniforms.")))),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"the glProgram that belongs to the shader."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy"},"destroy"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Destroys this System and removes all its textures.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"disposeshader"},"disposeShader"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(shader",":"," Shader) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Disposes shader. If disposing one equals with current shader, set current as null."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"Shader object"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"generateprogram"},"generateProgram"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(shader",":"," Shader) -",">"," GLProgram")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Generates a glProgram version of the Shader provided."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"The shader that the glProgram will be based on.")))),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"A shiny new glProgram!"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getglprogram"},"getGlProgram"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," GLProgram")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Returns the underlying GLShade rof the currently bound shader.\nThis can be handy for when you to have a little more control over the setting of your uniforms."),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"The glProgram for the currently bound Shader for this context"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"reset"},"reset"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Resets ShaderSystem state, does not affect WebGL state.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setuniforms"},"setUniforms"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(uniforms",":"," Dict","<","any",">",") -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Uploads the uniforms values to the currently bound shader."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uniforms"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Dict","<","any",">")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniforms values that be applied to the current shader"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"syncuniformbuffergroup"},"syncUniformBufferGroup"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(group",":"," UniformGroup, name",":"," string) -",">"," ")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Syncs uniform buffers"),(0,n.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniform buffer group to sync")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"name"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"the name of the uniform buffer"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"syncuniformgroup"},"syncUniformGroup"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(group",":"," UniformGroup, syncData",":"," any) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Syncs uniforms on the group"),(0,n.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniform group to sync")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"syncData"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"any")),(0,n.kt)("td",{parentName:"tr",align:null},"this is data that is passed to the sync function and any nested sync functions"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"syncuniforms"},"syncUniforms"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(group",":"," UniformGroup, glProgram",":"," GLProgram, syncData",":"," any) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Overrideable by the ","@","pixi/unsafe-eval package to use static syncUniforms instead."),(0,n.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"glProgram"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"syncData"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"any")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"createsyncbuffergroup"},"createSyncBufferGroup"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(group",":"," UniformGroup, glProgram",":"," GLProgram, name",":"," string) -",">"," UniformsSyncCallback")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Will create a function that uploads a uniform buffer using the STD140 standard. The upload function will then be cached for future calls If a group is manually managed, then a simple upload function is generated"),(0,n.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniform buffer group to sync")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"glProgram"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"the gl program to attach the uniform bindings to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"name"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"the name of the uniform buffer (must exist on the shader)")))),(0,n.kt)("h4",{id:"returns-3"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformsSyncCallback")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null))}s.isMDXComponent=!0}}]);