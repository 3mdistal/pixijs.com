"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[44325],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(t),u=a,g=c["".concat(l,".").concat(u)]||c[u]||h[u]||i;return t?r.createElement(g,s(s({ref:n},p),{},{components:t})):r.createElement(g,s({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[c]="string"==typeof e?e:a,s[1]=o;for(var d=2;d<i;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(87462),a=(t(67294),t(3905));const i={hide_table_of_contents:!0},s="Slider",o={unversionedId:"examples/events/slider",id:"examples/events/slider",title:"Slider",description:"",source:"@site/docs/examples/events/slider.md",sourceDirName:"examples/events",slug:"/examples/events/slider",permalink:"/examples/events/slider",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/events/slider.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Pointer Tracker",permalink:"/examples/events/pointer-tracker"},next:{title:"Hit-Testing (spatial hash)",permalink:"/examples/events/hit-testing-with-spatial-hash"}},l={},d=[],p={toc:d};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"slider"},"Slider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application<HTMLCanvasElement>({\ndocument.body.appendChild(app.view);\n    antialias: true,\n    background: '#1099bb',\n});\n\nconst stageHeight = app.screen.height;\nconst stageWidth = app.screen.width;\n\n// Make sure stage covers the whole scene\napp.stage.hitArea = app.screen;\n\n// Make the slider\nconst sliderWidth = 320;\nconst slider = new PIXI.Graphics()\n    .beginFill(0x272d37)\n    .drawRect(0, 0, sliderWidth, 4);\n\nslider.x = (stageWidth - sliderWidth) / 2;\nslider.y = stageHeight * 0.75;\n\n// Draw the handle\nconst handle = new PIXI.Graphics()\n    .beginFill(0xffffff)\n    .drawCircle(0, 0, 8);\nhandle.y = slider.height / 2;\nhandle.x = sliderWidth / 2;\nhandle.interactive = true;\nhandle.cursor = 'pointer';\n\nhandle\n    .on('pointerdown', onDragStart)\n    .on('pointerup', onDragEnd)\n    .on('pointerupoutside', onDragEnd);\n\napp.stage.addChild(slider);\nslider.addChild(handle);\n\n// Add bunny whose scale can be changed by user using slider\nconst bunny = app.stage.addChild(PIXI.Sprite.from('https://beta.pixijs.com/assets/bunny.png'));\nbunny.texture.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\nbunny.scale.set(3);\nbunny.anchor.set(0.5);\nbunny.x = stageWidth / 2;\nbunny.y = stageHeight / 2;\n\n// Add title\nconst title = new PIXI.Text('Drag the handle to change the scale of bunny.', {\n    fill: '#272d37',\n    fontFamily: 'Roboto',\n    fontSize: 20,\n    align: 'center',\n});\ntitle.roundPixels = true;\ntitle.x = stageWidth / 2;\ntitle.y = 40;\ntitle.anchor.set(0.5, 0);\napp.stage.addChild(title);\n\n// Listen to pointermove on stage once handle is pressed.\nfunction onDragStart() {\n    app.stage.interactive = true;\n    app.stage.addEventListener('pointermove', onDrag);\n}\n\n// Stop dragging feedback once the handle is released.\nfunction onDragEnd(e) {\n    app.stage.interactive = false;\n    app.stage.removeEventListener('pointermove', onDrag);\n}\n\n// Update the handle's position & bunny's scale when the handle is moved.\nfunction onDrag(e) {\n    const halfHandleWidth = handle.width / 2;\n    // Set handle y-position to match pointer, clamped to (4, screen.height - 4).\n    handle.x = Math.max(halfHandleWidth, Math.min(\n        slider.toLocal(e.global).x,\n        sliderWidth - halfHandleWidth,\n    ));\n    // Normalize handle position between -1 and 1.\n    const t = 2 * ((handle.x / sliderWidth) - 0.5);\n    bunny.scale.set(3 * (1.1 + t));\n}\n")))}c.isMDXComponent=!0}}]);