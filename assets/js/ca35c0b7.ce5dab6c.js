"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[3222],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),c=a,k=d["".concat(o,".").concat(c)]||d[c]||m[c]||l;return n?r.createElement(k,s(s({ref:t},p),{},{components:n})):r.createElement(k,s({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<l;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},35490:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const l={id:"PIXI.SystemManager.pixi_core",title:"Class: PIXI.SystemManager",sidebar_label:"PIXI.SystemManager",custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/PIXI.SystemManager.pixi_core",id:"api/classes/PIXI.SystemManager.pixi_core",title:"Class: PIXI.SystemManager",description:"@pixi/core.SystemManager",source:"@site/docs/api/classes/PIXI.SystemManager.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.SystemManager.pixi_core",permalink:"/api/classes/PIXI.SystemManager.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.SystemManager.pixi_core",title:"Class: PIXI.SystemManager",sidebar_label:"PIXI.SystemManager",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.StencilSystem",permalink:"/api/classes/PIXI.StencilSystem.pixi_core"},next:{title:"PIXI.Text",permalink:"/api/classes/PIXI.Text.pixi_text"}},o={},u=[{value:"new PIXI.SystemManager: <span><code>() </code></span>",id:"new-pixisystemmanager--",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"runners: <span><code>{ key: string: Runner }</code></span>",id:"runners--key-string-runner-",level:3},{value:"Methods",id:"methods",level:2},{value:"addRunners: <span><code>(runnerIds: string[]) -&gt; void</code></span>",id:"addrunners-runnerids-string---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"addSystem: <span><code>(ClassRef: ISystemConstructor&lt;R&gt;, name: string) -&gt; this</code></span>",id:"addsystem-classref-isystemconstructorr-name-string---this",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"emitWithCustomOptions: <span><code>(runner: Runner, options: Record&lt;string, unknown&gt;) -&gt; void</code></span>",id:"emitwithcustomoptions-runner-runner-options-recordstring-unknown---void",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"setup: <span><code>(config: ISystemConfig&lt;R&gt;) -&gt; void</code></span>",id:"setup-config-isystemconfigr---void",level:3},{value:"Parameters:",id:"parameters-4",level:4}],p={toc:u};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".SystemManager"),(0,a.kt)("p",null,"The SystemManager is a class that provides functions for managing a set of systems This is a base class, that is generic (no render code or knowledge at all)"),(0,a.kt)("p",null,"// TODO: @see"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"new-pixisystemmanager--"},"new PIXI.SystemManager: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() "))),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"extends"},"Extends"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"EventEmitter")),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"runners--key-string-runner-"},"runners: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"{"," ","[key",":"," string]",":"," Runner ","}"))),(0,a.kt)("p",null,"a collection of runners defined by the user")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"addrunners-runnerids-string---void"},"addRunners: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(runnerIds",":"," string[]) -",">"," void"))),(0,a.kt)("p",null,"Create a bunch of runners based of a collection of ids"),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"runnerIds"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string[]")),(0,a.kt)("td",{parentName:"tr",align:null},"the runner ids to add"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"addsystem-classref-isystemconstructorr-name-string---this"},"addSystem: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(ClassRef",":"," ISystemConstructor","<","R",">",", name",":"," string) -",">"," this"))),(0,a.kt)("p",null,"Add a new system to the renderer."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ClassRef"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"ISystemConstructor","<","R",">")),(0,a.kt)("td",{parentName:"tr",align:null},"Class reference")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"name"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string")),(0,a.kt)("td",{parentName:"tr",align:null},"Property name for system, if not specified will use a static ",(0,a.kt)("inlineCode",{parentName:"td"},"name")," property on the class itself. This name will be assigned as s property on the Renderer so make sure it doesn't collide with properties on Renderer.")))),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"this")),(0,a.kt)("td",{parentName:"tr",align:null},"Return instance of renderer"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"destroy----void"},"destroy: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"destroy the all runners and systems. Its apps job to")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"emitwithcustomoptions-runner-runner-options-recordstring-unknown---void"},"emitWithCustomOptions: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(runner",":"," Runner, options",":"," Record","<","string, unknown",">",") -",">"," void"))),(0,a.kt)("p",null,"A function that will run a runner and call the runners function but pass in different options to each system based on there name."),(0,a.kt)("p",null,"E.g. If you have two systems added called ",(0,a.kt)("inlineCode",{parentName:"p"},"systemA")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"systemB")," you could call do the following",":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"system.emitWithCustomOptions(init, {\n    systemA: {...optionsForA},\n    systemB: {...optionsForB},\n});\n\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"init")," would be called on system A passing ",(0,a.kt)("inlineCode",{parentName:"p"},"optionsForA")," and on system B passing ",(0,a.kt)("inlineCode",{parentName:"p"},"optionsForB"),"."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"runner"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Runner")),(0,a.kt)("td",{parentName:"tr",align:null},"the runner to target")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"options"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Record","<","string, unknown",">")),(0,a.kt)("td",{parentName:"tr",align:null},"key value options for each system"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"setup-config-isystemconfigr---void"},"setup: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(config",":"," ISystemConfig","<","R",">",") -",">"," void"))),(0,a.kt)("p",null,"Set up a system with a collection of SystemClasses and runners. Systems are attached dynamically to this class when added."),(0,a.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"ISystemConfig","<","R",">")),(0,a.kt)("td",{parentName:"tr",align:null},"the config for the system manager"))))),(0,a.kt)("hr",null))}d.isMDXComponent=!0}}]);