"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[4009],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,c=u["".concat(p,".").concat(m)]||u[m]||k[m]||l;return n?r.createElement(c,i(i({ref:t},d),{},{components:n})):r.createElement(c,i({ref:t},d))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},67833:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const l={id:"PIXI.IRenderer.pixi_core",title:"Interface: PIXI.IRenderer",sidebar_label:"PIXI.IRenderer",custom_edit_url:null},i=void 0,o={unversionedId:"api/interfaces/PIXI.IRenderer.pixi_core",id:"api/interfaces/PIXI.IRenderer.pixi_core",title:"Interface: PIXI.IRenderer",description:"@pixi/core.IRenderer",source:"@site/docs/api/interfaces/PIXI.IRenderer.pixi_core.mdx",sourceDirName:"api/interfaces",slug:"/api/interfaces/PIXI.IRenderer.pixi_core",permalink:"/api/interfaces/PIXI.IRenderer.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.IRenderer.pixi_core",title:"Interface: PIXI.IRenderer",sidebar_label:"PIXI.IRenderer",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.IRenderableObject",permalink:"/api/interfaces/PIXI.IRenderableObject.pixi_core"},next:{title:"PIXI.IRendererOptions",permalink:"/api/interfaces/PIXI.IRendererOptions.pixi_core"}},p={},s=[{value:"Summary",id:"summary",level:2},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"runners",id:"runners",level:3},{value:"height",id:"height",level:3},{value:"lastObjectRendered",id:"lastobjectrendered",level:3},{value:"options",id:"options",level:3},{value:"plugins",id:"plugins",level:3},{value:"rendererLogId",id:"rendererlogid",level:3},{value:"renderingToScreen",id:"renderingtoscreen",level:3},{value:"resolution",id:"resolution",level:3},{value:"screen",id:"screen",level:3},{value:"type",id:"type",level:3},{value:"view",id:"view",level:3},{value:"width",id:"width",level:3},{value:"Methods",id:"methods",level:2},{value:"addRunners",id:"addrunners",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"addSystem",id:"addsystem",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4},{value:"destroy",id:"destroy",level:3},{value:"emitWithCustomOptions",id:"emitwithcustomoptions",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"setup",id:"setup",level:3},{value:"Parameters:",id:"parameters-3",level:4}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{class:"package-name"},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".IRenderer")),(0,a.kt)("p",null,"Starard Interface for a Pixi renderer."),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Properties"),(0,a.kt)("p",null,(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"runners"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"{"," ","[key",":"," string]",":"," Runner ","}")),(0,a.kt)("td",{parentName:"tr",align:null},"a collection of runners defined by the user")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"height"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the height of the screen")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"lastObjectRendered"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"IRenderableObject")),(0,a.kt)("td",{parentName:"tr",align:null},"the last object rendered by the renderer. Useful for other plugins like interaction managers")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"options"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"PIXI.IRendererOptions")),(0,a.kt)("td",{parentName:"tr",align:null},"The options passed in to create a new instance of the renderer.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"plugins"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"IRendererPlugins")),(0,a.kt)("td",{parentName:"tr",align:null},"Collection of plugins")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"rendererLogId"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string")),(0,a.kt)("td",{parentName:"tr",align:null},"When logging Pixi to the console, this is the name we will show")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"renderingToScreen"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"boolean")),(0,a.kt)("td",{parentName:"tr",align:null},"Flag if we are rendering to the screen vs renderTexture")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"resolution"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"The resolution / device pixel ratio of the renderer.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"screen"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Rectangle")),(0,a.kt)("td",{parentName:"tr",align:null},"Measurements of the screen. (0, 0, screenWidth, screenHeight). Its safe to use as filterArea or hitArea for the whole stage.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"type"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RENDERER_TYPE")),(0,a.kt)("td",{parentName:"tr",align:null},"The type of the renderer.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"view"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"VIEW")),(0,a.kt)("td",{parentName:"tr",align:null},"The canvas element that everything is drawn to.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"width"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the width of the screen")))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Methods"),(0,a.kt)("p",null,(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Params"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"addRunners"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"(runnerIds",":"," string[]) ")),(0,a.kt)("td",{parentName:"tr",align:null},"Create a bunch of runners based of a collection of ids")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"addSystem"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"(ClassRef",":"," ISystemConstructor","<","R",">",", name",":"," string) ")),(0,a.kt)("td",{parentName:"tr",align:null},"Add a new system to the renderer.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"destroy"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"() ")),(0,a.kt)("td",{parentName:"tr",align:null},"destroy the all runners and systems. Its apps job to")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"emitWithCustomOptions"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"(runner",":"," Runner, options",":"," Record","<","string, unknown",">",") ")),(0,a.kt)("td",{parentName:"tr",align:null},"A function that will run a runner and call the runners function but pass in different options to each system based on there name.","<","br /",">","<","br /",">","E.g. If you have two systems added called ",(0,a.kt)("inlineCode",{parentName:"td"},"systemA")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"systemB")," you could call do the following",":","<","br /",">","<","br /",">",(0,a.kt)("inlineCode",{parentName:"td"},"<br />system.emitWithCustomOptions(init, {<br />    systemA: {...optionsForA},<br />    systemB: {...optionsForB},<br />});<br /><br />"),"<","br /",">","<","br /",">",(0,a.kt)("inlineCode",{parentName:"td"},"init")," would be called on system A passing ",(0,a.kt)("inlineCode",{parentName:"td"},"optionsForA")," and on system B passing ",(0,a.kt)("inlineCode",{parentName:"td"},"optionsForB"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"setup"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"(config",":"," ISystemConfig","<","R",">",") ")),(0,a.kt)("td",{parentName:"tr",align:null},"Set up a system with a collection of SystemClasses and runners. Systems are attached dynamically to this class when added.")))))),(0,a.kt)("h2",{id:"extends"},"Extends"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../classes/PIXI.SystemManager.pixi_core"},"PIXI.SystemManager")),(0,a.kt)("li",{parentName:"ul"},"GlobalMixins.IRenderer")),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"runners"},"runners"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"{"," ","[key",":"," string]",":"," Runner ","}")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," a collection of runners defined by the user")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"height"},"height"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"number")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," the height of the screen")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"lastobjectrendered"},"lastObjectRendered"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"IRenderableObject")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," the last object rendered by the renderer. Useful for other plugins like interaction managers")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"options"},"options"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"PIXI.IRendererOptions")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," The options passed in to create a new instance of the renderer.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"plugins"},"plugins"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"IRendererPlugins")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Collection of plugins")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"rendererlogid"},"rendererLogId"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"string")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," When logging Pixi to the console, this is the name we will show")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"renderingtoscreen"},"renderingToScreen"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"boolean")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Flag if we are rendering to the screen vs renderTexture")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"resolution"},"resolution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"number")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," The resolution / device pixel ratio of the renderer.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"screen"},"screen"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Rectangle")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Measurements of the screen. (0, 0, screenWidth, screenHeight). Its safe to use as filterArea or hitArea for the whole stage.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"type"},"type"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"RENDERER_TYPE")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," The type of the renderer.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"view"},"view"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"VIEW")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," The canvas element that everything is drawn to.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"width"},"width"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"number")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," the width of the screen")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"addrunners"},"addRunners"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"(runnerIds",":"," string[]) -",">"," void")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Create a bunch of runners based of a collection of ids"),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"runnerIds"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string[]")),(0,a.kt)("td",{parentName:"tr",align:null},"the runner ids to add"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"addsystem"},"addSystem"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"(ClassRef",":"," ISystemConstructor","<","R",">",", name",":"," string) -",">"," this")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Add a new system to the renderer."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ClassRef"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"ISystemConstructor","<","R",">")),(0,a.kt)("td",{parentName:"tr",align:null},"Class reference")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"name"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string")),(0,a.kt)("td",{parentName:"tr",align:null},"Property name for system, if not specified will use a static ",(0,a.kt)("inlineCode",{parentName:"td"},"name")," property on the class itself. This name will be assigned as s property on the Renderer so make sure it doesn't collide with properties on Renderer.")))),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"this")),(0,a.kt)("td",{parentName:"tr",align:null},"Return instance of renderer"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"destroy"},"destroy"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"() -",">"," void")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," destroy the all runners and systems. Its apps job to")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"emitwithcustomoptions"},"emitWithCustomOptions"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"(runner",":"," Runner, options",":"," Record","<","string, unknown",">",") -",">"," void")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," A function that will run a runner and call the runners function but pass in different options to each system based on there name."),(0,a.kt)("p",null,"E.g. If you have two systems added called ",(0,a.kt)("inlineCode",{parentName:"p"},"systemA")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"systemB")," you could call do the following",":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"system.emitWithCustomOptions(init, {\n    systemA: {...optionsForA},\n    systemB: {...optionsForB},\n});\n\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"init")," would be called on system A passing ",(0,a.kt)("inlineCode",{parentName:"p"},"optionsForA")," and on system B passing ",(0,a.kt)("inlineCode",{parentName:"p"},"optionsForB"),"."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"runner"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Runner")),(0,a.kt)("td",{parentName:"tr",align:null},"the runner to target")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"options"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Record","<","string, unknown",">")),(0,a.kt)("td",{parentName:"tr",align:null},"key value options for each system"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"setup"},"setup"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"(config",":"," ISystemConfig","<","R",">",") -",">"," void")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Set up a system with a collection of SystemClasses and runners. Systems are attached dynamically to this class when added."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"config"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"ISystemConfig","<","R",">")),(0,a.kt)("td",{parentName:"tr",align:null},"the config for the system manager"))))),(0,a.kt)("hr",null))}u.isMDXComponent=!0}}]);