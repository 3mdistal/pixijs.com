"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[7738],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>O});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),u=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=u(t.components);return r.createElement(p.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),s=u(n),d=a,O=s["".concat(p,".").concat(d)]||s[d]||m[d]||l;return n?r.createElement(O,i(i({ref:e},c),{},{components:n})):r.createElement(O,i({ref:e},c))}));function O(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[s]="string"==typeof t?t:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82905:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const l={id:"PIXI.COLOR_MASK_BITS.pixi_constants",title:"Enum: PIXI.COLOR_MASK_BITS",sidebar_label:"PIXI.COLOR_MASK_BITS",custom_edit_url:null},i=void 0,o={unversionedId:"api/enums/PIXI.COLOR_MASK_BITS.pixi_constants",id:"api/enums/PIXI.COLOR_MASK_BITS.pixi_constants",title:"Enum: PIXI.COLOR_MASK_BITS",description:"@pixi/constants.COLORMASK_BITS",source:"@site/docs/api/enums/PIXI.COLOR_MASK_BITS.pixi_constants.mdx",sourceDirName:"api/enums",slug:"/api/enums/PIXI.COLOR_MASK_BITS.pixi_constants",permalink:"/api/enums/PIXI.COLOR_MASK_BITS.pixi_constants",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.COLOR_MASK_BITS.pixi_constants",title:"Enum: PIXI.COLOR_MASK_BITS",sidebar_label:"PIXI.COLOR_MASK_BITS",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.CLEAR_MODES",permalink:"/api/enums/PIXI.CLEAR_MODES.pixi_constants"},next:{title:"PIXI.DRAW_MODES",permalink:"/api/enums/PIXI.DRAW_MODES.pixi_constants"}},p={},u=[{value:"Summary",id:"summary",level:2}],c={toc:u};function s(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_constants"},"@pixi/constants"),".COLOR_MASK_BITS"),(0,a.kt)("p",null,"Bitwise OR of masks that indicate the color channels that are rendered to."),(0,a.kt)("p",null,"// TODO: @see"),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"ALPHA")),(0,a.kt)("td",{parentName:"tr",align:null},"0x"),(0,a.kt)("td",{parentName:"tr",align:null},"Alpha channel.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"BLUE")),(0,a.kt)("td",{parentName:"tr",align:null},"0x4"),(0,a.kt)("td",{parentName:"tr",align:null},"Blue channel.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"GREEN")),(0,a.kt)("td",{parentName:"tr",align:null},"0x2"),(0,a.kt)("td",{parentName:"tr",align:null},"Green channel")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RED")),(0,a.kt)("td",{parentName:"tr",align:null},"0x1"),(0,a.kt)("td",{parentName:"tr",align:null},"Red channel.")))))}s.isMDXComponent=!0}}]);