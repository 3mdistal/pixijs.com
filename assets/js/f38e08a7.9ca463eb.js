"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[49089],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>f});var i=t(67294);function s(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){s(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,i,s=function(n,e){if(null==n)return{};var t,i,s={},r=Object.keys(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||(s[t]=n[t]);return s}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(i=0;i<r.length;i++)t=r[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(s[t]=n[t])}return s}var d=i.createContext({}),c=function(n){var e=i.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},p=function(n){var e=c(n.components);return i.createElement(d.Provider,{value:e},n.children)},l="mdxType",h={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},u=i.forwardRef((function(n,e){var t=n.components,s=n.mdxType,r=n.originalType,d=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),l=c(t),u=s,f=l["".concat(d,".").concat(u)]||l[u]||h[u]||r;return t?i.createElement(f,a(a({ref:e},p),{},{components:t})):i.createElement(f,a({ref:e},p))}));function f(n,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof n||s){var r=t.length,a=new Array(r);a[0]=u;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=n,o[l]="string"==typeof n?n:s,a[1]=o;for(var c=2;c<r;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},53456:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=t(87462),s=(t(67294),t(3905));const r={hide_table_of_contents:!0},a="Bunnies Packer",o={unversionedId:"examples/plugin-projection/bunny-pack",id:"examples/plugin-projection/bunny-pack",title:"Bunnies Packer",description:"",source:"@site/docs/examples/plugin-projection/bunny-pack.md",sourceDirName:"examples/plugin-projection",slug:"/examples/plugin-projection/bunny-pack",permalink:"/examples/plugin-projection/bunny-pack",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/plugin-projection/bunny-pack.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"3D Runner",permalink:"/examples/plugin-projection/runner"},next:{title:"Normals",permalink:"/examples/plugin-layers/normals"}},d={},c=[],p={toc:c};function l(n){let{components:e,...t}=n;return(0,s.kt)("wrapper",(0,i.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"bunnies-packer"},"Bunnies Packer"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst PROJ = PIXI.projection;\n\nclass BagPart extends PROJ.Container3d {\n    constructor(tIn, tOut = undefined) {\n        super();\n\n        this.axis = new PROJ.Container3d();\n        this._cent = new PROJ.Container3d();\n        this._closed = false;\n        this._closing = false;\n        this._duration = 0;\n        this._fader = 0;\n\n        this._in = new PROJ.Sprite3d(tIn);\n\n        this.sideWidth = this._in.width;\n        this.sideHeight = this._in.height;\n\n        this._cent.addChild(this._in);\n\n        if (tOut) {\n            this._out = new PROJ.Sprite3d(tOut);\n            this._out.renderable = false;\n            this._out.tint = 0xff00ff;\n            this._cent.addChild(this._out);\n        }\n\n        this._cent.pivot3d.set(this.sideWidth / 2, this.sideHeight / 2);\n        this._cent.position3d.set(this.sideWidth / 2, this.sideHeight / 2);\n\n        this.axis.addChild(this._cent);\n        this.addChild(this.axis);\n\n        this.rotPoint = new PIXI.ObservablePoint(this._rChange, this, -1, 0);\n        this._rChange();\n\n        this.parentSide = undefined;\n        this.parentLink = undefined;\n\n        this.index = 0;\n    }\n\n    update(dt) {\n        if (this._closing) {\n            this._closeBech(dt);\n        }\n\n        if (this._childSide) {\n            this._childSide.update(dt);\n        }\n    }\n\n    _closeBech(dt) {\n        if (this._fader >= 1) {\n            this._closed = true;\n            this._closing = false;\n            this._fader = 1;\n            this._closingEnd();\n        } else {\n            this._fader += dt / this._duration;\n        }\n\n        const r = -this._fader * Math.PI;\n\n        this.axis.euler.y = r;\n        if (this._out) {\n            this._out.renderable = this._fader > 0.5;\n            this._in.renderable = this._fader < 0.5;\n        } else {\n            this._in.alpha = 1 - this._fader;\n        }\n    }\n\n    _closingEnd() {\n        this.emit('closed', this);\n    }\n\n    _rChange() {\n        const p = this.rotPoint;\n        const p3d = this.axis.pivot3d;\n        const angle = Math.atan2(-p.y, p.x);\n\n        p3d.x = (p.x + 1) * 0.5 * this.sideWidth;\n        p3d.y = (p.y + 1) * 0.5 * this.sideHeight;\n\n        this.axis.euler.z = angle;\n        this.euler.z = -angle;\n    }\n\n    get realLink() {\n        return new PIXI.Point(\n            this.sideWidth * (this.linkPoint.x + 1) * 0.5,\n            this.sideHeight * (this.linkPoint.y + 1) * 0.5,\n        );\n    }\n\n    close(duration = 300) {\n        if (this._closed || this._closing) {\n            return;\n        }\n\n        this._duration = duration;\n        this._closing = true;\n        this._fader = 0;\n    }\n\n    bind(parent, link = [-1, 0]) {\n        this.parentSide = parent;\n        this.parentLink = link;\n        this.index = parent.index + 1;\n\n        const x = 0.5 * (link[0] + 1) * parent.sideWidth;\n        const y = 0.5 * (link[1] + 1) * parent.sideHeight;\n        const piv = parent.axis.pivot3d;\n\n        this.position.x = x + parent.position.x - piv.x;\n        this.position.y = y + parent.position.y - piv.y;\n\n        if (link[0] && this.index % 2 === 1) {\n            this._cent.scale3d.x = -1;\n        }\n\n        if (link[1] && this.index % 2 === 1) {\n            this._cent.scale3d.y = -1;\n        }\n    }\n\n    link() {\n        const p = this.parentSide;\n        const link = this.parentLink;\n\n        if (!p) return;\n\n        p.axis.addChild(this);\n\n        const x = p.sideWidth * (link[0] + 1) * 0.5;\n        const y = p.sideHeight * (link[1] + 1) * 0.5;\n\n        this.position.x = x;\n        this.position.y = y;\n    }\n}\n\nclass Bag extends PROJ.Container3d {\n    constructor() {\n        super();\n        this._sides = [];\n    }\n\n    pack(side, parent = undefined, link = undefined) {\n        const h = this.head;\n\n        this.addChild(side);\n        if (h) {\n            this.addChild(h);\n            side.rotPoint.set(-link[0], -link[1]);\n        }\n        this._sides.push(side);\n\n        if (parent) {\n            side.bind(parent, link);\n        }\n\n        return this;\n    }\n\n    close(duration = 300) {\n        const len = this._sides.length;\n        let index = len - 1;\n\n        const c = (side) => {\n            if (index < 0) return;\n\n            let ch = this._sides[index];\n            if (side) {\n                side.link();\n            }\n\n            // skip second\n            if (index === 1) {\n                index--;\n                ch = this._sides[index];\n            }\n\n            ch.once('closed', c);\n            ch.close(duration / len);\n\n            index--;\n        };\n        c();\n    }\n\n    update(dt) {\n        this._sides.forEach((e) => {\n            e.update(dt);\n        });\n    }\n\n    get tall() {\n        return this._sides[this.children.length - 1];\n    }\n\n    get head() {\n        return this._sides[0];\n    }\n}\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ background: '#2c3e50', resizeTo: window });\ndocument.body.appendChild(app.view);\n\n// Load the bunny texture\napp.loader.add('bunny', 'https://pixijs.io/examples/https://v2-pixijs.com/assets/bunny.png')\n    .load(startup);\n\nfunction startup() {\n    const camera = new PIXI.projection.Camera3d();\n    camera.position.set(app.screen.width / 2, app.screen.height / 2);\n    camera.setPlanes(100, 45, 1000);\n    app.stage.addChild(camera);\n\n    const t = app.loader.resources.bunny.texture;\n    const pack = new Bag();\n\n    const a = new BagPart(t, t);\n    const b = new BagPart(t);\n    const c = new BagPart(t);\n    const d = new BagPart(t);\n    const e = new BagPart(t);\n\n    a.rotPoint.set(1, 0);\n\n    pack.pack(a)\n        .pack(b, a, [1, 0])\n        .pack(c, b, [1, 0])\n        .pack(d, c, [0, 1])\n        .pack(e, a, [0, -1]);\n\n    pack.scale.set(3);\n\n    app.stage.interactive = true;\n    app.stage.on('click', () => {\n        pack.close(1000);\n    });\n    camera.addChild(pack);\n\n    // Listen for animate update\n    app.ticker.add((delta) => {\n        // Rotate mr rabbit clockwise\n        pack.update(1000 / 60);\n        camera.updateTransform();\n    });\n}\n")))}l.isMDXComponent=!0}}]);