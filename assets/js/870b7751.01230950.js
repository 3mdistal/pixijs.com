"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[2131],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=u(r),c=a,m=d["".concat(o,".").concat(c)]||d[c]||k[c]||l;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},12508:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const l={id:"PIXI.ViewableBuffer.pixi_core",title:"Class: PIXI.ViewableBuffer",sidebar_label:"PIXI.ViewableBuffer",custom_edit_url:null},i=void 0,p={unversionedId:"api/classes/PIXI.ViewableBuffer.pixi_core",id:"api/classes/PIXI.ViewableBuffer.pixi_core",title:"Class: PIXI.ViewableBuffer",description:"@pixi/core.ViewableBuffer",source:"@site/docs/api/classes/PIXI.ViewableBuffer.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.ViewableBuffer.pixi_core",permalink:"/api/classes/PIXI.ViewableBuffer.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.ViewableBuffer.pixi_core",title:"Class: PIXI.ViewableBuffer",sidebar_label:"PIXI.ViewableBuffer",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.ViewSystem",permalink:"/api/classes/PIXI.ViewSystem.pixi_core"},next:{title:"TranscoderWorker",permalink:"/api/classes/TranscoderWorker.pixi_basis"}},o={},u=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"float32View",id:"float32view",level:3},{value:"int16View",id:"int16view",level:3},{value:"int32View",id:"int32view",level:3},{value:"int8View",id:"int8view",level:3},{value:"rawBinaryData",id:"rawbinarydata",level:3},{value:"uint16View",id:"uint16view",level:3},{value:"uint32View",id:"uint32view",level:3},{value:"uint8View",id:"uint8view",level:3},{value:"Methods",id:"methods",level:2},{value:"destroy",id:"destroy",level:3},{value:"view",id:"view",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4}],s={toc:u};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{class:"package-name"},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".ViewableBuffer")),(0,a.kt)("p",null,"Flexible wrapper around ",(0,a.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")," that also provides typed array views on demand."),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"constructor"},"Constructor:"),(0,a.kt)("h4",null,(0,a.kt)("code",null,"new PIXI.ViewableBuffer(length: number | ArrayBuffer | Uint8Array) ")),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"length"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number ","|"," ArrayBuffer ","|"," Uint8Array")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null)),(0,a.kt)("td",{parentName:"tr",align:null},"The size of the buffer in bytes."))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"float32view"},"float32View"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Float32Array")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," View on the raw binary data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Float32Array"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"int16view"},"int16View"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Int16Array")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," View on the raw binary data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Int16Array"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"int32view"},"int32View"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Int32Array")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," View on the raw binary data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Int32Array"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"int8view"},"int8View"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Int8Array")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," View on the raw binary data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Int8Array"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"rawbinarydata"},"rawBinaryData"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"ArrayBuffer")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Underlying ",(0,a.kt)("inlineCode",{parentName:"p"},"ArrayBuffer")," that holds all the data and is of capacity ",(0,a.kt)("inlineCode",{parentName:"p"},"this.size"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uint16view"},"uint16View"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Uint16Array")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," View on the raw binary data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Uint16Array"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uint32view"},"uint32View"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Uint32Array")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," View on the raw binary data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Uint32Array"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uint8view"},"uint8View"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"Uint8Array")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," View on the raw binary data as a ",(0,a.kt)("inlineCode",{parentName:"p"},"Uint8Array"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"destroy"},"destroy"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"() -",">"," void")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Destroys all buffer references. Do not use after calling this.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"view"},"view"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("code",null,"(type",":"," string) -",">"," ITypedArray")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Returns the view of the given type."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"type"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string")),(0,a.kt)("td",{parentName:"tr",align:null},"One of ",(0,a.kt)("inlineCode",{parentName:"td"},"int8"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"uint8"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"int16"),",",(0,a.kt)("inlineCode",{parentName:"td"},"uint16"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"int32"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"uint32"),", and ",(0,a.kt)("inlineCode",{parentName:"td"},"float32"),".")))),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"ITypedArray")),(0,a.kt)("td",{parentName:"tr",align:null},"* typed array of given type"))))),(0,a.kt)("hr",null))}d.isMDXComponent=!0}}]);