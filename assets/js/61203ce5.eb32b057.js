"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[9267],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),o=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=o(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=o(n),k=r,b=p["".concat(d,".").concat(k)]||p[k]||m[k]||l;return n?a.createElement(b,i(i({ref:t},s),{},{components:n})):a.createElement(b,i({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var u={};for(var d in t)hasOwnProperty.call(t,d)&&(u[d]=t[d]);u.originalType=e,u[p]="string"==typeof e?e:r,i[1]=u;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},59138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>o});var a=n(87462),r=(n(67294),n(3905));const l={id:"PIXI.PlaneGeometry.pixi_mesh_extras",title:"Class: PIXI.PlaneGeometry",sidebar_label:"PIXI.PlaneGeometry",custom_edit_url:null},i=void 0,u={unversionedId:"api/classes/PIXI.PlaneGeometry.pixi_mesh_extras",id:"api/classes/PIXI.PlaneGeometry.pixi_mesh_extras",title:"Class: PIXI.PlaneGeometry",description:"@pixi/mesh-extras.PlaneGeometry",source:"@site/docs/api/classes/PIXI.PlaneGeometry.pixi_mesh_extras.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.PlaneGeometry.pixi_mesh_extras",permalink:"/api/classes/PIXI.PlaneGeometry.pixi_mesh_extras",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.PlaneGeometry.pixi_mesh_extras",title:"Class: PIXI.PlaneGeometry",sidebar_label:"PIXI.PlaneGeometry",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.ParticleRenderer",permalink:"/api/classes/PIXI.ParticleRenderer.pixi_particle_container"},next:{title:"PIXI.PluginSystem",permalink:"/api/classes/PIXI.PluginSystem.pixi_core"}},d={},o=[{value:"new PIXI.PlaneGeometry: <span><code>(width: number, height: number, segWidth: number, segHeight: number) </code></span>",id:"new-pixiplanegeometry-width-number-height-number-segwidth-number-segheight-number-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"glVertexArrayObjects: <span><code>object</code></span>",id:"glvertexarrayobjects-object",level:3},{value:"instanceCount: <span><code>number</code></span>",id:"instancecount-number",level:3},{value:"instanced: <span><code>boolean</code></span>",id:"instanced-boolean",level:3},{value:"refCount: <span><code>number</code></span>",id:"refcount-number",level:3},{value:"Methods",id:"methods",level:2},{value:"addAttribute: <span><code>(id: string, buffer: PIXI.Buffer | Array&lt;number&gt;, size: number, normalized: boolean, type: TYPES, stride: number, start: number, instance: boolean) -&gt; this</code></span>",id:"addattribute-id-string-buffer-pixibuffer--arraynumber-size-number-normalized-boolean-type-types-stride-number-start-number-instance-boolean---this",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4},{value:"addIndex: <span><code>(buffer: PIXI.Buffer | Array&lt;number&gt;) -&gt; Geometry</code></span>",id:"addindex-buffer-pixibuffer--arraynumber---geometry",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"clone: <span><code>() -&gt; Geometry</code></span>",id:"clone----geometry",level:3},{value:"Returns:",id:"returns-2",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"dispose: <span><code>() -&gt; void</code></span>",id:"dispose----void",level:3},{value:"getAttribute: <span><code>(id: string) -&gt; Attribute</code></span>",id:"getattribute-id-string---attribute",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"getBuffer: <span><code>(id: string) -&gt; Buffer</code></span>",id:"getbuffer-id-string---buffer",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"getIndex: <span><code>() -&gt; Buffer</code></span>",id:"getindex----buffer",level:3},{value:"Returns:",id:"returns-5",level:4},{value:"getSize: <span><code>() -&gt; number</code></span>",id:"getsize----number",level:3},{value:"Returns:",id:"returns-6",level:4},{value:"interleave: <span><code>() -&gt; Geometry</code></span>",id:"interleave----geometry",level:3},{value:"Returns:",id:"returns-7",level:4}],s={toc:o};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../modules/pixi_mesh_extras"},"@pixi/mesh-extras"),".PlaneGeometry"),(0,r.kt)("p",null,"// TODO: @see"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"new-pixiplanegeometry-width-number-height-number-segwidth-number-segheight-number-"},"new PIXI.PlaneGeometry: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"(width",":"," number, height",":"," number, segWidth",":"," number, segHeight",":"," number) "))),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"width"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"100")),(0,r.kt)("td",{parentName:"tr",align:null},"The width of the plane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"height"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"100")),(0,r.kt)("td",{parentName:"tr",align:null},"The height of the plane.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"segWidth"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"10")),(0,r.kt)("td",{parentName:"tr",align:null},"Number of horizontal segments.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"segHeight"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"10")),(0,r.kt)("td",{parentName:"tr",align:null},"Number of vertical segments."))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"extends"},"Extends"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../classes/PIXI.MeshGeometry.pixi_mesh"},"PIXI.MeshGeometry"))),(0,r.kt)("h2",{id:"members"},"Members"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"glvertexarrayobjects-object"},"glVertexArrayObjects: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"object"))),(0,r.kt)("p",null,"A map of renderer IDs to webgl VAOs")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"instancecount-number"},"instanceCount: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"number"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,r.kt)("code",null,"1"))),(0,r.kt)("p",null,"Number of instances in this geometry, pass it to ",(0,r.kt)("inlineCode",{parentName:"p"},"GeometrySystem.draw()"),".")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"instanced-boolean"},"instanced: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"boolean"))),(0,r.kt)("p",null,"Whether the geometry is instanced.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"refcount-number"},"refCount: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"number"))),(0,r.kt)("p",null,"Count of existing (not destroyed) meshes that reference this geometry.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"addattribute-id-string-buffer-pixibuffer--arraynumber-size-number-normalized-boolean-type-types-stride-number-start-number-instance-boolean---this"},"addAttribute: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"(id",":"," string, buffer",":"," PIXI.Buffer ","|"," Array","<","number",">",", size",":"," number, normalized",":"," boolean, type",":"," TYPES, stride",":"," number, start",":"," number, instance",":"," boolean) -",">"," this"))),(0,r.kt)("p",null,"Adds an attribute to the geometry Note",":"," ",(0,r.kt)("inlineCode",{parentName:"p"},"stride")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," should be ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," if you dont know them, not 0!"),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"the name of the attribute (matching up to a shader)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"buffer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.Buffer ","|"," Array","<","number",">")),(0,r.kt)("td",{parentName:"tr",align:null},"the buffer that holds the data of the attribute . You can also provide an Array and a buffer will be created from it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"size"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"normalized"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"should the data be normalized.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"TYPES")),(0,r.kt)("td",{parentName:"tr",align:null},"what type of number is the attribute. Check ",(0,r.kt)("a",{parentName:"td",href:"../enums/PIXI.TYPES.pixi_constants"},"PIXI.TYPES")," to see the ones available")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"stride"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"How far apart, in bytes, the start of each value is. (used for interleaving data)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"start"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"How far into the array to start reading values (used for interleaving data)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"instance"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Instancing flag")))),(0,r.kt)("h4",{id:"returns"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"this")),(0,r.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"addindex-buffer-pixibuffer--arraynumber---geometry"},"addIndex: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"(buffer",":"," PIXI.Buffer ","|"," Array","<","number",">",") -",">"," Geometry"))),(0,r.kt)("p",null,"Adds an index buffer to the geometry The index buffer contains integers, three for each triangle in the geometry, which reference the various attribute buffers (position, colour, UV coordinates, other UV coordinates, normal, \u2026). There is only ONE index buffer."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"buffer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.Buffer ","|"," Array","<","number",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The buffer that holds the data of the index buffer. You can also provide an Array and a buffer will be created from it.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Geometry")),(0,r.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"clone----geometry"},"clone: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"() -",">"," Geometry"))),(0,r.kt)("p",null,"Returns a clone of the geometry."),(0,r.kt)("h4",{id:"returns-2"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Geometry")),(0,r.kt)("td",{parentName:"tr",align:null},"* A new clone of this geometry."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"destroy----void"},"destroy: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"() -",">"," void"))),(0,r.kt)("p",null,"Destroys the geometry.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"dispose----void"},"dispose: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"() -",">"," void"))),(0,r.kt)("p",null,"Disposes WebGL resources that are connected to this geometry.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"getattribute-id-string---attribute"},"getAttribute: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"(id",":"," string) -",">"," Attribute"))),(0,r.kt)("p",null,"Returns the requested attribute."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the attribute required")))),(0,r.kt)("h4",{id:"returns-3"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Attribute")),(0,r.kt)("td",{parentName:"tr",align:null},"* The attribute requested."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"getbuffer-id-string---buffer"},"getBuffer: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"(id",":"," string) -",">"," Buffer"))),(0,r.kt)("p",null,"Returns the requested buffer."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the buffer required.")))),(0,r.kt)("h4",{id:"returns-4"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Buffer")),(0,r.kt)("td",{parentName:"tr",align:null},"* The buffer requested."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"getindex----buffer"},"getIndex: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"() -",">"," Buffer"))),(0,r.kt)("p",null,"Returns the index buffer"),(0,r.kt)("h4",{id:"returns-5"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Buffer")),(0,r.kt)("td",{parentName:"tr",align:null},"* The index buffer."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"getsize----number"},"getSize: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"() -",">"," number"))),(0,r.kt)("p",null,"Get the size of the geometries, in vertices."),(0,r.kt)("h4",{id:"returns-6"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null}))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"interleave----geometry"},"interleave: ",(0,r.kt)("span",null,(0,r.kt)("code",null,"() -",">"," Geometry"))),(0,r.kt)("p",null,"This function modifies the structure so that all current attributes become interleaved into a single buffer This can be useful if your model remains static as it offers a little performance boost"),(0,r.kt)("h4",{id:"returns-7"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Geometry")),(0,r.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,r.kt)("hr",null))}p.isMDXComponent=!0}}]);