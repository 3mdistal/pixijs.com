"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[177],{3905:(e,t,l)=>{l.d(t,{Zo:()=>s,kt:()=>m});var r=l(67294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function n(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,r)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?n(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):n(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,r,a=function(e,t){if(null==e)return{};var l,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)l=n[r],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)l=n[r],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var l=e.components,a=e.mdxType,n=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(l),k=a,m=d["".concat(p,".").concat(k)]||d[k]||c[k]||n;return l?r.createElement(m,i(i({ref:t},s),{},{components:l})):r.createElement(m,i({ref:t},s))}));function m(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=l.length,i=new Array(n);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<n;u++)i[u]=l[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,l)}k.displayName="MDXCreateElement"},44552:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>u});var r=l(87462),a=(l(67294),l(3905));const n={id:"PIXI.SpriteMaskFilter.pixi_core",title:"Class: PIXI.SpriteMaskFilter",sidebar_label:"PIXI.SpriteMaskFilter",custom_edit_url:null},i=void 0,o={unversionedId:"api/classes/PIXI.SpriteMaskFilter.pixi_core",id:"api/classes/PIXI.SpriteMaskFilter.pixi_core",title:"Class: PIXI.SpriteMaskFilter",description:"@pixi/core.SpriteMaskFilter",source:"@site/docs/api/classes/PIXI.SpriteMaskFilter.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.SpriteMaskFilter.pixi_core",permalink:"/api/classes/PIXI.SpriteMaskFilter.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.SpriteMaskFilter.pixi_core",title:"Class: PIXI.SpriteMaskFilter",sidebar_label:"PIXI.SpriteMaskFilter",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.Sprite",permalink:"/api/classes/PIXI.Sprite.pixi_sprite"},next:{title:"PIXI.Spritesheet",permalink:"/api/classes/PIXI.Spritesheet.pixi_spritesheet"}},p={},u=[{value:"new PIXI.SpriteMaskFilter: <span><code>(sprite: PIXI.Sprite) </code></span>",id:"new-pixispritemaskfilter-sprite-pixisprite-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"autoFit: <span><code>boolean</code></span>",id:"autofit-boolean",level:3},{value:"blendMode: <span><code>BLEND_MODES</code></span>",id:"blendmode-blend_modes",level:3},{value:"enabled: <span><code>boolean</code></span>",id:"enabled-boolean",level:3},{value:"legacy: <span><code>boolean</code></span>",id:"legacy-boolean",level:3},{value:"maskMatrix: <span><code>Matrix</code></span>",id:"maskmatrix-matrix",level:3},{value:"maskSprite: <span><code>PIXI.DisplayObject</code></span>",id:"masksprite-pixidisplayobject",level:3},{value:"multisample: <span><code>MSAA_QUALITY</code></span>",id:"multisample-msaa_quality",level:3},{value:"padding: <span><code>number</code></span>",id:"padding-number",level:3},{value:"program: <span><code>Program</code></span>",id:"program-program",level:3},{value:"resolution: <span><code>number</code></span>",id:"resolution-number",level:3},{value:"state: <span><code>State</code></span>",id:"state-state",level:3},{value:"uniforms: <span><code>Dict&lt;any&gt;</code></span>",id:"uniforms-dictany",level:3},{value:"Methods",id:"methods",level:2},{value:"apply: <span><code>(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clearMode: CLEAR_MODES) -&gt; void</code></span>",id:"apply-filtermanager-filtersystem-input-rendertexture-output-rendertexture-clearmode-clear_modes---void",level:3},{value:"Parameters:",id:"parameters-1",level:4}],s={toc:u};function d(e){let{components:t,...l}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".SpriteMaskFilter"),(0,a.kt)("p",null,"This handles a Sprite acting as a mask, as opposed to a Graphic.\nWebGL only."),(0,a.kt)("p",null,"// TODO: @see"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"new-pixispritemaskfilter-sprite-pixisprite-"},"new PIXI.SpriteMaskFilter: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(sprite",":"," PIXI.Sprite) "))),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"sprite"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"PIXI.Sprite")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null)),(0,a.kt)("td",{parentName:"tr",align:null},"The target sprite."))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"extends"},"Extends"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../classes/PIXI.Filter.pixi_core"},"PIXI.Filter"))),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"autofit-boolean"},"autoFit: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"boolean"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,a.kt)("code",null,"true"))),(0,a.kt)("p",null,"If enabled, PixiJS will fit the filter area into boundaries for better performance. Switch it off if it does not work for specific shader.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"blendmode-blend_modes"},"blendMode: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"BLEND_MODES"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,a.kt)("code",null,"PIXI.BLEND_MODES.NORMAL"))),(0,a.kt)("p",null,"Sets the blend mode of the filter.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"enabled-boolean"},"enabled: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"boolean"))),(0,a.kt)("p",null,"If enabled is true the filter is applied, if false it will not.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"legacy-boolean"},"legacy: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"boolean"))),(0,a.kt)("p",null,"Legacy filters use position and uvs from attributes (set by filter system)")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"maskmatrix-matrix"},"maskMatrix: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Matrix"))),(0,a.kt)("p",null,"Mask matrix")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"masksprite-pixidisplayobject"},"maskSprite: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"PIXI.DisplayObject"))),(0,a.kt)("p",null,"Sprite mask")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"multisample-msaa_quality"},"multisample: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"MSAA_QUALITY"))),(0,a.kt)("p",null,"The samples override of the filter instance.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"padding-number"},"padding: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("p",null,"The padding of the filter. Some filters require extra space to breath such as a blur. Increasing this will add extra width and height to the bounds of the object that the filter is applied to.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"program-program"},"program: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Program"))),(0,a.kt)("p",null,"Program that the shader uses.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"resolution-number"},"resolution: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("p",null,"The resolution of the filter. Setting this to be lower will lower the quality but increase the performance of the filter.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"state-state"},"state: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"State"))),(0,a.kt)("p",null,"The WebGL state the filter requires to render.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uniforms-dictany"},"uniforms: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Dict","<","any",">"))),(0,a.kt)("p",null,"Shader uniform values, shortcut for ",(0,a.kt)("inlineCode",{parentName:"p"},"uniformGroup.uniforms"),".")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"apply-filtermanager-filtersystem-input-rendertexture-output-rendertexture-clearmode-clear_modes---void"},"apply: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(filterManager",":"," FilterSystem, input",":"," RenderTexture, output",":"," RenderTexture, clearMode",":"," CLEAR_MODES) -",">"," void"))),(0,a.kt)("p",null,"Applies the filter"),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"filterManager"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"FilterSystem")),(0,a.kt)("td",{parentName:"tr",align:null},"The renderer to retrieve the filter from")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"input"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"The input render target.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"output"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"RenderTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"The target to output to.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"clearMode"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"CLEAR_MODES")),(0,a.kt)("td",{parentName:"tr",align:null},"Should the output be cleared before rendering to it."))))),(0,a.kt)("hr",null))}d.isMDXComponent=!0}}]);