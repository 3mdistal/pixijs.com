"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[387],{3905:(e,t,l)=>{l.d(t,{Zo:()=>c,kt:()=>k});var a=l(67294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function i(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(l),m=n,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return l?a.createElement(k,o(o({ref:t},c),{},{components:l})):a.createElement(k,o({ref:t},c))}));function k(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=l.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:n,o[1]=i;for(var u=2;u<r;u++)o[u]=l[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,l)}m.displayName="MDXCreateElement"},12068:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=l(87462),n=(l(67294),l(3905));const r={id:"PIXI.Transform.pixi_math",title:"Class: PIXI.Transform",sidebar_label:"PIXI.Transform",custom_edit_url:null},o=void 0,i={unversionedId:"api/classes/PIXI.Transform.pixi_math",id:"api/classes/PIXI.Transform.pixi_math",title:"Class: PIXI.Transform",description:"@pixi/math.Transform",source:"@site/docs/api/classes/PIXI.Transform.pixi_math.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.Transform.pixi_math",permalink:"/api/classes/PIXI.Transform.pixi_math",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.Transform.pixi_math",title:"Class: PIXI.Transform",sidebar_label:"PIXI.Transform",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.TimeLimiter",permalink:"/api/classes/PIXI.TimeLimiter.pixi_prepare"},next:{title:"PIXI.TransformFeedback",permalink:"/api/classes/PIXI.TransformFeedback.pixi_core"}},s={},u=[{value:"new PIXI()",id:"new-pixi",level:3},{value:"Members",id:"members",level:2},{value:"IDENTITY: <span><code>PIXI.Transform</code></span>",id:"identity-pixitransform",level:3},{value:"_parentID: <span><code>number</code></span>",id:"_parentid-number",level:3},{value:"_worldID: <span><code>number</code></span>",id:"_worldid-number",level:3},{value:"localTransform: <span><code>Matrix</code></span>",id:"localtransform-matrix",level:3},{value:"pivot: <span><code>ObservablePoint</code></span>",id:"pivot-observablepoint",level:3},{value:"position: <span><code>ObservablePoint</code></span>",id:"position-observablepoint",level:3},{value:"rotation: <span><code>number</code></span>",id:"rotation-number",level:3},{value:"scale: <span><code>ObservablePoint</code></span>",id:"scale-observablepoint",level:3},{value:"skew: <span><code>ObservablePoint</code></span>",id:"skew-observablepoint",level:3},{value:"worldTransform: <span><code>Matrix</code></span>",id:"worldtransform-matrix",level:3},{value:"_currentLocalID: <span><code>number</code></span>",id:"_currentlocalid-number",level:3},{value:"_cx: <span><code>number</code></span>",id:"_cx-number",level:3},{value:"_cy: <span><code>number</code></span>",id:"_cy-number",level:3},{value:"_localID: <span><code>number</code></span>",id:"_localid-number",level:3},{value:"_rotation: <span><code>number</code></span>",id:"_rotation-number",level:3},{value:"_sx: <span><code>number</code></span>",id:"_sx-number",level:3},{value:"_sy: <span><code>number</code></span>",id:"_sy-number",level:3},{value:"Methods",id:"methods",level:2},{value:"setFromMatrix: <span><code>(matrix: Matrix) -&gt; void</code></span>",id:"setfrommatrix-matrix-matrix---void",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"updateLocalTransform: <span><code>() -&gt; void</code></span>",id:"updatelocaltransform----void",level:3},{value:"updateTransform: <span><code>(parentTransform: Transform) -&gt; void</code></span>",id:"updatetransform-parenttransform-transform---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"onChange: <span><code>() -&gt; void</code></span>",id:"onchange----void",level:3},{value:"updateSkew: <span><code>() -&gt; void</code></span>",id:"updateskew----void",level:3}],c={toc:u};function d(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_math"},"@pixi/math"),".Transform"),(0,n.kt)("p",null,"Transform that takes care about its versions."),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixi"},"new PIXI()")),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"identity-pixitransform"},"IDENTITY: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.Transform"))),(0,n.kt)("p",null,"A default (identity) transform.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_parentid-number"},"_parentID: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The locally unique ID of the parent's world transform used to calculate the current world transformation matrix.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_worldid-number"},"_worldID: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The locally unique ID of the world transform.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"localtransform-matrix"},"localTransform: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Matrix"))),(0,n.kt)("p",null,"The local transformation matrix.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"pivot-observablepoint"},"pivot: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"ObservablePoint"))),(0,n.kt)("p",null,"The pivot point of the displayObject that it rotates around.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"position-observablepoint"},"position: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"ObservablePoint"))),(0,n.kt)("p",null,"The coordinate of the object relative to the local coordinates of the parent.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"rotation-number"},"rotation: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The rotation of the object in radians.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"scale-observablepoint"},"scale: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"ObservablePoint"))),(0,n.kt)("p",null,"The scale factor of the object.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"skew-observablepoint"},"skew: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"ObservablePoint"))),(0,n.kt)("p",null,"The skew amount, on the x and y axis.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"worldtransform-matrix"},"worldTransform: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Matrix"))),(0,n.kt)("p",null,"The world transformation matrix.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_currentlocalid-number"},"_currentLocalID: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The locally unique ID of the local transform used to calculate the current local transformation matrix.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_cx-number"},"_cx: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The X-coordinate value of the normalized local X axis, the first column of the local transformation matrix without a scale.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_cy-number"},"_cy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The X-coordinate value of the normalized local Y axis, the second column of the local transformation matrix without a scale.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_localid-number"},"_localID: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The locally unique ID of the local transform.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_rotation-number"},"_rotation: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The rotation amount.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_sx-number"},"_sx: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The Y-coordinate value of the normalized local X axis, the first column of the local transformation matrix without a scale.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_sy-number"},"_sy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The Y-coordinate value of the normalized local Y axis, the second column of the local transformation matrix without a scale.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setfrommatrix-matrix-matrix---void"},"setFromMatrix: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(matrix",":"," Matrix) -",">"," void"))),(0,n.kt)("p",null,"Decomposes a matrix and sets the transforms properties based on it."),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matrix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Matrix")),(0,n.kt)("td",{parentName:"tr",align:null},"The matrix to decompose"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"updatelocaltransform----void"},"updateLocalTransform: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Updates the local transformation matrix.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"updatetransform-parenttransform-transform---void"},"updateTransform: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(parentTransform",":"," Transform) -",">"," void"))),(0,n.kt)("p",null,"Updates the local and the world transformation matrices."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"parentTransform"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Transform")),(0,n.kt)("td",{parentName:"tr",align:null},"The parent transform"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"onchange----void"},"onChange: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Called when a value changes.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"updateskew----void"},"updateSkew: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Called when the skew or the rotation changes.")),(0,n.kt)("hr",null))}d.isMDXComponent=!0}}]);