"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[3222],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(o,".").concat(c)]||m[c]||d[c]||l;return n?a.createElement(k,s(s({ref:t},u),{},{components:n})):a.createElement(k,s({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[m]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<l;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},35490:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={id:"PIXI.SystemManager.pixi_core",title:"Class: PIXI.SystemManager",sidebar_label:"PIXI.SystemManager",custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/PIXI.SystemManager.pixi_core",id:"api/classes/PIXI.SystemManager.pixi_core",title:"Class: PIXI.SystemManager",description:"@pixi/core.SystemManager",source:"@site/docs/api/classes/PIXI.SystemManager.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.SystemManager.pixi_core",permalink:"/api/classes/PIXI.SystemManager.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.SystemManager.pixi_core",title:"Class: PIXI.SystemManager",sidebar_label:"PIXI.SystemManager",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.StencilSystem",permalink:"/api/classes/PIXI.StencilSystem.pixi_core"},next:{title:"PIXI.Text",permalink:"/api/classes/PIXI.Text.pixi_text"}},o={},p=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"runners",id:"runners",level:3},{value:"Methods",id:"methods",level:2},{value:"addRunners",id:"addrunners",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"addSystem",id:"addsystem",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns",level:4},{value:"destroy",id:"destroy",level:3},{value:"emitWithCustomOptions",id:"emitwithcustomoptions",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"setup",id:"setup",level:3},{value:"Parameters:",id:"parameters-4",level:4}],u={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{class:"package-name"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".SystemManager")),(0,r.kt)("p",null,"The SystemManager is a class that provides functions for managing a set of systems This is a base class, that is generic (no render code or knowledge at all)"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"constructor"},"Constructor:"),(0,r.kt)("h4",null,(0,r.kt)("code",null,"new PIXI.SystemManager() ")),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"extends"},"Extends"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"EventEmitter")),(0,r.kt)("h2",{id:"members"},"Members"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"runners"},"runners"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"{"," ","[key",":"," string]",":"," Runner ","}")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," a collection of runners defined by the user")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"addrunners"},"addRunners"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(runnerIds",":"," string[]) -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Create a bunch of runners based of a collection of ids"),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"runnerIds"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string[]")),(0,r.kt)("td",{parentName:"tr",align:null},"the runner ids to add"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"addsystem"},"addSystem"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(ClassRef",":"," ISystemConstructor","<","R",">",", name",":"," string) -",">"," this")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Add a new system to the renderer."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ClassRef"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ISystemConstructor","<","R",">")),(0,r.kt)("td",{parentName:"tr",align:null},"Class reference")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Property name for system, if not specified will use a static ",(0,r.kt)("inlineCode",{parentName:"td"},"name")," property on the class itself. This name will be assigned as s property on the Renderer so make sure it doesn't collide with properties on Renderer.")))),(0,r.kt)("h4",{id:"returns"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"this")),(0,r.kt)("td",{parentName:"tr",align:null},"Return instance of renderer"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"destroy"},"destroy"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"() -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," destroy the all runners and systems. Its apps job to")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"emitwithcustomoptions"},"emitWithCustomOptions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(runner",":"," Runner, options",":"," Record","<","string, unknown",">",") -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," A function that will run a runner and call the runners function but pass in different options to each system based on there name."),(0,r.kt)("p",null,"E.g. If you have two systems added called ",(0,r.kt)("inlineCode",{parentName:"p"},"systemA")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"systemB")," you could call do the following",":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"system.emitWithCustomOptions(init, {\n    systemA: {...optionsForA},\n    systemB: {...optionsForB},\n});\n\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"init")," would be called on system A passing ",(0,r.kt)("inlineCode",{parentName:"p"},"optionsForA")," and on system B passing ",(0,r.kt)("inlineCode",{parentName:"p"},"optionsForB"),"."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"runner"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Runner")),(0,r.kt)("td",{parentName:"tr",align:null},"the runner to target")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Record","<","string, unknown",">")),(0,r.kt)("td",{parentName:"tr",align:null},"key value options for each system"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"setup"},"setup"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(config",":"," ISystemConfig","<","R",">",") -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Set up a system with a collection of SystemClasses and runners. Systems are attached dynamically to this class when added."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"config"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ISystemConfig","<","R",">")),(0,r.kt)("td",{parentName:"tr",align:null},"the config for the system manager"))))),(0,r.kt)("hr",null))}m.isMDXComponent=!0}}]);