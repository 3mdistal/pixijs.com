"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[75532],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),k=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},o=function(e){var t=k(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),m=k(a),c=n,u=m["".concat(p,".").concat(c)]||m[c]||d[c]||i;return a?r.createElement(u,s(s({ref:t},o),{},{components:a})):r.createElement(u,s({ref:t},o))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:n,s[1]=l;for(var k=2;k<i;k++)s[k]=a[k];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},81687:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>k});var r=a(87462),n=(a(67294),a(3905));const i={id:"pixi_core.MaskSystem",title:"Class: MaskSystem",sidebar_label:"MaskSystem",custom_edit_url:null},s=void 0,l={unversionedId:"api/classes/pixi_core.MaskSystem",id:"api/classes/pixi_core.MaskSystem",title:"Class: MaskSystem",description:"@pixi/core.MaskSystem",source:"@site/docs/api/classes/pixi_core.MaskSystem.md",sourceDirName:"api/classes",slug:"/api/classes/pixi_core.MaskSystem",permalink:"/api/classes/pixi_core.MaskSystem",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"pixi_core.MaskSystem",title:"Class: MaskSystem",sidebar_label:"MaskSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"MaskData",permalink:"/api/classes/pixi_core.MaskData"},next:{title:"Matrix",permalink:"/api/classes/pixi_core.Matrix"}},p={},k=[{value:"Mask Stacks",id:"mask-stacks",level:2},{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"enableScissor",id:"enablescissor",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"Methods",id:"methods",level:2},{value:"destroy",id:"destroy",level:3},{value:"Returns",id:"returns",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"detect",id:"detect",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"pop",id:"pop",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"popColorMask",id:"popcolormask",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"popSpriteMask",id:"popspritemask",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"push",id:"push",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"pushColorMask",id:"pushcolormask",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"pushSpriteMask",id:"pushspritemask",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"setMaskStack",id:"setmaskstack",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-10",level:4}],o={toc:k};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/modules/pixi_core"},"@pixi/core"),".MaskSystem"),(0,n.kt)("p",null,"System plugin to the renderer to manage masks."),(0,n.kt)("p",null,"There are three built-in types of masking:\n",(0,n.kt)("strong",{parentName:"p"},"Scissor Masking"),": Scissor masking discards pixels that are outside of a rectangle called the scissor box. It is\nthe most performant as the scissor test is inexpensive. However, it can only be used when the mask is rectangular.\n",(0,n.kt)("strong",{parentName:"p"},"Stencil Masking"),": Stencil masking discards pixels that don't overlap with the pixels rendered into the stencil\nbuffer. It is the next fastest option as it does not require rendering into a separate framebuffer. However, it does\ncause the mask to be rendered ",(0,n.kt)("strong",{parentName:"p"},"twice")," for each masking operation; hence, minimize the rendering cost of your masks.\n",(0,n.kt)("strong",{parentName:"p"},"Sprite Mask Filtering"),": Sprite mask filtering discards pixels based on the red channel of the sprite-mask's\ntexture. (Generally, the masking texture is grayscale). Using advanced techniques, you might be able to embed this\ntype of masking in a custom shader - and hence, bypassing the masking system fully for performance wins."),(0,n.kt)("p",null,"The best type of masking is auto-detected when you ",(0,n.kt)("inlineCode",{parentName:"p"},"push")," one. To use scissor masking, you must pass in a ",(0,n.kt)("inlineCode",{parentName:"p"},"Graphics"),"\nobject with just a rectangle drawn."),(0,n.kt)("h2",{id:"mask-stacks"},"Mask Stacks"),(0,n.kt)("p",null,"In the scene graph, masks can be applied recursively, i.e. a mask can be applied during a masking operation. The mask\nstack stores the currently applied masks in order. Each PIXI.BaseRenderTexture holds its own mask stack, i.e.\nwhen you switch render-textures, the old masks only applied when you switch back to rendering to the old render-target."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Memberof"))),(0,n.kt)("p",null,"PIXI"),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/interfaces/pixi_core.ISystem"},(0,n.kt)("inlineCode",{parentName:"a"},"ISystem")))),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new MaskSystem"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"renderer"),")"),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"renderer")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.Renderer"},(0,n.kt)("inlineCode",{parentName:"a"},"Renderer"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The renderer this System works for.")))),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L66"},"pixijs/packages/core/src/mask/MaskSystem.ts:66")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"enablescissor"},"enableScissor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"enableScissor"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Flag to enable scissor masking."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Default"))),(0,n.kt)("p",null,"true"),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L46"},"pixijs/packages/core/src/mask/MaskSystem.ts:46")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"destroy"},"destroy"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"destroy"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Generic destroy methods to be overridden by the subclass"),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/api/interfaces/pixi_core.ISystem"},"ISystem"),".",(0,n.kt)("a",{parentName:"p",href:"/api/interfaces/pixi_core.ISystem#destroy"},"destroy")),(0,n.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L351"},"pixijs/packages/core/src/mask/MaskSystem.ts:351")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"detect"},"detect"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"detect"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"maskData"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Sets type of MaskData based on its maskObject."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"maskData")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.MaskData"},(0,n.kt)("inlineCode",{parentName:"a"},"MaskData")))))),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L214"},"pixijs/packages/core/src/mask/MaskSystem.ts:214")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"pop"},"pop"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"pop"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"target"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Removes the last mask from the mask stack and doesn't return it."),(0,n.kt)("p",null,"NOTE: The batch renderer should be flushed beforehand to render the masked contents before the mask is removed."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"target")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/pixi_core.IMaskTarget"},(0,n.kt)("inlineCode",{parentName:"a"},"IMaskTarget"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Display Object to pop the mask from")))),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L160"},"pixijs/packages/core/src/mask/MaskSystem.ts:160")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"popcolormask"},"popColorMask"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"popColorMask"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"maskData"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Pops the color mask."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"maskData")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.MaskData"},(0,n.kt)("inlineCode",{parentName:"a"},"MaskData"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mask data")))),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L334"},"pixijs/packages/core/src/mask/MaskSystem.ts:334")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"popspritemask"},"popSpriteMask"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"popSpriteMask"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"maskData"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Removes the last filter from the filter stack and doesn't return it."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"maskData")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.MaskData"},(0,n.kt)("inlineCode",{parentName:"a"},"MaskData"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Sprite to be used as the mask.")))),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L295"},"pixijs/packages/core/src/mask/MaskSystem.ts:295")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"push"},"push"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"push"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"target"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"maskDataOrTarget"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Enables the mask and appends it to the current mask stack."),(0,n.kt)("p",null,"NOTE: The batch renderer should be flushed beforehand to prevent pending renders from being masked."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"target")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/pixi_core.IMaskTarget"},(0,n.kt)("inlineCode",{parentName:"a"},"IMaskTarget"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Display Object to push the mask to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"maskDataOrTarget")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/interfaces/pixi_core.IMaskTarget"},(0,n.kt)("inlineCode",{parentName:"a"},"IMaskTarget"))," ","|"," ",(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.MaskData"},(0,n.kt)("inlineCode",{parentName:"a"},"MaskData"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The masking data.")))),(0,n.kt)("h4",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L96"},"pixijs/packages/core/src/mask/MaskSystem.ts:96")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"pushcolormask"},"pushColorMask"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"pushColorMask"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"maskData"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Pushes the color mask."),(0,n.kt)("h4",{id:"parameters-6"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"maskData")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.MaskData"},(0,n.kt)("inlineCode",{parentName:"a"},"MaskData"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mask data")))),(0,n.kt)("h4",{id:"returns-6"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L314"},"pixijs/packages/core/src/mask/MaskSystem.ts:314")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"pushspritemask"},"pushSpriteMask"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"pushSpriteMask"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"maskData"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Applies the Mask and adds it to the current filter stack."),(0,n.kt)("h4",{id:"parameters-7"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"maskData")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.MaskData"},(0,n.kt)("inlineCode",{parentName:"a"},"MaskData"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Sprite to be used as the mask.")))),(0,n.kt)("h4",{id:"returns-7"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L240"},"pixijs/packages/core/src/mask/MaskSystem.ts:240")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"setmaskstack"},"setMaskStack"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"setMaskStack"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"maskStack"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Changes the mask stack that is used by this System."),(0,n.kt)("h4",{id:"parameters-8"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"maskStack")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/api/classes/pixi_core.MaskData"},(0,n.kt)("inlineCode",{parentName:"a"},"MaskData")),"[]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The mask stack")))),(0,n.kt)("h4",{id:"returns-8"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/core/src/mask/MaskSystem.ts#L82"},"pixijs/packages/core/src/mask/MaskSystem.ts:82")))}m.isMDXComponent=!0}}]);