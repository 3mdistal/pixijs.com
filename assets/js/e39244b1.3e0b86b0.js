"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[9918],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),p=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,k=u["".concat(o,".").concat(m)]||u[m]||c[m]||l;return r?a.createElement(k,s(s({ref:t},d),{},{components:r})):a.createElement(k,s({ref:t},d))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,s=new Array(l);s[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<l;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91170:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const l={id:"PIXI.BasisParser.pixi_basis",title:"Class: PIXI.BasisParser",sidebar_label:"PIXI.BasisParser",custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/PIXI.BasisParser.pixi_basis",id:"api/classes/PIXI.BasisParser.pixi_basis",title:"Class: PIXI.BasisParser",description:"@pixi/basis.BasisParser",source:"@site/docs/api/classes/PIXI.BasisParser.pixi_basis.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.BasisParser.pixi_basis",permalink:"/api/classes/PIXI.BasisParser.pixi_basis",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.BasisParser.pixi_basis",title:"Class: PIXI.BasisParser",sidebar_label:"PIXI.BasisParser",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.BaseTexture",permalink:"/api/classes/PIXI.BaseTexture.pixi_core"},next:{title:"PIXI.BatchDrawCall",permalink:"/api/classes/PIXI.BatchDrawCall.pixi_core"}},o={},p=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"bindingURL",id:"bindingurl",level:3},{value:"onTranscoderInitialized",id:"ontranscoderinitialized",level:3},{value:"workerURL",id:"workerurl",level:3},{value:"onMessage",id:"onmessage",level:3},{value:"Methods",id:"methods",level:2},{value:"loadTranscoder",id:"loadtranscoder",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4},{value:"setTranscoder",id:"settranscoder",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"initAsync",id:"initasync",level:3},{value:"Returns:",id:"returns-1",level:4},{value:"transcodeAsync",id:"transcodeasync",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-2",level:4}],d={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("div",{class:"package-name"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_basis"},"@pixi/basis"),".BasisParser")),(0,n.kt)("p",null,"Loader plugin for handling BASIS supercompressed texture files.\nTo use this loader, you must bind the basis_universal WebAssembly transcoder. There are two ways of doing this",":"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Adding a ","<","script",">"," tag to your HTML page to the transcoder bundle in this package, and serving the WASM binary from the same location.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'\x3c!-- Copy ./node_modules/@pixi/basis/assets/basis_.wasm into your assets directory\n    as well, so it is served from the same folder as the JavaScript! --\x3e\n<script src="./node_modules/@pixi/basis/assets/basis_transcoder.js"><\/script>\n\n')),(0,n.kt)("p",null,"NOTE",":"," ",(0,n.kt)("inlineCode",{parentName:"p"},"basis_transcoder.js")," expects the WebAssembly binary to be named ",(0,n.kt)("inlineCode",{parentName:"p"},"basis_transcoder.wasm"),". NOTE-2",":"," This method supports transcoding on the main-thread. Only use this if you have 1 or 2 ","*",".basis files."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Loading the transcoder source from a URL.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"// Use this if you to use the default CDN url for @pixi/basis\nBasisParser.loadTranscoder();\n\n// Use this if you want to serve the transcoder on your own\nBasisParser.loadTranscoder('./basis_transcoder.js', './basis_transcoder.wasm');\n\n")),(0,n.kt)("p",null,"NOTE",":"," This can only be used with web-workers."),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"constructor"},"Constructor:"),(0,n.kt)("h4",null,(0,n.kt)("code",null,"new PIXI.BasisParser() ")),"Loader plugin for handling BASIS supercompressed texture files.",(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"bindingurl"},"bindingURL"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"string")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," URL for the script containing the basis_universal library.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"ontranscoderinitialized"},"onTranscoderInitialized"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"unknown")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," a promise that when reslved means the transcoder is ready to be used")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"workerurl"},"workerURL"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"string")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Generated URL for the transcoder worker script.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"onmessage"},"onMessage"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"unknown")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Handles responses from the web-worker")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"loadtranscoder"},"loadTranscoder"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(jsURL",":"," string, wasmURL",":"," string) -",">"," Promise","<","[void, void]",">")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Loads the transcoder source code"),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"jsURL"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"URL to the javascript basis transcoder")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"wasmURL"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"URL to the wasm basis transcoder")))),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Promise","<","[void, void]",">")),(0,n.kt)("td",{parentName:"tr",align:null},"A promise that resolves when both the js and wasm transcoders have been loaded."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"settranscoder"},"setTranscoder"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(jsSource",":"," string, wasmSource",":"," ArrayBuffer) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Set the transcoder source code directly"),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"jsSource"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"source for the javascript basis transcoder")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"wasmSource"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"ArrayBuffer")),(0,n.kt)("td",{parentName:"tr",align:null},"source for the wasm basis transcoder"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"initasync"},"initAsync"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," Promise","<","void",">")),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Promise","<","void",">")),(0,n.kt)("td",{parentName:"tr",align:null},"a promise that is resolved when the web-worker is initialized"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"transcodeasync"},"transcodeAsync"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(basisData",":"," Uint8Array, rgbaFormat",":"," BASIS_FORMATS, rgbFormat",":"," BASIS_FORMATS) -",">"," Promise","<","ITranscodeResponse",">")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Creates a promise that will resolve when the transcoding of a ","*",".basis file is complete."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"basisData"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Uint8Array")),(0,n.kt)("td",{parentName:"tr",align:null},"*",".basis file contents")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"rgbaFormat"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BASIS_FORMATS")),(0,n.kt)("td",{parentName:"tr",align:null},"transcoding format for RGBA files")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"rgbFormat"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BASIS_FORMATS")),(0,n.kt)("td",{parentName:"tr",align:null},"transcoding format for RGB files")))),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Promise","<","ITranscodeResponse",">")),(0,n.kt)("td",{parentName:"tr",align:null},"a promise that is resolved with the transcoding response of the web-worker"))))),(0,n.kt)("hr",null))}u.isMDXComponent=!0}}]);