"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[7468],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},l="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=u(t),d=a,m=l["".concat(p,".").concat(d)]||l[d]||g[d]||o;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},11355:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const o={hide_table_of_contents:!0},i="Dragging",s={unversionedId:"examples/events/dragging",id:"examples/events/dragging",title:"Dragging",description:"",source:"@site/docs/examples/events/dragging.md",sourceDirName:"examples/events",slug:"/examples/events/dragging",permalink:"/examples/events/dragging",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/events/dragging.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Interactivity",permalink:"/examples/events/interactivity"},next:{title:"Custom Mouse Cursor",permalink:"/examples/events/custom-mouse-icon"}},p={},u=[],c={toc:u};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dragging"},"Dragging"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ background: '#1099bb', resizeTo: window });\ndocument.body.appendChild(app.view);\n\n// create a texture from an image path\nconst texture = PIXI.Texture.from('https://beta.pixijs.com/assets/bunny.png');\n\n// Scale mode for pixelation\ntexture.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\n\nfor (let i = 0; i < 10; i++) {\n    createBunny(\n        Math.floor(Math.random() * app.screen.width),\n        Math.floor(Math.random() * app.screen.height),\n    );\n}\n\nfunction createBunny(x, y) {\n    // create our little bunny friend..\n    const bunny = new PIXI.Sprite(texture);\n\n    // enable the bunny to be interactive... this will allow it to respond to mouse and touch events\n    bunny.interactive = true;\n\n    // this button mode will mean the hand cursor appears when you roll over the bunny with your mouse\n    bunny.cursor = 'pointer';\n\n    // center the bunny's anchor point\n    bunny.anchor.set(0.5);\n\n    // make it a bit bigger, so it's easier to grab\n    bunny.scale.set(3);\n\n    // setup events for mouse + touch using\n    // the pointer events\n    bunny.on('pointerdown', onDragStart, bunny);\n\n    // move the sprite to its designated position\n    bunny.x = x;\n    bunny.y = y;\n\n    // add it to the stage\n    app.stage.addChild(bunny);\n}\n\nlet dragTarget = null;\n\napp.stage.interactive = true;\napp.stage.hitArea = app.screen;\napp.stage.on('pointerup', onDragEnd);\napp.stage.on('pointerupoutside', onDragEnd);\n\nfunction onDragMove(event) {\n    if (dragTarget) {\n        dragTarget.parent.toLocal(event.global, null, dragTarget.position);\n    }\n}\n\nfunction onDragStart() {\n    // store a reference to the data\n    // the reason for this is because of multitouch\n    // we want to track the movement of this particular touch\n    // this.data = event.data;\n    this.alpha = 0.5;\n    dragTarget = this;\n    app.stage.on('pointermove', onDragMove);\n}\n\nfunction onDragEnd() {\n    if (dragTarget) {\n        app.stage.off('pointermove', onDragMove);\n        dragTarget.alpha = 1;\n        dragTarget = null;\n    }\n}\n")))}l.isMDXComponent=!0}}]);