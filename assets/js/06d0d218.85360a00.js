"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[151],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(t),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(m,i(i({ref:n},l),{},{components:t})):r.createElement(m,i({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},25943:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const o={hide_table_of_contents:!0},i="Scratchcard",s={unversionedId:"examples/advanced/scratchcard",id:"examples/advanced/scratchcard",title:"Scratchcard",description:"",source:"@site/docs/examples/advanced/scratchcard.md",sourceDirName:"examples/advanced",slug:"/examples/advanced/scratchcard",permalink:"/examples/advanced/scratchcard",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/advanced/scratchcard.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Mouse Trail",permalink:"/examples/advanced/mouse-trail"},next:{title:"Screenshot",permalink:"/examples/advanced/screenshot"}},c={},p=[],l={toc:p};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"scratchcard"},"Scratchcard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ resizeTo: window });\ndocument.body.appendChild(app.view);\n\n// prepare circle texture, that will be our brush\nconst brush = new PIXI.Graphics()\n    .beginFill(0xffffff)\n    .drawCircle(0, 0, 50);\n\n// Create a line that will interpolate the drawn points\nconst line = new PIXI.Graphics();\n\nPIXI.Assets.add('t1', 'https://beta.pixijs.com/assets/bg_grass.jpg');\nPIXI.Assets.add('t2', 'https://beta.pixijs.com/assets/bg_rotate.jpg');\nPIXI.Assets.load(['t1', 't2']).then(setup);\n\nfunction setup() {\n    const { width, height } = app.screen;\n    const stageSize = { width, height };\n\n    const background = Object.assign(PIXI.Sprite.from('t1'), stageSize);\n    const imageToReveal = Object.assign(PIXI.Sprite.from('t2'), stageSize);\n    const renderTexture = PIXI.RenderTexture.create(stageSize);\n    const renderTextureSprite = new PIXI.Sprite(renderTexture);\n\n    imageToReveal.mask = renderTextureSprite;\n\n    app.stage.addChild(\n        background,\n        imageToReveal,\n        renderTextureSprite,\n    );\n\n    app.stage.interactive = true;\n    app.stage.hitArea = app.screen;\n    app.stage\n        .on('pointerdown', pointerDown)\n        .on('pointerup', pointerUp)\n        .on('pointerupoutside', pointerUp)\n        .on('pointermove', pointerMove);\n\n    let dragging = false;\n    let lastDrawnPoint = null;\n    function pointerMove({ global: { x, y } }) {\n        if (dragging) {\n            brush.position.set(x, y);\n            app.renderer.render(brush, {\n                renderTexture,\n                clear: false,\n                skipUpdateTransform: false,\n            });\n            // Smooth out the drawing a little bit to make it look nicer\n            // this connects the previous drawn point to the current one\n            // using a line\n            if (lastDrawnPoint) {\n                line\n                    .clear()\n                    .lineStyle({ width: 100, color: 0xffffff })\n                    .moveTo(lastDrawnPoint.x, lastDrawnPoint.y)\n                    .lineTo(x, y);\n                app.renderer.render(line, {\n                    renderTexture,\n                    clear: false,\n                    skipUpdateTransform: false,\n                });\n            }\n            lastDrawnPoint = lastDrawnPoint || new PIXI.Point();\n            lastDrawnPoint.set(x, y);\n        }\n    }\n\n    function pointerDown(event) {\n        dragging = true;\n        pointerMove(event);\n    }\n\n    function pointerUp(event) {\n        dragging = false;\n        lastDrawnPoint = null;\n    }\n}\n")))}d.isMDXComponent=!0}}]);