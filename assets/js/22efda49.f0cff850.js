"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[2772],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84189:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const a={id:"pixi_constants.GC_MODES",title:"Enumeration: GC_MODES",sidebar_label:"GC_MODES",custom_edit_url:null},o=void 0,l={unversionedId:"api/enums/pixi_constants.GC_MODES",id:"api/enums/pixi_constants.GC_MODES",title:"Enumeration: GC_MODES",description:"@pixi/constants.GCMODES",source:"@site/docs/api/enums/pixi_constants.GC_MODES.md",sourceDirName:"api/enums",slug:"/api/enums/pixi_constants.GC_MODES",permalink:"/api/enums/pixi_constants.GC_MODES",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"pixi_constants.GC_MODES",title:"Enumeration: GC_MODES",sidebar_label:"GC_MODES",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"FORMATS",permalink:"/api/enums/pixi_constants.FORMATS"},next:{title:"MASK_TYPES",permalink:"/api/enums/pixi_constants.MASK_TYPES"}},s={},p=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"AUTO",id:"auto",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"MANUAL",id:"manual",level:3},{value:"Defined in",id:"defined-in-1",level:4}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/modules/pixi_constants"},"@pixi/constants"),".GC_MODES"),(0,i.kt)("p",null,"The gc modes that are supported by pixi."),(0,i.kt)("p",null,"The PIXI.settings.GC_MODE Garbage Collection mode for PixiJS textures is AUTO\nIf set to GC_MODE, the renderer will occasionally check textures usage. If they are not\nused for a specified period of time they will be removed from the GPU. They will of course\nbe uploaded again when they are required. This is a silent behind the scenes process that\nshould ensure that the GPU does not  get filled up."),(0,i.kt)("p",null,"Handy for mobile devices!\nThis property only affects WebGL."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Name"))),(0,i.kt)("p",null,"GC_MODES"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Static"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Memberof"))),(0,i.kt)("p",null,"PIXI"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Property"))),(0,i.kt)("p",null,"Garbage collection will happen periodically automatically"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Property"))),(0,i.kt)("p",null,"Garbage collection will need to be called manually"),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.kt)("h3",{id:"auto"},"AUTO"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"AUTO")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/constants/src/index.ts#L441"},"pixijs/packages/constants/src/index.ts:441")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"manual"},"MANUAL"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"MANUAL")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/pixijs/pixijs/blob/2194fe5c5/packages/constants/src/index.ts#L442"},"pixijs/packages/constants/src/index.ts:442")))}c.isMDXComponent=!0}}]);