"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[2879],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>k});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),p=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(r),m=n,k=c["".concat(o,".").concat(m)]||c[m]||d[m]||l;return r?a.createElement(k,u(u({ref:t},s),{},{components:r})):a.createElement(k,u({ref:t},s))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,u=new Array(l);u[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[c]="string"==typeof e?e:n,u[1]=i;for(var p=2;p<l;p++)u[p]=r[p];return a.createElement.apply(null,u)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},36208:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>u,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const l={id:"PIXI.BatchSystem.pixi_core",title:"Class: PIXI.BatchSystem",sidebar_label:"PIXI.BatchSystem",custom_edit_url:null},u=void 0,i={unversionedId:"api/classes/PIXI.BatchSystem.pixi_core",id:"api/classes/PIXI.BatchSystem.pixi_core",title:"Class: PIXI.BatchSystem",description:"@pixi/core.BatchSystem",source:"@site/docs/api/classes/PIXI.BatchSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.BatchSystem.pixi_core",permalink:"/api/classes/PIXI.BatchSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.BatchSystem.pixi_core",title:"Class: PIXI.BatchSystem",sidebar_label:"PIXI.BatchSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.BatchShaderGenerator",permalink:"/api/classes/PIXI.BatchShaderGenerator.pixi_core"},next:{title:"PIXI.BatchTextureArray",permalink:"/api/classes/PIXI.BatchTextureArray.pixi_core"}},o={},p=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"currentRenderer",id:"currentrenderer",level:3},{value:"emptyRenderer",id:"emptyrenderer",level:3},{value:"Methods",id:"methods",level:2},{value:"boundArray",id:"boundarray",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"copyBoundTextures",id:"copyboundtextures",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"flush",id:"flush",level:3},{value:"reset",id:"reset",level:3},{value:"setObjectRenderer",id:"setobjectrenderer",level:3},{value:"Parameters:",id:"parameters-3",level:4}],s={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("div",{class:"package-name"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".BatchSystem")),(0,n.kt)("p",null,"System plugin to the renderer to manage batching."),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"constructor"},"Constructor:"),(0,n.kt)("h4",null,(0,n.kt)("code",null,"new PIXI.BatchSystem(renderer: Renderer) ")),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"currentrenderer"},"currentRenderer"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"ObjectRenderer")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The currently active ObjectRenderer.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"emptyrenderer"},"emptyRenderer"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"ObjectRenderer")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," An empty renderer.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"boundarray"},"boundArray"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(texArray",":"," BatchTextureArray, boundTextures",":"," Array","<","BaseTexture",">",", batchId",":"," number, maxTextures",":"," number) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Assigns batch locations to textures in array based on boundTextures state. All textures in texArray should have ",(0,n.kt)("inlineCode",{parentName:"p"},"_batchEnabled = _batchId"),", and their count should be less than ",(0,n.kt)("inlineCode",{parentName:"p"},"maxTextures"),"."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"texArray"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BatchTextureArray")),(0,n.kt)("td",{parentName:"tr",align:null},"textures to bound")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"boundTextures"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","BaseTexture",">")),(0,n.kt)("td",{parentName:"tr",align:null},"current state of bound textures")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"batchId"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"marker for _batchEnabled param of textures in texArray")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maxTextures"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"number of texture locations to manipulate"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"copyboundtextures"},"copyBoundTextures"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(arr",":"," BaseTexture[], maxTextures",":"," number) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Handy function for batch renderers",":"," copies bound textures in first maxTextures locations to array sets actual _batchLocation for them"),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"arr"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture[]")),(0,n.kt)("td",{parentName:"tr",align:null},"arr copy destination")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maxTextures"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"number of copied elements"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"flush"},"flush"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," This should be called if you wish to do some custom rendering It will basically render anything that may be batched up such as sprites")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"reset"},"reset"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Reset the system to an empty renderer")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setobjectrenderer"},"setObjectRenderer"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(objectRenderer",":"," ObjectRenderer) -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Changes the current renderer to the one given in parameter"),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"objectRenderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"ObjectRenderer")),(0,n.kt)("td",{parentName:"tr",align:null},"The object renderer to use."))))),(0,n.kt)("hr",null))}c.isMDXComponent=!0}}]);