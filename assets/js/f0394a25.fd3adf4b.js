"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[4271],{3905:(e,t,l)=>{l.d(t,{Zo:()=>u,kt:()=>f});var n=l(67294);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function p(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var i=n.createContext({}),s=function(e){var t=n.useContext(i),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},u=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var l=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(l),k=r,f=c["".concat(i,".").concat(k)]||c[k]||d[k]||a;return l?n.createElement(f,o(o({ref:t},u),{},{components:l})):n.createElement(f,o({ref:t},u))}));function f(e,t){var l=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=l.length,o=new Array(a);o[0]=k;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:r,o[1]=p;for(var s=2;s<a;s++)o[s]=l[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,l)}k.displayName="MDXCreateElement"},71466:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var n=l(87462),r=(l(67294),l(3905));const a={id:"PIXI.State.pixi_core",title:"Class: PIXI.State",sidebar_label:"PIXI.State",custom_edit_url:null},o=void 0,p={unversionedId:"api/classes/PIXI.State.pixi_core",id:"api/classes/PIXI.State.pixi_core",title:"Class: PIXI.State",description:"@pixi/core.State",source:"@site/docs/api/classes/PIXI.State.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.State.pixi_core",permalink:"/api/classes/PIXI.State.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.State.pixi_core",title:"Class: PIXI.State",sidebar_label:"PIXI.State",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.StartupSystem",permalink:"/api/classes/PIXI.StartupSystem.pixi_core"},next:{title:"PIXI.StateSystem",permalink:"/api/classes/PIXI.StateSystem.pixi_core"}},i={},s=[{value:"Members",id:"members",level:2},{value:"blend",id:"blend",level:3},{value:"blendMode",id:"blendmode",level:3},{value:"clockwiseFrontFace",id:"clockwisefrontface",level:3},{value:"culling",id:"culling",level:3},{value:"depthMask",id:"depthmask",level:3},{value:"depthTest",id:"depthtest",level:3},{value:"offsets",id:"offsets",level:3},{value:"polygonOffset",id:"polygonoffset",level:3}],u={toc:s};function c(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{class:"package-name"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".State")),(0,r.kt)("p",null,"This is a WebGL state, and is is passed to ",(0,r.kt)("a",{parentName:"p",href:"../classes/PIXI.StateSystem.pixi_core"},"PIXI.StateSystem"),".\nEach mesh rendered may require WebGL to be in a different state. For example you may want different blend mode or to enable polygon offsets"),(0,r.kt)("article",null,"### Contructor:",(0,r.kt)("h4",null,(0,r.kt)("code",null,"new PIXI()"))),(0,r.kt)("h2",{id:"members"},"Members"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"blend"},"blend"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"true")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Activates blending of the computed fragment color values.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"blendmode"},"blendMode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"BLEND_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.BLEND_MODES.NORMAL")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The blend mode to be applied when this state is set. Apply a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"PIXI.BLEND_MODES.NORMAL")," to reset the blend mode. Setting this mode to anything other than NO_BLEND will automatically switch blending on.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"clockwisefrontface"},"clockwiseFrontFace"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Specifies whether or not front or back-facing polygons can be culled.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"culling"},"culling"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Activates culling of polygons.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"depthmask"},"depthMask"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"true")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Enables or disables writing to the depth buffer.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"depthtest"},"depthTest"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Activates depth comparisons and updates to the depth buffer.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"offsets"},"offsets"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Activates adding an offset to depth values of polygon's fragments")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"polygonoffset"},"polygonOffset"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.")),(0,r.kt)("hr",null))}c.isMDXComponent=!0}}]);