"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[3727],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>b});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=i,b=u["".concat(l,".").concat(m)]||u[m]||g[m]||o;return t?r.createElement(b,a(a({ref:n},c),{},{components:t})):r.createElement(b,a({ref:n},c))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},87814:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const o={hide_table_of_contents:!0},a="Goblin",s={unversionedId:"examples/plugin-spine/goblins",id:"examples/plugin-spine/goblins",title:"Goblin",description:"",source:"@site/docs/examples/plugin-spine/goblins.md",sourceDirName:"examples/plugin-spine",slug:"/examples/plugin-spine/goblins",permalink:"/examples/plugin-spine/goblins",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/plugin-spine/goblins.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"Dragon",permalink:"/examples/plugin-spine/dragon"},next:{title:"Pixie",permalink:"/examples/plugin-spine/pixie"}},l={},p=[],c={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"goblin"},"Goblin"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ resizeTo: window });\ndocument.body.appendChild(app.view);\n\n// load spine data\napp.loader\n    .add('goblins', 'https://beta.pixijs.com/assets/pixi-spine/goblins.json')\n    .load(onAssetsLoaded);\n\napp.stage.interactive = true;\napp.stage.cursor = 'pointer';\n\nfunction onAssetsLoaded(loader, res) {\n    const goblin = new PIXI.spine.Spine(res.goblins.spineData);\n\n    // set current skin\n    goblin.skeleton.setSkinByName('goblin');\n    goblin.skeleton.setSlotsToSetupPose();\n\n    // set the position\n    goblin.x = 400;\n    goblin.y = 600;\n\n    goblin.scale.set(1.5);\n\n    // play animation\n    goblin.state.setAnimation(0, 'walk', true);\n\n    app.stage.addChild(goblin);\n\n    app.stage.on('pointertap', () => {\n    // change current skin\n        const currentSkinName = goblin.skeleton.skin.name;\n        const newSkinName = (currentSkinName === 'goblin' ? 'goblingirl' : 'goblin');\n        goblin.skeleton.setSkinByName(newSkinName);\n        goblin.skeleton.setSlotsToSetupPose();\n    });\n}\n")))}u.isMDXComponent=!0}}]);