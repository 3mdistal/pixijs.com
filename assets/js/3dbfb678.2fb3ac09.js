"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[9335],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,k=p["".concat(o,".").concat(m)]||p[m]||c[m]||l;return r?n.createElement(k,u(u({ref:t},d),{},{components:r})):n.createElement(k,u({ref:t},d))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,u=new Array(l);u[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[p]="string"==typeof e?e:a,u[1]=i;for(var s=2;s<l;s++)u[s]=r[s];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},48182:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>u,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const l={id:"PIXI.TextureSystem.pixi_core",title:"Class: PIXI.TextureSystem",sidebar_label:"PIXI.TextureSystem",custom_edit_url:null},u=void 0,i={unversionedId:"api/classes/PIXI.TextureSystem.pixi_core",id:"api/classes/PIXI.TextureSystem.pixi_core",title:"Class: PIXI.TextureSystem",description:"@pixi/core.TextureSystem",source:"@site/docs/api/classes/PIXI.TextureSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.TextureSystem.pixi_core",permalink:"/api/classes/PIXI.TextureSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.TextureSystem.pixi_core",title:"Class: PIXI.TextureSystem",sidebar_label:"PIXI.TextureSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.TextureMatrix",permalink:"/api/classes/PIXI.TextureMatrix.pixi_core"},next:{title:"PIXI.TextureUvs",permalink:"/api/classes/PIXI.TextureUvs.pixi_core"}},o={},s=[{value:"new PIXI.TextureSystem: <span><code>(renderer: Renderer) </code></span>",id:"new-pixitexturesystem-renderer-renderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"boundTextures: <span><code>BaseTexture[]</code></span>",id:"boundtextures-basetexture",level:3},{value:"currentLocation: <span><code>number</code></span>",id:"currentlocation-number",level:3},{value:"managedTextures: <span><code>Array&lt;BaseTexture&gt;</code></span>",id:"managedtextures-arraybasetexture",level:3},{value:"hasIntegerTextures: <span><code>boolean</code></span>",id:"hasintegertextures-boolean",level:3},{value:"unknownTexture: <span><code>BaseTexture</code></span>",id:"unknowntexture-basetexture",level:3},{value:"Methods",id:"methods",level:2},{value:"bind: <span><code>(texture: Texture | BaseTexture, location: number) -&gt; void</code></span>",id:"bind-texture-texture--basetexture-location-number---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"contextChange: <span><code>() -&gt; void</code></span>",id:"contextchange----void",level:3},{value:"ensureSamplerType: <span><code>(maxTextures: number) -&gt; void</code></span>",id:"ensuresamplertype-maxtextures-number---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"reset: <span><code>() -&gt; void</code></span>",id:"reset----void",level:3},{value:"unbind: <span><code>(texture: BaseTexture) -&gt; void</code></span>",id:"unbind-texture-basetexture---void",level:3},{value:"Parameters:",id:"parameters-3",level:4}],d={toc:s};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".TextureSystem"),(0,a.kt)("p",null,"System plugin to the renderer to manage textures."),(0,a.kt)("p",null,"// TODO: @see"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"new-pixitexturesystem-renderer-renderer-"},"new PIXI.TextureSystem: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(renderer",":"," Renderer) "))),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"renderer"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Renderer")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null)),(0,a.kt)("td",{parentName:"tr",align:null},"The renderer this system works for."))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"boundtextures-basetexture"},"boundTextures: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"BaseTexture[]"))),(0,a.kt)("p",null,"Bound textures.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"currentlocation-number"},"currentLocation: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("p",null,"Current location.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"managedtextures-arraybasetexture"},"managedTextures: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Array","<","BaseTexture",">"))),(0,a.kt)("p",null,"List of managed textures.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"hasintegertextures-boolean"},"hasIntegerTextures: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"boolean"))),(0,a.kt)("p",null,"Whether glTexture with int/uint sampler type was uploaded.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"unknowntexture-basetexture"},"unknownTexture: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"BaseTexture"))),(0,a.kt)("p",null,"BaseTexture value that shows that we don't know what is bound.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"bind-texture-texture--basetexture-location-number---void"},"bind: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(texture",":"," Texture ","|"," BaseTexture, location",":"," number) -",">"," void"))),(0,a.kt)("p",null,"Bind a texture to a specific location\nIf you want to unbind something, please use ",(0,a.kt)("inlineCode",{parentName:"p"},"unbind(texture)")," instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"bind(null, textureLocation)")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"texture"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Texture ","|"," BaseTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"Texture to bind")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"location"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Location to bind at"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"contextchange----void"},"contextChange: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Sets up the renderer context and necessary buffers.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"ensuresamplertype-maxtextures-number---void"},"ensureSamplerType: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(maxTextures",":"," number) -",">"," void"))),(0,a.kt)("p",null,"Ensures that current boundTextures all have FLOAT sampler type, see ",(0,a.kt)("a",{parentName:"p",href:"../enums/PIXI.SAMPLER_TYPES.pixi_constants"},"PIXI.SAMPLER_TYPES")," for explanation."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"maxTextures"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"number of locations to check"))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"reset----void"},"reset: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Resets texture location and bound textures Actual ",(0,a.kt)("inlineCode",{parentName:"p"},"bind(null, i)")," calls will be performed at next ",(0,a.kt)("inlineCode",{parentName:"p"},"unbind()")," call")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"unbind-texture-basetexture---void"},"unbind: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(texture",":"," BaseTexture) -",">"," void"))),(0,a.kt)("p",null,"Unbind a texture."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"texture"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"BaseTexture")),(0,a.kt)("td",{parentName:"tr",align:null},"Texture to bind"))))),(0,a.kt)("hr",null))}p.isMDXComponent=!0}}]);