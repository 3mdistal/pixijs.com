"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[9160],{3905:(e,t,l)=>{l.d(t,{Zo:()=>s,kt:()=>m});var r=l(67294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,r)}return l}function u(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function i(e,t){if(null==e)return{};var l,r,n=function(e,t){if(null==e)return{};var l,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)l=a[r],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)l=a[r],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var o=r.createContext({}),d=function(e){var t=r.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):u(u({},t),e)),l},s=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var l=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(l),c=n,m=p["".concat(o,".").concat(c)]||p[c]||k[c]||a;return l?r.createElement(m,u(u({ref:t},s),{},{components:l})):r.createElement(m,u({ref:t},s))}));function m(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=l.length,u=new Array(a);u[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[p]="string"==typeof e?e:n,u[1]=i;for(var d=2;d<a;d++)u[d]=l[d];return r.createElement.apply(null,u)}return r.createElement.apply(null,l)}c.displayName="MDXCreateElement"},17728:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>o,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=l(87462),n=(l(67294),l(3905));const a={id:"PIXI.BlobResource.pixi_compressed_textures",title:"Class: PIXI.BlobResource",sidebar_label:"PIXI.BlobResource",custom_edit_url:null},u=void 0,i={unversionedId:"api/classes/PIXI.BlobResource.pixi_compressed_textures",id:"api/classes/PIXI.BlobResource.pixi_compressed_textures",title:"Class: PIXI.BlobResource",description:"@pixi/compressed-textures.BlobResource",source:"@site/docs/api/classes/PIXI.BlobResource.pixi_compressed_textures.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.BlobResource.pixi_compressed_textures",permalink:"/api/classes/PIXI.BlobResource.pixi_compressed_textures",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.BlobResource.pixi_compressed_textures",title:"Class: PIXI.BlobResource",sidebar_label:"PIXI.BlobResource",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.BitmapText",permalink:"/api/classes/PIXI.BitmapText.pixi_text_bitmap"},next:{title:"PIXI.BlurFilter",permalink:"/api/classes/PIXI.BlurFilter.pixi_filter_blur"}},o={},d=[{value:"new PIXI.BlobResource: <span><code>(source: string, options: PIXI.IBlobOptions) </code></span>",id:"new-pixiblobresource-source-string-options-pixiibloboptions-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"buffer: <span><code>ViewableBuffer</code></span>",id:"buffer-viewablebuffer",level:3},{value:"destroyed: <span><code>boolean</code></span>",id:"destroyed-boolean",level:3},{value:"height: <span><code>number</code></span>",id:"height-number",level:3},{value:"internal: <span><code>boolean</code></span>",id:"internal-boolean",level:3},{value:"origin: <span><code>string</code></span>",id:"origin-string",level:3},{value:"src: <span><code>string</code></span>",id:"src-string",level:3},{value:"valid: <span><code>boolean</code></span>",id:"valid-boolean",level:3},{value:"width: <span><code>number</code></span>",id:"width-number",level:3},{value:"_height: <span><code>number</code></span>",id:"_height-number",level:3},{value:"_width: <span><code>number</code></span>",id:"_width-number",level:3},{value:"Methods",id:"methods",level:2},{value:"bind: <span><code>(baseTexture: BaseTexture) -&gt; void</code></span>",id:"bind-basetexture-basetexture---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"dispose: <span><code>() -&gt; void</code></span>",id:"dispose----void",level:3},{value:"load: <span><code>() -&gt; Promise&lt;Resource&gt;</code></span>",id:"load----promiseresource",level:3},{value:"Returns:",id:"returns",level:4},{value:"resize: <span><code>(width: number, height: number) -&gt; void</code></span>",id:"resize-width-number-height-number---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"style: <span><code>(_renderer: Renderer, _baseTexture: BaseTexture, _glTexture: GLTexture) -&gt; boolean</code></span>",id:"style-_renderer-renderer-_basetexture-basetexture-_gltexture-gltexture---boolean",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"unbind: <span><code>(baseTexture: BaseTexture) -&gt; void</code></span>",id:"unbind-basetexture-basetexture---void",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"update: <span><code>() -&gt; void</code></span>",id:"update----void",level:3},{value:"upload: <span><code>(renderer: Renderer, baseTexture: BaseTexture, glTexture: GLTexture) -&gt; boolean</code></span>",id:"upload-renderer-renderer-basetexture-basetexture-gltexture-gltexture---boolean",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Returns:",id:"returns-2",level:4}],s={toc:d};function p(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_compressed_textures"},"@pixi/compressed-textures"),".BlobResource"),(0,n.kt)("p",null,"Resource that fetches texture data over the network and stores it in a buffer."),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixiblobresource-source-string-options-pixiibloboptions-"},"new PIXI.BlobResource: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(source",":"," string, options",":"," PIXI.IBlobOptions) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"source"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"the URL of the texture file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.IBlobOptions")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.autoLoad"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"whether to fetch the data immediately; you can fetch it later via ",(0,n.kt)("a",{parentName:"td",href:"../classes/PIXI.BlobResource.pixi_compressed_textures#load"},"PIXI.BlobResource#load"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.width"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"the width in pixels.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.height"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"the height in pixels."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"extends"},"Extends"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../classes/PIXI.Resource.pixi_core"},"PIXI.Resource"))),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"buffer-viewablebuffer"},"buffer: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"ViewableBuffer"))),(0,n.kt)("p",null,"The viewable buffer on the data")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroyed-boolean"},"destroyed: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"false"))),(0,n.kt)("p",null,"If resource has been destroyed.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"height-number"},"height: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The height of the resource.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"internal-boolean"},"internal: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if resource is created by BaseTexture useful for doing cleanup with BaseTexture destroy and not cleaning up resources that were created externally.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"origin-string"},"origin: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"string"))),(0,n.kt)("p",null,"The URL of the texture file")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"src-string"},"src: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"string"))),(0,n.kt)("p",null,"The url of the resource")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"valid-boolean"},"valid: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,"Has been validated")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"width-number"},"width: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The width of the resource.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_height-number"},"_height: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Internal height of the resource.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_width-number"},"_width: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Internal width of the resource.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"bind-basetexture-basetexture---void"},"bind: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(baseTexture",":"," BaseTexture) -",">"," void"))),(0,n.kt)("p",null,"Bind to a parent BaseTexture"),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"baseTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"Parent texture"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Call when destroying resource, unbind any BaseTexture object before calling this method, as reference counts are maintained internally.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dispose----void"},"dispose: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Clean up anything, this happens when destroying is ready.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"load----promiseresource"},"load: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," Promise","<","Resource",">"))),(0,n.kt)("p",null,"Loads the blob"),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Promise","<","Resource",">")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"resize-width-number-height-number---void"},"resize: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(width",":"," number, height",":"," number) -",">"," void"))),(0,n.kt)("p",null,"Trigger a resize event"),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"width"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"X dimension")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"height"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Y dimension"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"style-_renderer-renderer-_basetexture-basetexture-_gltexture-gltexture---boolean"},"style: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(_renderer",":"," Renderer, _baseTexture",":"," BaseTexture, _glTexture",":"," GLTexture) -",">"," boolean"))),(0,n.kt)("p",null,"Set the style, optional to override"),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},"yeah, renderer!")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_baseTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"the texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"_glTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"texture instance for this webgl context")))),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"* ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," is success"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"unbind-basetexture-basetexture---void"},"unbind: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(baseTexture",":"," BaseTexture) -",">"," void"))),(0,n.kt)("p",null,"Unbind to a parent BaseTexture"),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"baseTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"Parent texture"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"update----void"},"update: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Has been updated trigger event.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"upload-renderer-renderer-basetexture-basetexture-gltexture-gltexture---boolean"},"upload: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," Renderer, baseTexture",":"," BaseTexture, glTexture",":"," GLTexture) -",">"," boolean"))),(0,n.kt)("p",null,"Uploads the texture or returns false if it cant for some reason. Override this."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},"yeah, renderer!")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"baseTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"the texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"glTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"texture instance for this webgl context")))),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"* true is success"))))),(0,n.kt)("hr",null))}p.isMDXComponent=!0}}]);