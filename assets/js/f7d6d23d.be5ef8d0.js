"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[4794],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),d=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=d(r),k=n,g=s["".concat(u,".").concat(k)]||s[k]||m[k]||l;return r?a.createElement(g,o(o({ref:t},p),{},{components:r})):a.createElement(g,o({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=k;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[s]="string"==typeof e?e:n,o[1]=i;for(var d=2;d<l;d++)o[d]=r[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},87698:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=r(87462),n=(r(67294),r(3905));const l={id:"PIXI.ShaderSystem.pixi_core",title:"Class: PIXI.ShaderSystem",sidebar_label:"PIXI.ShaderSystem",custom_edit_url:null},o=void 0,i={unversionedId:"api/classes/PIXI.ShaderSystem.pixi_core",id:"api/classes/PIXI.ShaderSystem.pixi_core",title:"Class: PIXI.ShaderSystem",description:"@pixi/core.ShaderSystem",source:"@site/docs/api/classes/PIXI.ShaderSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.ShaderSystem.pixi_core",permalink:"/api/classes/PIXI.ShaderSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.ShaderSystem.pixi_core",title:"Class: PIXI.ShaderSystem",sidebar_label:"PIXI.ShaderSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.Shader",permalink:"/api/classes/PIXI.Shader.pixi_core"},next:{title:"PIXI.SimpleMesh",permalink:"/api/classes/PIXI.SimpleMesh.pixi_mesh_extras"}},u={},d=[{value:"new PIXI.ShaderSystem: <span><code>(renderer: Renderer) </code></span>",id:"new-pixishadersystem-renderer-renderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"gl: <span><code>WebGLRenderingContext</code></span>",id:"gl-webglrenderingcontext",level:3},{value:"Methods",id:"methods",level:2},{value:"bind: <span><code>(shader: Shader, dontSync: boolean) -&gt; GLProgram</code></span>",id:"bind-shader-shader-dontsync-boolean---glprogram",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"disposeShader: <span><code>(shader: Shader) -&gt; void</code></span>",id:"disposeshader-shader-shader---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"generateProgram: <span><code>(shader: Shader) -&gt; GLProgram</code></span>",id:"generateprogram-shader-shader---glprogram",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"getGlProgram: <span><code>() -&gt; GLProgram</code></span>",id:"getglprogram----glprogram",level:3},{value:"Returns:",id:"returns-2",level:4},{value:"reset: <span><code>() -&gt; void</code></span>",id:"reset----void",level:3},{value:"setUniforms: <span><code>(uniforms: Dict&lt;any&gt;) -&gt; void</code></span>",id:"setuniforms-uniforms-dictany---void",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"syncUniformBufferGroup: <span><code>(group: UniformGroup, name: string) -&gt; </code></span>",id:"syncuniformbuffergroup-group-uniformgroup-name-string---",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"syncUniformGroup: <span><code>(group: UniformGroup, syncData: any) -&gt; void</code></span>",id:"syncuniformgroup-group-uniformgroup-syncdata-any---void",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"syncUniforms: <span><code>(group: UniformGroup, glProgram: GLProgram, syncData: any) -&gt; void</code></span>",id:"syncuniforms-group-uniformgroup-glprogram-glprogram-syncdata-any---void",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"createSyncBufferGroup: <span><code>(group: UniformGroup, glProgram: GLProgram, name: string) -&gt; UniformsSyncCallback</code></span>",id:"createsyncbuffergroup-group-uniformgroup-glprogram-glprogram-name-string---uniformssynccallback",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"Returns:",id:"returns-3",level:4}],p={toc:d};function s(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".ShaderSystem"),(0,n.kt)("p",null,"System plugin to the renderer to manage shaders."),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixishadersystem-renderer-renderer-"},"new PIXI.ShaderSystem: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," Renderer) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"gl-webglrenderingcontext"},"gl: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"WebGLRenderingContext"))),(0,n.kt)("p",null,"The current WebGL rendering context.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"bind-shader-shader-dontsync-boolean---glprogram"},"bind: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(shader",":"," Shader, dontSync",":"," boolean) -",">"," GLProgram"))),(0,n.kt)("p",null,"Changes the current shader to the one given in parameter."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"the new shader")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"dontSync"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"false if the shader should automatically sync its uniforms.")))),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"the glProgram that belongs to the shader."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Destroys this System and removes all its textures.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"disposeshader-shader-shader---void"},"disposeShader: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(shader",":"," Shader) -",">"," void"))),(0,n.kt)("p",null,"Disposes shader. If disposing one equals with current shader, set current as null."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"Shader object"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"generateprogram-shader-shader---glprogram"},"generateProgram: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(shader",":"," Shader) -",">"," GLProgram"))),(0,n.kt)("p",null,"Generates a glProgram version of the Shader provided."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"The shader that the glProgram will be based on.")))),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"A shiny new glProgram!"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getglprogram----glprogram"},"getGlProgram: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," GLProgram"))),(0,n.kt)("p",null,"Returns the underlying GLShade rof the currently bound shader.\nThis can be handy for when you to have a little more control over the setting of your uniforms."),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"The glProgram for the currently bound Shader for this context"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"reset----void"},"reset: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Resets ShaderSystem state, does not affect WebGL state.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setuniforms-uniforms-dictany---void"},"setUniforms: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(uniforms",":"," Dict","<","any",">",") -",">"," void"))),(0,n.kt)("p",null,"Uploads the uniforms values to the currently bound shader."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uniforms"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Dict","<","any",">")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniforms values that be applied to the current shader"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"syncuniformbuffergroup-group-uniformgroup-name-string---"},"syncUniformBufferGroup: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(group",":"," UniformGroup, name",":"," string) -",">"," "))),(0,n.kt)("p",null,"Syncs uniform buffers"),(0,n.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniform buffer group to sync")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"name"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"the name of the uniform buffer"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"syncuniformgroup-group-uniformgroup-syncdata-any---void"},"syncUniformGroup: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(group",":"," UniformGroup, syncData",":"," any) -",">"," void"))),(0,n.kt)("p",null,"Syncs uniforms on the group"),(0,n.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniform group to sync")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"syncData"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"any")),(0,n.kt)("td",{parentName:"tr",align:null},"this is data that is passed to the sync function and any nested sync functions"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"syncuniforms-group-uniformgroup-glprogram-glprogram-syncdata-any---void"},"syncUniforms: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(group",":"," UniformGroup, glProgram",":"," GLProgram, syncData",":"," any) -",">"," void"))),(0,n.kt)("p",null,"Overrideable by the ","@","pixi/unsafe-eval package to use static syncUniforms instead."),(0,n.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"glProgram"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"syncData"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"any")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"createsyncbuffergroup-group-uniformgroup-glprogram-glprogram-name-string---uniformssynccallback"},"createSyncBufferGroup: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(group",":"," UniformGroup, glProgram",":"," GLProgram, name",":"," string) -",">"," UniformsSyncCallback"))),(0,n.kt)("p",null,"Will create a function that uploads a uniform buffer using the STD140 standard. The upload function will then be cached for future calls If a group is manually managed, then a simple upload function is generated"),(0,n.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"group"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformGroup")),(0,n.kt)("td",{parentName:"tr",align:null},"the uniform buffer group to sync")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"glProgram"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"GLProgram")),(0,n.kt)("td",{parentName:"tr",align:null},"the gl program to attach the uniform bindings to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"name"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"the name of the uniform buffer (must exist on the shader)")))),(0,n.kt)("h4",{id:"returns-3"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"UniformsSyncCallback")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null))}s.isMDXComponent=!0}}]);