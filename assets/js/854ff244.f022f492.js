"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[2005],{3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>d});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=a.createContext({}),c=function(t){var e=a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},p=function(t){var e=c(t.components);return a.createElement(o.Provider,{value:e},t.children)},u="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),u=c(r),m=n,d=u["".concat(o,".").concat(m)]||u[m]||k[m]||l;return r?a.createElement(d,s(s({ref:e},p),{},{components:r})):a.createElement(d,s({ref:e},p))}));function d(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,s=new Array(l);s[0]=m;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i[u]="string"==typeof t?t:n,s[1]=i;for(var c=2;c<l;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},50037:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const l={id:"PIXI.AbstractMaskSystem.pixi_core",title:"Class: PIXI.AbstractMaskSystem",sidebar_label:"PIXI.AbstractMaskSystem",custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/PIXI.AbstractMaskSystem.pixi_core",id:"api/classes/PIXI.AbstractMaskSystem.pixi_core",title:"Class: PIXI.AbstractMaskSystem",description:"@pixi/core.AbstractMaskSystem",source:"@site/docs/api/classes/PIXI.AbstractMaskSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.AbstractMaskSystem.pixi_core",permalink:"/api/classes/PIXI.AbstractMaskSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.AbstractMaskSystem.pixi_core",title:"Class: PIXI.AbstractMaskSystem",sidebar_label:"PIXI.AbstractMaskSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"utils.DecomposedDataUri",permalink:"/api/interfaces/utils.DecomposedDataUri.pixi_utils"},next:{title:"PIXI.AbstractMultiResource",permalink:"/api/classes/PIXI.AbstractMultiResource.pixi_core"}},o={},c=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"maskStack",id:"maskstack",level:3},{value:"Methods",id:"methods",level:2},{value:"destroy",id:"destroy",level:3},{value:"getStackLength",id:"getstacklength",level:3},{value:"Returns:",id:"returns",level:4},{value:"setMaskStack",id:"setmaskstack",level:3},{value:"Parameters:",id:"parameters-1",level:4}],p={toc:c};function u(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("div",{class:"package-name"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".AbstractMaskSystem")),(0,n.kt)("p",null,"System plugin to the renderer to manage specific types of masking operations."),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"constructor"},"Constructor:"),(0,n.kt)("h4",null,(0,n.kt)("code",null,"new PIXI.AbstractMaskSystem(renderer: Renderer) ")),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"maskstack"},"maskStack"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"Array","<","PIXI.MaskData",">")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," The mask stack")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy"},"destroy"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Destroys the mask stack.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getstacklength"},"getStackLength"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"() -",">"," number")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Gets count of masks of certain type."),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setmaskstack"},"setMaskStack"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Type:")," ",(0,n.kt)("code",null,"(maskStack",":"," Array","<","PIXI.MaskData",">",") -",">"," void")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Description:")," Changes the mask stack that is used by this System."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maskStack"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","PIXI.MaskData",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The mask stack"))))),(0,n.kt)("hr",null))}u.isMDXComponent=!0}}]);