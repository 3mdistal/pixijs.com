"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[473],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),k=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},o=function(e){var t=k(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),c=k(a),m=n,u=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return a?r.createElement(u,s(s({ref:t},o),{},{components:a})):r.createElement(u,s({ref:t},o))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:n,s[1]=i;for(var k=2;k<l;k++)s[k]=a[k];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},73103:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>k});var r=a(87462),n=(a(67294),a(3905));const l={id:"PIXI.StencilSystem.pixi_core",title:"Class: PIXI.StencilSystem",sidebar_label:"PIXI.StencilSystem",custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/PIXI.StencilSystem.pixi_core",id:"api/classes/PIXI.StencilSystem.pixi_core",title:"Class: PIXI.StencilSystem",description:"@pixi/core.StencilSystem",source:"@site/docs/api/classes/PIXI.StencilSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.StencilSystem.pixi_core",permalink:"/api/classes/PIXI.StencilSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.StencilSystem.pixi_core",title:"Class: PIXI.StencilSystem",sidebar_label:"PIXI.StencilSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.StateSystem",permalink:"/api/classes/PIXI.StateSystem.pixi_core"},next:{title:"PIXI.SystemManager",permalink:"/api/classes/PIXI.SystemManager.pixi_core"}},p={},k=[{value:"new PIXI.StencilSystem: <span><code>(renderer: Renderer) </code></span>",id:"new-pixistencilsystem-renderer-renderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"maskStack: <span><code>Array&lt;PIXI.MaskData&gt;</code></span>",id:"maskstack-arraypiximaskdata",level:3},{value:"Methods",id:"methods",level:2},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"getStackLength: <span><code>() -&gt; number</code></span>",id:"getstacklength----number",level:3},{value:"Returns:",id:"returns",level:4},{value:"pop: <span><code>(maskObject: PIXI.DisplayObject) -&gt; void</code></span>",id:"pop-maskobject-pixidisplayobject---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"push: <span><code>(maskData: MaskData) -&gt; void</code></span>",id:"push-maskdata-maskdata---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"setMaskStack: <span><code>(maskStack: Array&lt;PIXI.MaskData&gt;) -&gt; void</code></span>",id:"setmaskstack-maskstack-arraypiximaskdata---void",level:3},{value:"Parameters:",id:"parameters-3",level:4}],o={toc:k};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".StencilSystem"),(0,n.kt)("p",null,"System plugin to the renderer to manage stencils (used for masks)."),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixistencilsystem-renderer-renderer-"},"new PIXI.StencilSystem: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," Renderer) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"extends"},"Extends"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../classes/PIXI.AbstractMaskSystem.pixi_core"},"PIXI.AbstractMaskSystem"))),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"maskstack-arraypiximaskdata"},"maskStack: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Array","<","PIXI.MaskData",">"))),(0,n.kt)("p",null,"The mask stack")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Destroys the mask stack.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getstacklength----number"},"getStackLength: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," number"))),(0,n.kt)("p",null,"Gets count of masks of certain type."),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"pop-maskobject-pixidisplayobject---void"},"pop: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(maskObject",":"," PIXI.DisplayObject) -",">"," void"))),(0,n.kt)("p",null,"Pops stencil mask. MaskData is already removed from stack"),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maskObject"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.DisplayObject")),(0,n.kt)("td",{parentName:"tr",align:null},"object of popped mask data"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"push-maskdata-maskdata---void"},"push: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(maskData",":"," MaskData) -",">"," void"))),(0,n.kt)("p",null,"Applies the Mask and adds it to the current stencil stack."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maskData"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"MaskData")),(0,n.kt)("td",{parentName:"tr",align:null},"The mask data"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setmaskstack-maskstack-arraypiximaskdata---void"},"setMaskStack: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(maskStack",":"," Array","<","PIXI.MaskData",">",") -",">"," void"))),(0,n.kt)("p",null,"Changes the mask stack that is used by this System."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maskStack"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","PIXI.MaskData",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The mask stack"))))),(0,n.kt)("hr",null))}c.isMDXComponent=!0}}]);