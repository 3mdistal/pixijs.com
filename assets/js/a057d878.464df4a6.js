"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[8770],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),d=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=d(n),k=a,c=p["".concat(o,".").concat(k)]||p[k]||m[k]||l;return n?r.createElement(c,i(i({ref:t},s),{},{components:n})):r.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=k;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u[p]="string"==typeof e?e:a,i[1]=u;for(var d=2;d<l;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},17782:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const l={id:"PIXI.RopeGeometry.pixi_mesh_extras",title:"Class: PIXI.RopeGeometry",sidebar_label:"PIXI.RopeGeometry",custom_edit_url:null},i=void 0,u={unversionedId:"api/classes/PIXI.RopeGeometry.pixi_mesh_extras",id:"api/classes/PIXI.RopeGeometry.pixi_mesh_extras",title:"Class: PIXI.RopeGeometry",description:"@pixi/mesh-extras.RopeGeometry",source:"@site/docs/api/classes/PIXI.RopeGeometry.pixi_mesh_extras.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.RopeGeometry.pixi_mesh_extras",permalink:"/api/classes/PIXI.RopeGeometry.pixi_mesh_extras",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.RopeGeometry.pixi_mesh_extras",title:"Class: PIXI.RopeGeometry",sidebar_label:"PIXI.RopeGeometry",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.Resource",permalink:"/api/classes/PIXI.Resource.pixi_core"},next:{title:"PIXI.RoundedRectangle",permalink:"/api/classes/PIXI.RoundedRectangle.pixi_math"}},o={},d=[{value:"new PIXI.RopeGeometry: <span><code>(width: number, points: IPoint[], textureScale: number) </code></span>",id:"new-pixiropegeometry-width-number-points-ipoint-texturescale-number-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"_width: <span><code>number</code></span>",id:"_width-number",level:3},{value:"glVertexArrayObjects: <span><code>object</code></span>",id:"glvertexarrayobjects-object",level:3},{value:"instanceCount: <span><code>number</code></span>",id:"instancecount-number",level:3},{value:"instanced: <span><code>boolean</code></span>",id:"instanced-boolean",level:3},{value:"points: <span><code>IPoint[]</code></span>",id:"points-ipoint",level:3},{value:"refCount: <span><code>number</code></span>",id:"refcount-number",level:3},{value:"textureScale: <span><code>number</code></span>",id:"texturescale-number",level:3},{value:"width: <span><code>number</code></span>",id:"width-number",level:3},{value:"Methods",id:"methods",level:2},{value:"addAttribute: <span><code>(id: string, buffer: PIXI.Buffer | Array&lt;number&gt;, size: number, normalized: boolean, type: TYPES, stride: number, start: number, instance: boolean) -&gt; this</code></span>",id:"addattribute-id-string-buffer-pixibuffer--arraynumber-size-number-normalized-boolean-type-types-stride-number-start-number-instance-boolean---this",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Returns:",id:"returns",level:4},{value:"addIndex: <span><code>(buffer: PIXI.Buffer | Array&lt;number&gt;) -&gt; Geometry</code></span>",id:"addindex-buffer-pixibuffer--arraynumber---geometry",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"clone: <span><code>() -&gt; Geometry</code></span>",id:"clone----geometry",level:3},{value:"Returns:",id:"returns-2",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"dispose: <span><code>() -&gt; void</code></span>",id:"dispose----void",level:3},{value:"getAttribute: <span><code>(id: string) -&gt; Attribute</code></span>",id:"getattribute-id-string---attribute",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-3",level:4},{value:"getBuffer: <span><code>(id: string) -&gt; Buffer</code></span>",id:"getbuffer-id-string---buffer",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-4",level:4},{value:"getIndex: <span><code>() -&gt; Buffer</code></span>",id:"getindex----buffer",level:3},{value:"Returns:",id:"returns-5",level:4},{value:"getSize: <span><code>() -&gt; number</code></span>",id:"getsize----number",level:3},{value:"Returns:",id:"returns-6",level:4},{value:"interleave: <span><code>() -&gt; Geometry</code></span>",id:"interleave----geometry",level:3},{value:"Returns:",id:"returns-7",level:4},{value:"updateVertices: <span><code>() -&gt; void</code></span>",id:"updatevertices----void",level:3}],s={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_mesh_extras"},"@pixi/mesh-extras"),".RopeGeometry"),(0,a.kt)("p",null,"RopeGeometry allows you to draw a geometry across several points and then manipulate these points."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"}," import { Point, RopeGeometry } from 'pixi.js';\n\n for (let i = 0; i < 20; i++) {\n     points.push(new Point(i * 50, 0));\n };\n const rope = new RopeGeometry(100, points);\n")),(0,a.kt)("p",null,"// TODO: @see"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"new-pixiropegeometry-width-number-points-ipoint-texturescale-number-"},"new PIXI.RopeGeometry: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(width",":"," number, points",":"," IPoint[], textureScale",":"," number) "))),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"width"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"200")),(0,a.kt)("td",{parentName:"tr",align:null},"The width (i.e., thickness) of the rope.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"points"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"IPoint[]")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null)),(0,a.kt)("td",{parentName:"tr",align:null},"An array of ",(0,a.kt)("a",{parentName:"td",href:"../classes/PIXI.Point.pixi_math"},"PIXI.Point")," objects to construct this rope.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"textureScale"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"0")),(0,a.kt)("td",{parentName:"tr",align:null},"By default the rope texture will be stretched to match rope length. If textureScale is positive this value will be treated as a scaling factor and the texture will preserve its aspect ratio instead. To create a tiling rope set baseTexture.wrapMode to ",(0,a.kt)("a",{parentName:"td",href:"../enums/PIXI.WRAP_MODES.pixi_constants"},"PIXI.WRAP_MODES.REPEAT")," and use a power of two texture, then set textureScale=1 to keep the original texture pixel size. In order to reduce alpha channel artifacts provide a larger texture and downsample - i.e. set textureScale=0.5 to scale it down twice."))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"extends"},"Extends"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../classes/PIXI.MeshGeometry.pixi_mesh"},"PIXI.MeshGeometry"))),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"_width-number"},"_width: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("p",null,"The width (i.e., thickness) of the rope.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"glvertexarrayobjects-object"},"glVertexArrayObjects: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"object"))),(0,a.kt)("p",null,"A map of renderer IDs to webgl VAOs")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"instancecount-number"},"instanceCount: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,a.kt)("code",null,"1"))),(0,a.kt)("p",null,"Number of instances in this geometry, pass it to ",(0,a.kt)("inlineCode",{parentName:"p"},"GeometrySystem.draw()"),".")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"instanced-boolean"},"instanced: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"boolean"))),(0,a.kt)("p",null,"Whether the geometry is instanced.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"points-ipoint"},"points: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"IPoint[]"))),(0,a.kt)("p",null,"An array of points that determine the rope.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"refcount-number"},"refCount: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("p",null,"Count of existing (not destroyed) meshes that reference this geometry.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"texturescale-number"},"textureScale: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("p",null,"Rope texture scale, if zero then the rope texture is stretched.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"width-number"},"width: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"number"))),(0,a.kt)("p",null,"The width (i.e., thickness) of the rope.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"addattribute-id-string-buffer-pixibuffer--arraynumber-size-number-normalized-boolean-type-types-stride-number-start-number-instance-boolean---this"},"addAttribute: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(id",":"," string, buffer",":"," PIXI.Buffer ","|"," Array","<","number",">",", size",":"," number, normalized",":"," boolean, type",":"," TYPES, stride",":"," number, start",":"," number, instance",":"," boolean) -",">"," this"))),(0,a.kt)("p",null,"Adds an attribute to the geometry Note",":"," ",(0,a.kt)("inlineCode",{parentName:"p"},"stride")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"start")," should be ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," if you dont know them, not 0!"),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string")),(0,a.kt)("td",{parentName:"tr",align:null},"the name of the attribute (matching up to a shader)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"buffer"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"PIXI.Buffer ","|"," Array","<","number",">")),(0,a.kt)("td",{parentName:"tr",align:null},"the buffer that holds the data of the attribute . You can also provide an Array and a buffer will be created from it.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"size"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"normalized"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"boolean")),(0,a.kt)("td",{parentName:"tr",align:null},"should the data be normalized.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"type"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"TYPES")),(0,a.kt)("td",{parentName:"tr",align:null},"what type of number is the attribute. Check ",(0,a.kt)("a",{parentName:"td",href:"../enums/PIXI.TYPES.pixi_constants"},"PIXI.TYPES")," to see the ones available")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stride"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"How far apart, in bytes, the start of each value is. (used for interleaving data)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"start"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"How far into the array to start reading values (used for interleaving data)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"instance"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"boolean")),(0,a.kt)("td",{parentName:"tr",align:null},"Instancing flag")))),(0,a.kt)("h4",{id:"returns"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"this")),(0,a.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"addindex-buffer-pixibuffer--arraynumber---geometry"},"addIndex: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(buffer",":"," PIXI.Buffer ","|"," Array","<","number",">",") -",">"," Geometry"))),(0,a.kt)("p",null,"Adds an index buffer to the geometry The index buffer contains integers, three for each triangle in the geometry, which reference the various attribute buffers (position, colour, UV coordinates, other UV coordinates, normal, \u2026). There is only ONE index buffer."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"buffer"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"PIXI.Buffer ","|"," Array","<","number",">")),(0,a.kt)("td",{parentName:"tr",align:null},"The buffer that holds the data of the index buffer. You can also provide an Array and a buffer will be created from it.")))),(0,a.kt)("h4",{id:"returns-1"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Geometry")),(0,a.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"clone----geometry"},"clone: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," Geometry"))),(0,a.kt)("p",null,"Returns a clone of the geometry."),(0,a.kt)("h4",{id:"returns-2"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Geometry")),(0,a.kt)("td",{parentName:"tr",align:null},"* A new clone of this geometry."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"destroy----void"},"destroy: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Destroys the geometry.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"dispose----void"},"dispose: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Disposes WebGL resources that are connected to this geometry.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"getattribute-id-string---attribute"},"getAttribute: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(id",":"," string) -",">"," Attribute"))),(0,a.kt)("p",null,"Returns the requested attribute."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string")),(0,a.kt)("td",{parentName:"tr",align:null},"The name of the attribute required")))),(0,a.kt)("h4",{id:"returns-3"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Attribute")),(0,a.kt)("td",{parentName:"tr",align:null},"* The attribute requested."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"getbuffer-id-string---buffer"},"getBuffer: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(id",":"," string) -",">"," Buffer"))),(0,a.kt)("p",null,"Returns the requested buffer."),(0,a.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"string")),(0,a.kt)("td",{parentName:"tr",align:null},"The name of the buffer required.")))),(0,a.kt)("h4",{id:"returns-4"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Buffer")),(0,a.kt)("td",{parentName:"tr",align:null},"* The buffer requested."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"getindex----buffer"},"getIndex: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," Buffer"))),(0,a.kt)("p",null,"Returns the index buffer"),(0,a.kt)("h4",{id:"returns-5"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Buffer")),(0,a.kt)("td",{parentName:"tr",align:null},"* The index buffer."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"getsize----number"},"getSize: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," number"))),(0,a.kt)("p",null,"Get the size of the geometries, in vertices."),(0,a.kt)("h4",{id:"returns-6"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null}))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"interleave----geometry"},"interleave: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," Geometry"))),(0,a.kt)("p",null,"This function modifies the structure so that all current attributes become interleaved into a single buffer This can be useful if your model remains static as it offers a little performance boost"),(0,a.kt)("h4",{id:"returns-7"},"Returns:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Geometry")),(0,a.kt)("td",{parentName:"tr",align:null},"* Returns self, useful for chaining."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"updatevertices----void"},"updateVertices: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"refreshes vertices of Rope mesh")),(0,a.kt)("hr",null))}p.isMDXComponent=!0}}]);