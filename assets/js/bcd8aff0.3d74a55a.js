"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[6075],{3905:(t,e,a)=>{a.d(e,{Zo:()=>k,kt:()=>c});var l=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function n(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,l)}return a}function u(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?n(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,l,r=function(t,e){if(null==t)return{};var a,l,r={},n=Object.keys(t);for(l=0;l<n.length;l++)a=n[l],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(l=0;l<n.length;l++)a=n[l],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var i=l.createContext({}),o=function(t){var e=l.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):u(u({},e),t)),a},k=function(t){var e=o(t.components);return l.createElement(i.Provider,{value:e},t.children)},s="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},m=l.forwardRef((function(t,e){var a=t.components,r=t.mdxType,n=t.originalType,i=t.parentName,k=p(t,["components","mdxType","originalType","parentName"]),s=o(a),m=r,c=s["".concat(i,".").concat(m)]||s[m]||d[m]||n;return a?l.createElement(c,u(u({ref:e},k),{},{components:a})):l.createElement(c,u({ref:e},k))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var n=a.length,u=new Array(n);u[0]=m;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p[s]="string"==typeof t?t:r,u[1]=p;for(var o=2;o<n;o++)u[o]=a[o];return l.createElement.apply(null,u)}return l.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7387:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>u,default:()=>s,frontMatter:()=>n,metadata:()=>p,toc:()=>o});var l=a(87462),r=(a(67294),a(3905));const n={id:"PIXI.BaseTexture.pixi_core",title:"Class: PIXI.BaseTexture",sidebar_label:"PIXI.BaseTexture",custom_edit_url:null},u=void 0,p={unversionedId:"api/classes/PIXI.BaseTexture.pixi_core",id:"api/classes/PIXI.BaseTexture.pixi_core",title:"Class: PIXI.BaseTexture",description:"@pixi/core.BaseTexture",source:"@site/docs/api/classes/PIXI.BaseTexture.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.BaseTexture.pixi_core",permalink:"/api/classes/PIXI.BaseTexture.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.BaseTexture.pixi_core",title:"Class: PIXI.BaseTexture",sidebar_label:"PIXI.BaseTexture",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.BaseRenderTexture",permalink:"/api/classes/PIXI.BaseRenderTexture.pixi_core"},next:{title:"PIXI.BasisParser",permalink:"/api/classes/PIXI.BasisParser.pixi_basis"}},i={},o=[{value:"Constructor:",id:"constructor",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"_globalBatch",id:"_globalbatch",level:3},{value:"defaultOptions",id:"defaultoptions",level:3},{value:"alphaMode",id:"alphamode",level:3},{value:"anisotropicLevel",id:"anisotropiclevel",level:3},{value:"format",id:"format",level:3},{value:"mipmap",id:"mipmap",level:3},{value:"scaleMode",id:"scalemode",level:3},{value:"target",id:"target",level:3},{value:"type",id:"type",level:3},{value:"wrapMode",id:"wrapmode",level:3},{value:"_batchEnabled",id:"_batchenabled",level:3},{value:"_batchLocation",id:"_batchlocation",level:3},{value:"alphaMode",id:"alphamode-1",level:3},{value:"anisotropicLevel",id:"anisotropiclevel-1",level:3},{value:"cacheId",id:"cacheid",level:3},{value:"destroyed",id:"destroyed",level:3},{value:"dirtyId",id:"dirtyid",level:3},{value:"format",id:"format-1",level:3},{value:"height",id:"height",level:3},{value:"isPowerOfTwo",id:"ispoweroftwo",level:3},{value:"mipmap",id:"mipmap-1",level:3},{value:"parentTextureArray",id:"parenttexturearray",level:3},{value:"realHeight",id:"realheight",level:3},{value:"realWidth",id:"realwidth",level:3},{value:"resolution",id:"resolution",level:3},{value:"resource",id:"resource",level:3},{value:"scaleMode",id:"scalemode-1",level:3},{value:"target",id:"target-1",level:3},{value:"textureCacheIds",id:"texturecacheids",level:3},{value:"type",id:"type-1",level:3},{value:"valid",id:"valid",level:3},{value:"width",id:"width",level:3},{value:"wrapMode",id:"wrapmode-1",level:3},{value:"dirtyStyleId",id:"dirtystyleid",level:3},{value:"touched",id:"touched",level:3},{value:"uid",id:"uid",level:3},{value:"Methods",id:"methods",level:2},{value:"addToCache",id:"addtocache",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"from",id:"from",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns",level:4},{value:"fromBuffer",id:"frombuffer",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"removeFromCache",id:"removefromcache",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"castToBaseTexture",id:"casttobasetexture",level:3},{value:"Returns:",id:"returns-3",level:4},{value:"destroy",id:"destroy",level:3},{value:"dispose",id:"dispose",level:3},{value:"getDrawableSource",id:"getdrawablesource",level:3},{value:"Returns:",id:"returns-4",level:4},{value:"setRealSize",id:"setrealsize",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"setResolution",id:"setresolution",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"setResource",id:"setresource",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"setSize",id:"setsize",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"setStyle",id:"setstyle",level:3},{value:"Parameters:",id:"parameters-9",level:4},{value:"Returns:",id:"returns-9",level:4},{value:"update",id:"update",level:3}],k={toc:o};function s(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,l.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("div",{class:"package-name"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".BaseTexture")),(0,r.kt)("p",null,"A Texture stores the information that represents an image. All textures have a base texture, which contains information about the source. Therefore you can have many textures all using a single BaseTexture"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"constructor"},"Constructor:"),(0,r.kt)("h4",null,(0,r.kt)("code",null,"new PIXI.BaseTexture(resource: PIXI.Resource | HTMLImageElement | HTMLVideoElement | ImageBitmap | ICanvas | string, options: IBaseTextureOptions<RO>) ")),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.Resource ","|"," HTMLImageElement ","|"," HTMLVideoElement ","|"," ImageBitmap ","|"," ICanvas ","|"," string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"null")),(0,r.kt)("td",{parentName:"tr",align:null},"The current resource to use, for things that aren't Resource objects, will be converted into a Resource.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"IBaseTextureOptions","<","RO",">")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"undefined")),(0,r.kt)("td",{parentName:"tr",align:null},"Collection of options, default options inherited from ",(0,r.kt)("a",{parentName:"td",href:"../classes/PIXI.BaseTexture.pixi_core#defaultOptions"},"PIXI.BaseTexture.defaultOptions"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.mipmap"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.MIPMAP_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"If mipmapping is enabled for texture")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.anisotropicLevel"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"Anisotropic filtering level of texture")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.wrapMode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.WRAP_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"Wrap mode for textures")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.scaleMode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.SCALE_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"Default scale mode, linear, nearest")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.FORMATS")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"GL format type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.TYPES")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"GL data type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.TARGETS")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"GL texture target")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.alphaMode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.ALPHA_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"Pre multiply the image alpha")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.width"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"0")),(0,r.kt)("td",{parentName:"tr",align:null},"Width of the texture")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.height"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"0")),(0,r.kt)("td",{parentName:"tr",align:null},"Height of the texture")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.resolution"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.settings.RESOLUTION")),(0,r.kt)("td",{parentName:"tr",align:null},"Resolution of the base texture")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.resourceOptions"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null)),(0,r.kt)("td",{parentName:"tr",align:null},"Optional resource options, see autoDetectResource"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"extends"},"Extends"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"EventEmitter")),(0,r.kt)("h2",{id:"members"},"Members"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"_globalbatch"},"_globalBatch"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Global number of the texture batch, used by multi-texture renderers.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"defaultoptions"},"defaultOptions"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.IBaseTextureOptions")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Default options used when creating BaseTexture objects.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"alphamode"},"alphaMode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.ALPHA_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.ALPHA_MODES.UNPACK")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Pre multiply the image alpha")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"anisotropiclevel"},"anisotropicLevel"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Anisotropic filtering level of texture")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"format"},"format"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.FORMATS")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.FORMATS.RGBA")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," GL format type")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"mipmap"},"mipmap"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.MIPMAP_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.MIPMAP_MODES.POW2")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," If mipmapping is enabled for texture.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"scalemode"},"scaleMode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.SCALE_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.SCALE_MODES.LINEAR")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Default scale mode, linear, nearest.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"target"},"target"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.TARGETS")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.TARGETS.TEXTURE_2D")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," GL texture target")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"type"},"type"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.TYPES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.TYPES.UNSIGNED_BYTE")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," GL data type")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"wrapmode"},"wrapMode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.WRAP_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.WRAP_MODES.CLAMP")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Wrap mode for textures.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"_batchenabled"},"_batchEnabled"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Number of the texture batch, used by multi-texture renderers")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"_batchlocation"},"_batchLocation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Location inside texture batch, used by multi-texture renderers")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"alphamode-1"},"alphaMode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.ALPHA_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.ALPHA_MODES.UNPACK")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," How to treat premultiplied alpha, see ",(0,r.kt)("a",{parentName:"p",href:"../enums/PIXI.ALPHA_MODES.pixi_constants"},"PIXI.ALPHA_MODES"),".")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"anisotropiclevel-1"},"anisotropicLevel"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Anisotropic filtering level of texture")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"cacheid"},"cacheId"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"string")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Currently default cache ID.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"destroyed"},"destroyed"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Flag if BaseTexture has been destroyed.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"dirtyid"},"dirtyId"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Used by TextureSystem to only update texture to the GPU when needed. Please call ",(0,r.kt)("inlineCode",{parentName:"p"},"update()")," to increment it.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"format-1"},"format"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"FORMATS")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.FORMATS.RGBA")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The pixel format of the texture")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"height"},"height"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The height of the base texture set when the image has loaded")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"ispoweroftwo"},"isPowerOfTwo"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"false")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Whether or not the texture is a power of two, try to use power of two textures as much as you can")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"mipmap-1"},"mipmap"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"MIPMAP_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.MIPMAP_MODES.POW2")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Mipmap mode of the texture, affects downscaled images")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"parenttexturearray"},"parentTextureArray"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.BaseTexture")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Whether its a part of another texture, handled by ArrayResource or CubeResource")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"realheight"},"realHeight"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Pixel height of the source of this texture")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"realwidth"},"realWidth"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Pixel width of the source of this texture")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"resolution"},"resolution"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.settings.RESOLUTION")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The resolution / device pixel ratio of the texture")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"resource"},"resource"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"PIXI.Resource")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The resource used by this BaseTexture, there can only be one resource per BaseTexture, but textures can share resources.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"scalemode-1"},"scaleMode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"SCALE_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.SCALE_MODES.LINEAR")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The scale mode to apply when scaling this texture")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"target-1"},"target"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"TARGETS")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.TARGETS.TEXTURE_2D")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The target type")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"texturecacheids"},"textureCacheIds"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"Array","<","string",">")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The collection of alternative cache ids, since some BaseTextures can have more than one ID, short name and longer full URL")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"type-1"},"type"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"TYPES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.TYPES.UNSIGNED_BYTE")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The type of resource data")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"valid"},"valid"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"boolean")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Generally speaking means when resource is loaded.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"width"},"width"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," The width of the base texture set when the image has loaded")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"wrapmode-1"},"wrapMode"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"WRAP_MODES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Default Value"),": ",(0,r.kt)("code",null,"PIXI.WRAP_MODES.CLAMP")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," How the texture wraps")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"dirtystyleid"},"dirtyStyleId"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Used by TextureSystem to only update texture style when needed.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"touched"},"touched"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Used by automatic texture Garbage Collection, stores last GC tick when it was bound")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"uid"},"uid"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"number")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Global unique identifier for this BaseTexture")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"addtocache"},"addToCache"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(baseTexture",":"," PIXI.BaseTexture, id",":"," string) -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Adds a BaseTexture to the global BaseTextureCache. This cache is shared across the whole PIXI object."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"baseTexture"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.BaseTexture")),(0,r.kt)("td",{parentName:"tr",align:null},"The BaseTexture to add to the cache.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The id that the BaseTexture will be stored against."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"from"},"from"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(source",":"," HTMLImageElement ","|"," HTMLVideoElement ","|"," ImageBitmap ","|"," PIXI.ICanvas ","|"," string ","|"," Array","<","string",">",", options",":"," IBaseTextureOptions","<","RO",">",", strict",":"," boolean) -",">"," PIXI.BaseTexture")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Helper function that creates a base texture based on the source you provide. The source can be - image url, image element, canvas element. If the source is an image url or an image element and not in the base texture cache, it will be created and loaded."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"HTMLImageElement ","|"," HTMLVideoElement ","|"," ImageBitmap ","|"," PIXI.ICanvas ","|"," string ","|"," Array","<","string",">")),(0,r.kt)("td",{parentName:"tr",align:null},"The source to create base texture from.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"IBaseTextureOptions","<","RO",">")),(0,r.kt)("td",{parentName:"tr",align:null},"See ",(0,r.kt)("a",{parentName:"td",href:"../classes/PIXI.BaseTexture.pixi_core"},"PIXI.BaseTexture"),"'s constructor for options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.pixiIdPrefix"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"If a source has no id, this is the prefix of the generated id")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"strict"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Enforce strict-mode, see ",(0,r.kt)("a",{parentName:"td",href:"../namespaces/PIXI.settings.pixi_settings#STRICT_TEXTURE_CACHE"},"PIXI.settings.STRICT_TEXTURE_CACHE"),".")))),(0,r.kt)("h4",{id:"returns"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.BaseTexture")),(0,r.kt)("td",{parentName:"tr",align:null},"The new base texture."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"frombuffer"},"fromBuffer"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(buffer",":"," Float32Array ","|"," Uint8Array, width",":"," number, height",":"," number, options",":"," IBaseTextureOptions) -",">"," BaseTexture","<","BufferResource",">")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Create a new BaseTexture with a BufferResource from a Float32Array. RGBA values are floats from 0 to 1."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"buffer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Float32Array ","|"," Uint8Array")),(0,r.kt)("td",{parentName:"tr",align:null},"The optional array to use, if no data is provided, a new Float32Array is created.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"width"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Width of the resource")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"height"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Height of the resource")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"IBaseTextureOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"See ",(0,r.kt)("a",{parentName:"td",href:"../classes/PIXI.BaseTexture.pixi_core"},"PIXI.BaseTexture"),"'s constructor for options. Default properties are different from the constructor's defaults.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.FORMATS")),(0,r.kt)("td",{parentName:"tr",align:null},"GL format type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.alphaMode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.ALPHA_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},"Image alpha, not premultiplied by default")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.scaleMode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.SCALE_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},"Scale mode, pixelating by default")))),(0,r.kt)("h4",{id:"returns-1"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"BaseTexture","<","BufferResource",">")),(0,r.kt)("td",{parentName:"tr",align:null},"* The resulting new BaseTexture"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"removefromcache"},"removeFromCache"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(baseTexture",":"," string ","|"," PIXI.BaseTexture) -",">"," PIXI.BaseTexture ","|"," unknown")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Remove a BaseTexture from the global BaseTextureCache."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"baseTexture"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string ","|"," PIXI.BaseTexture")),(0,r.kt)("td",{parentName:"tr",align:null},"id of a BaseTexture to be removed, or a BaseTexture instance itself.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.BaseTexture ","|"," unknown")),(0,r.kt)("td",{parentName:"tr",align:null},"The BaseTexture that was removed."))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"casttobasetexture"},"castToBaseTexture"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"() -",">"," BaseTexture")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Utility function for BaseTexture","|","Texture cast."),(0,r.kt)("h4",{id:"returns-3"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"BaseTexture")),(0,r.kt)("td",{parentName:"tr",align:null}))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"destroy"},"destroy"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"() -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Destroys this base texture. The method stops if resource doesn't want this texture to be destroyed. Removes texture from all caches.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"dispose"},"dispose"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"() -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Frees the texture from WebGL memory without destroying this texture object. This means you can still use the texture later which will upload it to GPU memory again.")),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"getdrawablesource"},"getDrawableSource"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"() -",">"," PIXI.ICanvasImageSource")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Get the drawable source, such as HTMLCanvasElement or HTMLImageElement suitable for rendering with CanvasRenderer. Provided by ",(0,r.kt)("strong",{parentName:"p"},"@","pixi/canvas-renderer")," package."),(0,r.kt)("h4",{id:"returns-4"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PIXI.ICanvasImageSource")),(0,r.kt)("td",{parentName:"tr",align:null},"Source to render with CanvasRenderer"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"setrealsize"},"setRealSize"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(realWidth",":"," number, realHeight",":"," number, resolution",":"," number) -",">"," this")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Sets real size of baseTexture, preserves current resolution."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"realWidth"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Full rendered width")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"realHeight"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Full rendered height")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resolution"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Optionally set resolution")))),(0,r.kt)("h4",{id:"returns-5"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"this")),(0,r.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"setresolution"},"setResolution"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(resolution",":"," number) -",">"," this")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Changes resolution"),(0,r.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resolution"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"res")))),(0,r.kt)("h4",{id:"returns-6"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"this")),(0,r.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"setresource"},"setResource"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(resource",":"," R) -",">"," this")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Sets the resource if it wasn't set. Throws error if resource already present"),(0,r.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"R")),(0,r.kt)("td",{parentName:"tr",align:null},"that is managing this BaseTexture")))),(0,r.kt)("h4",{id:"returns-7"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"this")),(0,r.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"setsize"},"setSize"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(desiredWidth",":"," number, desiredHeight",":"," number, resolution",":"," number) -",">"," this")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Changes w/h/resolution. Texture becomes valid if width and height are greater than zero."),(0,r.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"desiredWidth"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Desired visual width")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"desiredHeight"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Desired visual height")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resolution"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Optionally set resolution")))),(0,r.kt)("h4",{id:"returns-8"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"this")),(0,r.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"setstyle"},"setStyle"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"(scaleMode",":"," SCALE_MODES, mipmap",":"," MIPMAP_MODES) -",">"," this")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Changes style options of BaseTexture"),(0,r.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"scaleMode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"SCALE_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},"Pixi scalemode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mipmap"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"MIPMAP_MODES")),(0,r.kt)("td",{parentName:"tr",align:null},"enable mipmaps")))),(0,r.kt)("h4",{id:"returns-9"},"Returns:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"this")),(0,r.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,r.kt)("hr",null),(0,r.kt)("article",null,(0,r.kt)("h3",{id:"update"},"update"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("code",null,"() -",">"," void")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," Invalidates the object. Texture becomes valid if width and height are greater than zero.")),(0,r.kt)("hr",null))}s.isMDXComponent=!0}}]);