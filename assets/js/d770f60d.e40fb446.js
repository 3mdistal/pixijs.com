"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[8932],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>c});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),o=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=o(e.components);return n.createElement(u.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=o(r),k=a,c=m["".concat(u,".").concat(k)]||m[k]||s[k]||l;return r?n.createElement(c,i(i({ref:t},p),{},{components:r})):n.createElement(c,i({ref:t},p))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=k;var d={};for(var u in t)hasOwnProperty.call(t,u)&&(d[u]=t[u]);d.originalType=e,d[m]="string"==typeof e?e:a,i[1]=d;for(var o=2;o<l;o++)i[o]=r[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},66368:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var n=r(87462),a=(r(67294),r(3905));const l={id:"PIXI.ParticleRenderer.pixi_particle_container",title:"Class: PIXI.ParticleRenderer",sidebar_label:"PIXI.ParticleRenderer",custom_edit_url:null},i=void 0,d={unversionedId:"api/classes/PIXI.ParticleRenderer.pixi_particle_container",id:"api/classes/PIXI.ParticleRenderer.pixi_particle_container",title:"Class: PIXI.ParticleRenderer",description:"@pixi/particle-container.ParticleRenderer",source:"@site/docs/api/classes/PIXI.ParticleRenderer.pixi_particle_container.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.ParticleRenderer.pixi_particle_container",permalink:"/api/classes/PIXI.ParticleRenderer.pixi_particle_container",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.ParticleRenderer.pixi_particle_container",title:"Class: PIXI.ParticleRenderer",sidebar_label:"PIXI.ParticleRenderer",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.ParticleContainer",permalink:"/api/classes/PIXI.ParticleContainer.pixi_particle_container"},next:{title:"PIXI.PlaneGeometry",permalink:"/api/classes/PIXI.PlaneGeometry.pixi_mesh_extras"}},u={},o=[{value:"new PIXI.ParticleRenderer: <span><code>(renderer: Renderer) </code></span>",id:"new-pixiparticlerenderer-renderer-renderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"shader: <span><code>Shader</code></span>",id:"shader-shader",level:3},{value:"state: <span><code>State</code></span>",id:"state-state",level:3},{value:"renderer: <span><code>Renderer</code></span>",id:"renderer-renderer",level:3},{value:"Methods",id:"methods",level:2},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"flush: <span><code>() -&gt; void</code></span>",id:"flush----void",level:3},{value:"render: <span><code>(container: ParticleContainer) -&gt; void</code></span>",id:"render-container-particlecontainer---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"start: <span><code>() -&gt; void</code></span>",id:"start----void",level:3},{value:"stop: <span><code>() -&gt; void</code></span>",id:"stop----void",level:3},{value:"uploadPosition: <span><code>(children: Sprite[], startIndex: number, amount: number, array: number[], stride: number, offset: number) -&gt; void</code></span>",id:"uploadposition-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"uploadRotation: <span><code>(children: Sprite[], startIndex: number, amount: number, array: number[], stride: number, offset: number) -&gt; void</code></span>",id:"uploadrotation-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"uploadTint: <span><code>(children: Sprite[], startIndex: number, amount: number, array: number[], stride: number, offset: number) -&gt; void</code></span>",id:"uploadtint-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"uploadUvs: <span><code>(children: Sprite[], startIndex: number, amount: number, array: number[], stride: number, offset: number) -&gt; void</code></span>",id:"uploaduvs-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"uploadVertices: <span><code>(children: Sprite[], startIndex: number, amount: number, array: number[], stride: number, offset: number) -&gt; void</code></span>",id:"uploadvertices-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void",level:3},{value:"Parameters:",id:"parameters-6",level:4}],p={toc:o};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../modules/pixi_particle_container"},"@pixi/particle-container"),".ParticleRenderer"),(0,a.kt)("p",null,"Renderer for Particles that is designer for speed over feature set."),(0,a.kt)("p",null,"// TODO: @see"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"new-pixiparticlerenderer-renderer-renderer-"},"new PIXI.ParticleRenderer: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(renderer",":"," Renderer) "))),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"renderer"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Renderer")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null)),(0,a.kt)("td",{parentName:"tr",align:null},"The renderer this sprite batch works for."))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"extends"},"Extends"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../classes/PIXI.ObjectRenderer.pixi_core"},"PIXI.ObjectRenderer"))),(0,a.kt)("h2",{id:"members"},"Members"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"shader-shader"},"shader: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Shader"))),(0,a.kt)("p",null,"The default shader that is used if a sprite doesn't have a more specific one.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"state-state"},"state: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"State"))),(0,a.kt)("p",null,"The WebGL state in which this renderer will work.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"renderer-renderer"},"renderer: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"Renderer"))),(0,a.kt)("p",null,"The renderer this manager works for.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"destroy----void"},"destroy: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Destroys the ParticleRenderer.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"flush----void"},"flush: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Stub method that should be used to empty the current batch by rendering objects now.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"render-container-particlecontainer---void"},"render: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(container",":"," ParticleContainer) -",">"," void"))),(0,a.kt)("p",null,"Renders the particle container object."),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"container"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"ParticleContainer")),(0,a.kt)("td",{parentName:"tr",align:null},"The container to render using this ParticleRenderer."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"start----void"},"start: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Stub method that initializes any state required before rendering starts. It is different from the ",(0,a.kt)("inlineCode",{parentName:"p"},"prerender"),"signal, which occurs every frame, in that it is called whenever an object requests ",(0,a.kt)("em",{parentName:"p"},"this")," renderer specifically.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"stop----void"},"stop: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"() -",">"," void"))),(0,a.kt)("p",null,"Stops the renderer. It should free up any state and become dormant.")),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uploadposition-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void"},"uploadPosition: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(children",":"," Sprite[], startIndex",":"," number, amount",":"," number, array",":"," number[], stride",":"," number, offset",":"," number) -",">"," void"))),(0,a.kt)("p",null,"Uploads the position."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"children"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Sprite[]")),(0,a.kt)("td",{parentName:"tr",align:null},"the array of sprites to render")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"startIndex"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the index to start from in the children array")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"amount"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the amount of children that will have their positions uploaded")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"array"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number[]")),(0,a.kt)("td",{parentName:"tr",align:null},"The vertices to upload.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stride"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Stride to use for iteration.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"offset"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Offset to start at."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uploadrotation-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void"},"uploadRotation: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(children",":"," Sprite[], startIndex",":"," number, amount",":"," number, array",":"," number[], stride",":"," number, offset",":"," number) -",">"," void"))),(0,a.kt)("p",null,"Uploads the rotation."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"children"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Sprite[]")),(0,a.kt)("td",{parentName:"tr",align:null},"the array of sprites to render")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"startIndex"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the index to start from in the children array")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"amount"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the amount of children that will have their rotation uploaded")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"array"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number[]")),(0,a.kt)("td",{parentName:"tr",align:null},"The vertices to upload.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stride"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Stride to use for iteration.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"offset"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Offset to start at."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uploadtint-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void"},"uploadTint: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(children",":"," Sprite[], startIndex",":"," number, amount",":"," number, array",":"," number[], stride",":"," number, offset",":"," number) -",">"," void"))),(0,a.kt)("p",null,"Uploads the tint."),(0,a.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"children"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Sprite[]")),(0,a.kt)("td",{parentName:"tr",align:null},"the array of sprites to render")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"startIndex"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the index to start from in the children array")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"amount"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the amount of children that will have their rotation uploaded")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"array"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number[]")),(0,a.kt)("td",{parentName:"tr",align:null},"The vertices to upload.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stride"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Stride to use for iteration.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"offset"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Offset to start at."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uploaduvs-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void"},"uploadUvs: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(children",":"," Sprite[], startIndex",":"," number, amount",":"," number, array",":"," number[], stride",":"," number, offset",":"," number) -",">"," void"))),(0,a.kt)("p",null,"Uploads the UVs."),(0,a.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"children"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Sprite[]")),(0,a.kt)("td",{parentName:"tr",align:null},"the array of sprites to render")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"startIndex"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the index to start from in the children array")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"amount"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the amount of children that will have their rotation uploaded")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"array"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number[]")),(0,a.kt)("td",{parentName:"tr",align:null},"The vertices to upload.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stride"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Stride to use for iteration.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"offset"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Offset to start at."))))),(0,a.kt)("hr",null),(0,a.kt)("article",null,(0,a.kt)("h3",{id:"uploadvertices-children-sprite-startindex-number-amount-number-array-number-stride-number-offset-number---void"},"uploadVertices: ",(0,a.kt)("span",null,(0,a.kt)("code",null,"(children",":"," Sprite[], startIndex",":"," number, amount",":"," number, array",":"," number[], stride",":"," number, offset",":"," number) -",">"," void"))),(0,a.kt)("p",null,"Uploads the vertices."),(0,a.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"children"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"Sprite[]")),(0,a.kt)("td",{parentName:"tr",align:null},"the array of sprites to render")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"startIndex"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the index to start from in the children array")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"amount"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"the amount of children that will have their vertices uploaded")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"array"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number[]")),(0,a.kt)("td",{parentName:"tr",align:null},"The vertices to upload.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stride"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Stride to use for iteration.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"offset"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("code",null,"number")),(0,a.kt)("td",{parentName:"tr",align:null},"Offset to start at."))))),(0,a.kt)("hr",null))}m.isMDXComponent=!0}}]);