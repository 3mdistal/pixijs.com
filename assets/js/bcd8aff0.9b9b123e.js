"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[6075],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var l=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function u(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=l.createContext({}),s=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):u(u({},t),e)),a},d=function(e){var t=s(e.components);return l.createElement(o.Provider,{value:t},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(a),m=n,c=p["".concat(o,".").concat(m)]||p[m]||k[m]||r;return a?l.createElement(c,u(u({ref:t},d),{},{components:a})):l.createElement(c,u({ref:t},d))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,u=new Array(r);u[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[p]="string"==typeof e?e:n,u[1]=i;for(var s=2;s<r;s++)u[s]=a[s];return l.createElement.apply(null,u)}return l.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7387:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>u,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var l=a(87462),n=(a(67294),a(3905));const r={id:"PIXI.BaseTexture.pixi_core",title:"Class: PIXI.BaseTexture",sidebar_label:"PIXI.BaseTexture",custom_edit_url:null},u=void 0,i={unversionedId:"api/classes/PIXI.BaseTexture.pixi_core",id:"api/classes/PIXI.BaseTexture.pixi_core",title:"Class: PIXI.BaseTexture",description:"@pixi/core.BaseTexture",source:"@site/docs/api/classes/PIXI.BaseTexture.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.BaseTexture.pixi_core",permalink:"/api/classes/PIXI.BaseTexture.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.BaseTexture.pixi_core",title:"Class: PIXI.BaseTexture",sidebar_label:"PIXI.BaseTexture",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.BaseRenderTexture",permalink:"/api/classes/PIXI.BaseRenderTexture.pixi_core"},next:{title:"PIXI.BasisParser",permalink:"/api/classes/PIXI.BasisParser.pixi_basis"}},o={},s=[{value:"new PIXI.BaseTexture: <span><code>(resource: PIXI.Resource | HTMLImageElement | HTMLVideoElement | ImageBitmap | ICanvas | string, options: IBaseTextureOptions&lt;RO&gt;) </code></span>",id:"new-pixibasetexture-resource-pixiresource--htmlimageelement--htmlvideoelement--imagebitmap--icanvas--string-options-ibasetextureoptionsro-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Extends",id:"extends",level:2},{value:"Members",id:"members",level:2},{value:"_globalBatch: <span><code>number</code></span>",id:"_globalbatch-number",level:3},{value:"defaultOptions: <span><code>PIXI.IBaseTextureOptions</code></span>",id:"defaultoptions-pixiibasetextureoptions",level:3},{value:"alphaMode: <span><code>PIXI.ALPHA_MODES</code></span>",id:"alphamode-pixialpha_modes",level:3},{value:"anisotropicLevel: <span><code>number</code></span>",id:"anisotropiclevel-number",level:3},{value:"format: <span><code>PIXI.FORMATS</code></span>",id:"format-pixiformats",level:3},{value:"mipmap: <span><code>PIXI.MIPMAP_MODES</code></span>",id:"mipmap-piximipmap_modes",level:3},{value:"scaleMode: <span><code>PIXI.SCALE_MODES</code></span>",id:"scalemode-pixiscale_modes",level:3},{value:"target: <span><code>PIXI.TARGETS</code></span>",id:"target-pixitargets",level:3},{value:"type: <span><code>PIXI.TYPES</code></span>",id:"type-pixitypes",level:3},{value:"wrapMode: <span><code>PIXI.WRAP_MODES</code></span>",id:"wrapmode-pixiwrap_modes",level:3},{value:"_batchEnabled: <span><code>number</code></span>",id:"_batchenabled-number",level:3},{value:"_batchLocation: <span><code>number</code></span>",id:"_batchlocation-number",level:3},{value:"alphaMode: <span><code>PIXI.ALPHA_MODES</code></span>",id:"alphamode-pixialpha_modes-1",level:3},{value:"anisotropicLevel: <span><code>number</code></span>",id:"anisotropiclevel-number-1",level:3},{value:"cacheId: <span><code>string</code></span>",id:"cacheid-string",level:3},{value:"destroyed: <span><code>boolean</code></span>",id:"destroyed-boolean",level:3},{value:"dirtyId: <span><code>number</code></span>",id:"dirtyid-number",level:3},{value:"format: <span><code>FORMATS</code></span>",id:"format-formats",level:3},{value:"height: <span><code>number</code></span>",id:"height-number",level:3},{value:"isPowerOfTwo: <span><code>boolean</code></span>",id:"ispoweroftwo-boolean",level:3},{value:"mipmap: <span><code>MIPMAP_MODES</code></span>",id:"mipmap-mipmap_modes",level:3},{value:"parentTextureArray: <span><code>PIXI.BaseTexture</code></span>",id:"parenttexturearray-pixibasetexture",level:3},{value:"realHeight: <span><code>number</code></span>",id:"realheight-number",level:3},{value:"realWidth: <span><code>number</code></span>",id:"realwidth-number",level:3},{value:"resolution: <span><code>number</code></span>",id:"resolution-number",level:3},{value:"resource: <span><code>PIXI.Resource</code></span>",id:"resource-pixiresource",level:3},{value:"scaleMode: <span><code>SCALE_MODES</code></span>",id:"scalemode-scale_modes",level:3},{value:"target: <span><code>TARGETS</code></span>",id:"target-targets",level:3},{value:"textureCacheIds: <span><code>Array&lt;string&gt;</code></span>",id:"texturecacheids-arraystring",level:3},{value:"type: <span><code>TYPES</code></span>",id:"type-types",level:3},{value:"valid: <span><code>boolean</code></span>",id:"valid-boolean",level:3},{value:"width: <span><code>number</code></span>",id:"width-number",level:3},{value:"wrapMode: <span><code>WRAP_MODES</code></span>",id:"wrapmode-wrap_modes",level:3},{value:"dirtyStyleId: <span><code>number</code></span>",id:"dirtystyleid-number",level:3},{value:"touched: <span><code>number</code></span>",id:"touched-number",level:3},{value:"uid: <span><code>number</code></span>",id:"uid-number",level:3},{value:"Methods",id:"methods",level:2},{value:"addToCache: <span><code>(baseTexture: PIXI.BaseTexture, id: string) -&gt; void</code></span>",id:"addtocache-basetexture-pixibasetexture-id-string---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"from: <span><code>(source: HTMLImageElement | HTMLVideoElement | ImageBitmap | PIXI.ICanvas | string | Array&lt;string&gt;, options: IBaseTextureOptions&lt;RO&gt;, strict: boolean) -&gt; PIXI.BaseTexture</code></span>",id:"from-source-htmlimageelement--htmlvideoelement--imagebitmap--pixiicanvas--string--arraystring-options-ibasetextureoptionsro-strict-boolean---pixibasetexture",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Returns:",id:"returns",level:4},{value:"fromBuffer: <span><code>(buffer: Float32Array | Uint8Array, width: number, height: number, options: IBaseTextureOptions) -&gt; BaseTexture&lt;BufferResource&gt;</code></span>",id:"frombuffer-buffer-float32array--uint8array-width-number-height-number-options-ibasetextureoptions---basetexturebufferresource",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"removeFromCache: <span><code>(baseTexture: string | PIXI.BaseTexture) -&gt; PIXI.BaseTexture | unknown</code></span>",id:"removefromcache-basetexture-string--pixibasetexture---pixibasetexture--unknown",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"castToBaseTexture: <span><code>() -&gt; BaseTexture</code></span>",id:"casttobasetexture----basetexture",level:3},{value:"Returns:",id:"returns-3",level:4},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"dispose: <span><code>() -&gt; void</code></span>",id:"dispose----void",level:3},{value:"getDrawableSource: <span><code>() -&gt; PIXI.ICanvasImageSource</code></span>",id:"getdrawablesource----pixiicanvasimagesource",level:3},{value:"Returns:",id:"returns-4",level:4},{value:"setRealSize: <span><code>(realWidth: number, realHeight: number, resolution: number) -&gt; this</code></span>",id:"setrealsize-realwidth-number-realheight-number-resolution-number---this",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"Returns:",id:"returns-5",level:4},{value:"setResolution: <span><code>(resolution: number) -&gt; this</code></span>",id:"setresolution-resolution-number---this",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"Returns:",id:"returns-6",level:4},{value:"setResource: <span><code>(resource: R) -&gt; this</code></span>",id:"setresource-resource-r---this",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Returns:",id:"returns-7",level:4},{value:"setSize: <span><code>(desiredWidth: number, desiredHeight: number, resolution: number) -&gt; this</code></span>",id:"setsize-desiredwidth-number-desiredheight-number-resolution-number---this",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"Returns:",id:"returns-8",level:4},{value:"setStyle: <span><code>(scaleMode: SCALE_MODES, mipmap: MIPMAP_MODES) -&gt; this</code></span>",id:"setstyle-scalemode-scale_modes-mipmap-mipmap_modes---this",level:3},{value:"Parameters:",id:"parameters-9",level:4},{value:"Returns:",id:"returns-9",level:4},{value:"update: <span><code>() -&gt; void</code></span>",id:"update----void",level:3}],d={toc:s};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".BaseTexture"),(0,n.kt)("p",null,"A Texture stores the information that represents an image. All textures have a base texture, which contains information about the source. Therefore you can have many textures all using a single BaseTexture"),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixibasetexture-resource-pixiresource--htmlimageelement--htmlvideoelement--imagebitmap--icanvas--string-options-ibasetextureoptionsro-"},"new PIXI.BaseTexture: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(resource",":"," PIXI.Resource ","|"," HTMLImageElement ","|"," HTMLVideoElement ","|"," ImageBitmap ","|"," ICanvas ","|"," string, options",":"," IBaseTextureOptions","<","RO",">",") "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resource"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.Resource ","|"," HTMLImageElement ","|"," HTMLVideoElement ","|"," ImageBitmap ","|"," ICanvas ","|"," string")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"null")),(0,n.kt)("td",{parentName:"tr",align:null},"The current resource to use, for things that aren't Resource objects, will be converted into a Resource.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"IBaseTextureOptions","<","RO",">")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"undefined")),(0,n.kt)("td",{parentName:"tr",align:null},"Collection of options, default options inherited from ",(0,n.kt)("a",{parentName:"td",href:"../classes/PIXI.BaseTexture.pixi_core#defaultOptions"},"PIXI.BaseTexture.defaultOptions"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.mipmap"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.MIPMAP_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"If mipmapping is enabled for texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.anisotropicLevel"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"Anisotropic filtering level of texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.wrapMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.WRAP_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"Wrap mode for textures")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.scaleMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.SCALE_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"Default scale mode, linear, nearest")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.FORMATS")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"GL format type")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.type"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.TYPES")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"GL data type")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.target"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.TARGETS")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"GL texture target")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.alphaMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.ALPHA_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"Pre multiply the image alpha")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.width"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"0")),(0,n.kt)("td",{parentName:"tr",align:null},"Width of the texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.height"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"0")),(0,n.kt)("td",{parentName:"tr",align:null},"Height of the texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.settings.RESOLUTION")),(0,n.kt)("td",{parentName:"tr",align:null},"Resolution of the base texture")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.resourceOptions"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"object")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"Optional resource options, see autoDetectResource"))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"extends"},"Extends"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"EventEmitter")),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_globalbatch-number"},"_globalBatch: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"0"))),(0,n.kt)("p",null,"Global number of the texture batch, used by multi-texture renderers.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"defaultoptions-pixiibasetextureoptions"},"defaultOptions: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.IBaseTextureOptions"))),(0,n.kt)("p",null,"Default options used when creating BaseTexture objects.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"alphamode-pixialpha_modes"},"alphaMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.ALPHA_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.ALPHA_MODES.UNPACK"))),(0,n.kt)("p",null,"Pre multiply the image alpha")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"anisotropiclevel-number"},"anisotropicLevel: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"0"))),(0,n.kt)("p",null,"Anisotropic filtering level of texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"format-pixiformats"},"format: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.FORMATS"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.FORMATS.RGBA"))),(0,n.kt)("p",null,"GL format type")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"mipmap-piximipmap_modes"},"mipmap: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.MIPMAP_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.MIPMAP_MODES.POW2"))),(0,n.kt)("p",null,"If mipmapping is enabled for texture.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"scalemode-pixiscale_modes"},"scaleMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.SCALE_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.SCALE_MODES.LINEAR"))),(0,n.kt)("p",null,"Default scale mode, linear, nearest.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"target-pixitargets"},"target: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.TARGETS"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.TARGETS.TEXTURE_2D"))),(0,n.kt)("p",null,"GL texture target")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"type-pixitypes"},"type: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.TYPES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.TYPES.UNSIGNED_BYTE"))),(0,n.kt)("p",null,"GL data type")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"wrapmode-pixiwrap_modes"},"wrapMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.WRAP_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.WRAP_MODES.CLAMP"))),(0,n.kt)("p",null,"Wrap mode for textures.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_batchenabled-number"},"_batchEnabled: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Number of the texture batch, used by multi-texture renderers")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"_batchlocation-number"},"_batchLocation: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Location inside texture batch, used by multi-texture renderers")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"alphamode-pixialpha_modes-1"},"alphaMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.ALPHA_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.ALPHA_MODES.UNPACK"))),(0,n.kt)("p",null,"How to treat premultiplied alpha, see ",(0,n.kt)("a",{parentName:"p",href:"../enums/PIXI.ALPHA_MODES.pixi_constants"},"PIXI.ALPHA_MODES"),".")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"anisotropiclevel-number-1"},"anisotropicLevel: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"0"))),(0,n.kt)("p",null,"Anisotropic filtering level of texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"cacheid-string"},"cacheId: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"string"))),(0,n.kt)("p",null,"Currently default cache ID.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroyed-boolean"},"destroyed: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,"Flag if BaseTexture has been destroyed.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dirtyid-number"},"dirtyId: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Used by TextureSystem to only update texture to the GPU when needed. Please call ",(0,n.kt)("inlineCode",{parentName:"p"},"update()")," to increment it.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"format-formats"},"format: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"FORMATS"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.FORMATS.RGBA"))),(0,n.kt)("p",null,"The pixel format of the texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"height-number"},"height: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The height of the base texture set when the image has loaded")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"ispoweroftwo-boolean"},"isPowerOfTwo: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"false"))),(0,n.kt)("p",null,"Whether or not the texture is a power of two, try to use power of two textures as much as you can")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"mipmap-mipmap_modes"},"mipmap: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"MIPMAP_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.MIPMAP_MODES.POW2"))),(0,n.kt)("p",null,"Mipmap mode of the texture, affects downscaled images")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"parenttexturearray-pixibasetexture"},"parentTextureArray: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.BaseTexture"))),(0,n.kt)("p",null,"Whether its a part of another texture, handled by ArrayResource or CubeResource")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"realheight-number"},"realHeight: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Pixel height of the source of this texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"realwidth-number"},"realWidth: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Pixel width of the source of this texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"resolution-number"},"resolution: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.settings.RESOLUTION"))),(0,n.kt)("p",null,"The resolution / device pixel ratio of the texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"resource-pixiresource"},"resource: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"PIXI.Resource"))),(0,n.kt)("p",null,"The resource used by this BaseTexture, there can only be one resource per BaseTexture, but textures can share resources.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"scalemode-scale_modes"},"scaleMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"SCALE_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.SCALE_MODES.LINEAR"))),(0,n.kt)("p",null,"The scale mode to apply when scaling this texture")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"target-targets"},"target: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"TARGETS"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.TARGETS.TEXTURE_2D"))),(0,n.kt)("p",null,"The target type")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"texturecacheids-arraystring"},"textureCacheIds: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Array","<","string",">"))),(0,n.kt)("p",null,"The collection of alternative cache ids, since some BaseTextures can have more than one ID, short name and longer full URL")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"type-types"},"type: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"TYPES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.TYPES.UNSIGNED_BYTE"))),(0,n.kt)("p",null,"The type of resource data")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"valid-boolean"},"valid: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,"Generally speaking means when resource is loaded.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"width-number"},"width: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"The width of the base texture set when the image has loaded")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"wrapmode-wrap_modes"},"wrapMode: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"WRAP_MODES"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Value"),": ",(0,n.kt)("code",null,"PIXI.WRAP_MODES.CLAMP"))),(0,n.kt)("p",null,"How the texture wraps")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dirtystyleid-number"},"dirtyStyleId: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Used by TextureSystem to only update texture style when needed.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"touched-number"},"touched: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Used by automatic texture Garbage Collection, stores last GC tick when it was bound")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"uid-number"},"uid: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"number"))),(0,n.kt)("p",null,"Global unique identifier for this BaseTexture")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"addtocache-basetexture-pixibasetexture-id-string---void"},"addToCache: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(baseTexture",":"," PIXI.BaseTexture, id",":"," string) -",">"," void"))),(0,n.kt)("p",null,"Adds a BaseTexture to the global BaseTextureCache. This cache is shared across the whole PIXI object."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"baseTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"The BaseTexture to add to the cache.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"id"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"The id that the BaseTexture will be stored against."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"from-source-htmlimageelement--htmlvideoelement--imagebitmap--pixiicanvas--string--arraystring-options-ibasetextureoptionsro-strict-boolean---pixibasetexture"},"from: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(source",":"," HTMLImageElement ","|"," HTMLVideoElement ","|"," ImageBitmap ","|"," PIXI.ICanvas ","|"," string ","|"," Array","<","string",">",", options",":"," IBaseTextureOptions","<","RO",">",", strict",":"," boolean) -",">"," PIXI.BaseTexture"))),(0,n.kt)("p",null,"Helper function that creates a base texture based on the source you provide. The source can be - image url, image element, canvas element. If the source is an image url or an image element and not in the base texture cache, it will be created and loaded."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"source"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"HTMLImageElement ","|"," HTMLVideoElement ","|"," ImageBitmap ","|"," PIXI.ICanvas ","|"," string ","|"," Array","<","string",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The source to create base texture from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"IBaseTextureOptions","<","RO",">")),(0,n.kt)("td",{parentName:"tr",align:null},"See ",(0,n.kt)("a",{parentName:"td",href:"../classes/PIXI.BaseTexture.pixi_core"},"PIXI.BaseTexture"),"'s constructor for options.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.pixiIdPrefix"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"If a source has no id, this is the prefix of the generated id")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"strict"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"Enforce strict-mode, see ",(0,n.kt)("a",{parentName:"td",href:"../namespaces/PIXI.settings.pixi_settings#STRICT_TEXTURE_CACHE"},"PIXI.settings.STRICT_TEXTURE_CACHE"),".")))),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"The new base texture."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"frombuffer-buffer-float32array--uint8array-width-number-height-number-options-ibasetextureoptions---basetexturebufferresource"},"fromBuffer: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(buffer",":"," Float32Array ","|"," Uint8Array, width",":"," number, height",":"," number, options",":"," IBaseTextureOptions) -",">"," BaseTexture","<","BufferResource",">"))),(0,n.kt)("p",null,"Create a new BaseTexture with a BufferResource from a Float32Array. RGBA values are floats from 0 to 1."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"buffer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Float32Array ","|"," Uint8Array")),(0,n.kt)("td",{parentName:"tr",align:null},"The optional array to use, if no data is provided, a new Float32Array is created.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"width"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Width of the resource")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"height"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Height of the resource")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"IBaseTextureOptions")),(0,n.kt)("td",{parentName:"tr",align:null},"See ",(0,n.kt)("a",{parentName:"td",href:"../classes/PIXI.BaseTexture.pixi_core"},"PIXI.BaseTexture"),"'s constructor for options. Default properties are different from the constructor's defaults.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.format"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.FORMATS")),(0,n.kt)("td",{parentName:"tr",align:null},"GL format type")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.alphaMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.ALPHA_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},"Image alpha, not premultiplied by default")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"options.scaleMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.SCALE_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},"Scale mode, pixelating by default")))),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture","<","BufferResource",">")),(0,n.kt)("td",{parentName:"tr",align:null},"* The resulting new BaseTexture"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"removefromcache-basetexture-string--pixibasetexture---pixibasetexture--unknown"},"removeFromCache: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(baseTexture",":"," string ","|"," PIXI.BaseTexture) -",">"," PIXI.BaseTexture ","|"," unknown"))),(0,n.kt)("p",null,"Remove a BaseTexture from the global BaseTextureCache."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"baseTexture"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string ","|"," PIXI.BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null},"id of a BaseTexture to be removed, or a BaseTexture instance itself.")))),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.BaseTexture ","|"," unknown")),(0,n.kt)("td",{parentName:"tr",align:null},"The BaseTexture that was removed."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"casttobasetexture----basetexture"},"castToBaseTexture: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," BaseTexture"))),(0,n.kt)("p",null,"Utility function for BaseTexture","|","Texture cast."),(0,n.kt)("h4",{id:"returns-3"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"BaseTexture")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Destroys this base texture. The method stops if resource doesn't want this texture to be destroyed. Removes texture from all caches.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"dispose----void"},"dispose: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Frees the texture from WebGL memory without destroying this texture object. This means you can still use the texture later which will upload it to GPU memory again.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getdrawablesource----pixiicanvasimagesource"},"getDrawableSource: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," PIXI.ICanvasImageSource"))),(0,n.kt)("p",null,"Get the drawable source, such as HTMLCanvasElement or HTMLImageElement suitable for rendering with CanvasRenderer. Provided by ",(0,n.kt)("strong",{parentName:"p"},"@","pixi/canvas-renderer")," package."),(0,n.kt)("h4",{id:"returns-4"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"PIXI.ICanvasImageSource")),(0,n.kt)("td",{parentName:"tr",align:null},"Source to render with CanvasRenderer"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setrealsize-realwidth-number-realheight-number-resolution-number---this"},"setRealSize: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(realWidth",":"," number, realHeight",":"," number, resolution",":"," number) -",">"," this"))),(0,n.kt)("p",null,"Sets real size of baseTexture, preserves current resolution."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"realWidth"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Full rendered width")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"realHeight"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Full rendered height")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Optionally set resolution")))),(0,n.kt)("h4",{id:"returns-5"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setresolution-resolution-number---this"},"setResolution: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(resolution",":"," number) -",">"," this"))),(0,n.kt)("p",null,"Changes resolution"),(0,n.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"res")))),(0,n.kt)("h4",{id:"returns-6"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setresource-resource-r---this"},"setResource: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(resource",":"," R) -",">"," this"))),(0,n.kt)("p",null,"Sets the resource if it wasn't set. Throws error if resource already present"),(0,n.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resource"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"R")),(0,n.kt)("td",{parentName:"tr",align:null},"that is managing this BaseTexture")))),(0,n.kt)("h4",{id:"returns-7"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setsize-desiredwidth-number-desiredheight-number-resolution-number---this"},"setSize: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(desiredWidth",":"," number, desiredHeight",":"," number, resolution",":"," number) -",">"," this"))),(0,n.kt)("p",null,"Changes w/h/resolution. Texture becomes valid if width and height are greater than zero."),(0,n.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"desiredWidth"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Desired visual width")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"desiredHeight"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Desired visual height")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"resolution"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"Optionally set resolution")))),(0,n.kt)("h4",{id:"returns-8"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setstyle-scalemode-scale_modes-mipmap-mipmap_modes---this"},"setStyle: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(scaleMode",":"," SCALE_MODES, mipmap",":"," MIPMAP_MODES) -",">"," this"))),(0,n.kt)("p",null,"Changes style options of BaseTexture"),(0,n.kt)("h4",{id:"parameters-9"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"scaleMode"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"SCALE_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},"Pixi scalemode")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"mipmap"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"MIPMAP_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},"enable mipmaps")))),(0,n.kt)("h4",{id:"returns-9"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null},"* this"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"update----void"},"update: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Invalidates the object. Texture becomes valid if width and height are greater than zero.")),(0,n.kt)("hr",null))}p.isMDXComponent=!0}}]);