"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[2005],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),o=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=o(e.components);return r.createElement(c.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),k=o(a),m=n,d=k["".concat(c,".").concat(m)]||k[m]||u[m]||l;return a?r.createElement(d,s(s({ref:t},p),{},{components:a})):r.createElement(d,s({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[k]="string"==typeof e?e:n,s[1]=i;for(var o=2;o<l;o++)s[o]=a[o];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},50037:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>k,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var r=a(87462),n=(a(67294),a(3905));const l={id:"PIXI.AbstractMaskSystem.pixi_core",title:"Class: PIXI.AbstractMaskSystem",sidebar_label:"PIXI.AbstractMaskSystem",custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/PIXI.AbstractMaskSystem.pixi_core",id:"api/classes/PIXI.AbstractMaskSystem.pixi_core",title:"Class: PIXI.AbstractMaskSystem",description:"@pixi/core.AbstractMaskSystem",source:"@site/docs/api/classes/PIXI.AbstractMaskSystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.AbstractMaskSystem.pixi_core",permalink:"/api/classes/PIXI.AbstractMaskSystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.AbstractMaskSystem.pixi_core",title:"Class: PIXI.AbstractMaskSystem",sidebar_label:"PIXI.AbstractMaskSystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"utils.DecomposedDataUri",permalink:"/api/interfaces/utils.DecomposedDataUri.pixi_utils"},next:{title:"PIXI.AbstractMultiResource",permalink:"/api/classes/PIXI.AbstractMultiResource.pixi_core"}},c={},o=[{value:"new PIXI.AbstractMaskSystem: <span><code>(renderer: Renderer) </code></span>",id:"new-pixiabstractmasksystem-renderer-renderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"maskStack: <span><code>Array&lt;PIXI.MaskData&gt;</code></span>",id:"maskstack-arraypiximaskdata",level:3},{value:"Methods",id:"methods",level:2},{value:"destroy: <span><code>() -&gt; void</code></span>",id:"destroy----void",level:3},{value:"getStackLength: <span><code>() -&gt; number</code></span>",id:"getstacklength----number",level:3},{value:"Returns:",id:"returns",level:4},{value:"setMaskStack: <span><code>(maskStack: Array&lt;PIXI.MaskData&gt;) -&gt; void</code></span>",id:"setmaskstack-maskstack-arraypiximaskdata---void",level:3},{value:"Parameters:",id:"parameters-1",level:4}],p={toc:o};function k(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".AbstractMaskSystem"),(0,n.kt)("p",null,"System plugin to the renderer to manage specific types of masking operations."),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixiabstractmasksystem-renderer-renderer-"},"new PIXI.AbstractMaskSystem: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," Renderer) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"maskstack-arraypiximaskdata"},"maskStack: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"Array","<","PIXI.MaskData",">"))),(0,n.kt)("p",null,"The mask stack")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"destroy----void"},"destroy: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Destroys the mask stack.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getstacklength----number"},"getStackLength: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," number"))),(0,n.kt)("p",null,"Gets count of masks of certain type."),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"setmaskstack-maskstack-arraypiximaskdata---void"},"setMaskStack: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(maskStack",":"," Array","<","PIXI.MaskData",">",") -",">"," void"))),(0,n.kt)("p",null,"Changes the mask stack that is used by this System."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"maskStack"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Array","<","PIXI.MaskData",">")),(0,n.kt)("td",{parentName:"tr",align:null},"The mask stack"))))),(0,n.kt)("hr",null))}k.isMDXComponent=!0}}]);