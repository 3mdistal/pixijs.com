"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[9599],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>b});var r=t(67294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var c=r.createContext({}),s=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=s(n.components);return r.createElement(c.Provider,{value:e},n.children)},d="mdxType",l={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,c=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),d=s(t),g=o,b=d["".concat(c,".").concat(g)]||d[g]||l[g]||a;return t?r.createElement(b,i(i({ref:e},u),{},{components:t})):r.createElement(b,i({ref:e},u))}));function b(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=g;var p={};for(var c in e)hasOwnProperty.call(e,c)&&(p[c]=e[c]);p.originalType=n,p[d]="string"==typeof n?n:o,i[1]=p;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},15998:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=t(87462),o=(t(67294),t(3905));const a={hide_table_of_contents:!0},i="2D Quad projective",p={unversionedId:"examples/plugin-projection/quad-homo",id:"examples/plugin-projection/quad-homo",title:"2D Quad projective",description:"",source:"@site/docs/examples/plugin-projection/quad-homo.md",sourceDirName:"examples/plugin-projection",slug:"/examples/plugin-projection/quad-homo",permalink:"/examples/plugin-projection/quad-homo",draft:!1,editUrl:"https://github.com/pixijs/pixijs.com/tree/main/docs/examples/plugin-projection/quad-homo.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"examplesSidebar",previous:{title:"2D Plane Tiling",permalink:"/examples/plugin-projection/plane-tiling"},next:{title:"2D Quad bilinear",permalink:"/examples/plugin-projection/quad-bi"}},c={},s=[],u={toc:s};function d(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2d-quad-projective"},"2D Quad projective"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"playground",playground:!0},"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application<HTMLCanvasElement>({ background: '#1099bb', resizeTo: window });\ndocument.body.appendChild(app.view);\n\nconst w = app.screen.width / 2; const\n    h = app.screen.height / 2;\n\nfunction createSquare(x, y) {\n    const square = new PIXI.Sprite(PIXI.Texture.WHITE);\n    square.tint = 0xff0000;\n    square.factor = 1;\n    square.anchor.set(0.5);\n    square.position.set(x, y);\n    return square;\n}\n\nconst squares = [\n    createSquare(w - 150, h - 150),\n    createSquare(w + 150, h - 150),\n    createSquare(w + 150, h + 150),\n    createSquare(w - 150, h + 150),\n];\n\nconst quad = squares.map((s) => s.position);\n\n// add sprite itself\nconst containerSprite = new PIXI.projection.Sprite2d(PIXI.Texture.from('https://beta.pixijs.com/assets/bg_scene_rotate.jpg'));\ncontainerSprite.anchor.set(0.5);\n\napp.stage.addChild(containerSprite);\nsquares.forEach((s) => { app.stage.addChild(s); });\n\n// Listen for animate update\napp.ticker.add((delta) => {\n    containerSprite.proj.mapSprite(containerSprite, quad);\n});\n\nsquares.forEach((s) => { addInteraction(s); });\n\n// let us add sprite to make it more funny\n\nconst bunny = new PIXI.projection.Sprite2d(PIXI.Texture.from('https://beta.pixijs.com/assets/flowerTop.png'));\nbunny.anchor.set(0.5);\ncontainerSprite.addChild(bunny);\n\naddInteraction(bunny);\n\n// === INTERACTION CODE  ===\n\nfunction toggle(obj) {\n}\n\nfunction snap(obj) {\n    if (obj === bunny) {\n        obj.position.set(0);\n    } else {\n        obj.position.x = Math.min(Math.max(obj.position.x, 0), app.screen.width);\n        obj.position.y = Math.min(Math.max(obj.position.y, 0), app.screen.height);\n    }\n}\n\nfunction addInteraction(obj) {\n    obj.interactive = true;\n    obj\n        .on('pointerdown', onDragStart)\n        .on('pointerup', onDragEnd)\n        .on('pointerupoutside', onDragEnd)\n        .on('pointermove', onDragMove);\n}\n\nfunction onDragStart(event) {\n    const obj = event.currentTarget;\n    obj.dragData = event.data;\n    obj.dragging = 1;\n    obj.dragPointerStart = event.data.getLocalPosition(obj.parent);\n    obj.dragObjStart = new PIXI.Point();\n    obj.dragObjStart.copyFrom(obj.position);\n    obj.dragGlobalStart = new PIXI.Point();\n    obj.dragGlobalStart.copyFrom(event.data.global);\n}\n\nfunction onDragEnd(event) {\n    const obj = event.currentTarget;\n    if (obj.dragging === 1) {\n        toggle(obj);\n    } else {\n        snap(obj);\n    }\n    obj.dragging = 0;\n    obj.dragData = null;\n    // set the interaction data to null\n}\n\nfunction onDragMove(event) {\n    const obj = event.currentTarget;\n    if (!obj.dragging) return;\n    const data = obj.dragData; // it can be different pointer!\n    if (obj.dragging === 1) {\n    // click or drag?\n        if (Math.abs(data.global.x - obj.dragGlobalStart.x)\n            + Math.abs(data.global.y - obj.dragGlobalStart.y) >= 3) {\n            // DRAG\n            obj.dragging = 2;\n        }\n    }\n    if (obj.dragging === 2) {\n        const dragPointerEnd = data.getLocalPosition(obj.parent);\n        // DRAG\n        obj.position.set(\n            obj.dragObjStart.x + (dragPointerEnd.x - obj.dragPointerStart.x),\n            obj.dragObjStart.y + (dragPointerEnd.y - obj.dragPointerStart.y),\n        );\n    }\n}\n")))}d.isMDXComponent=!0}}]);