"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([[1667],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=r.createContext({}),d=function(e){var t=r.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(m.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,m=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=d(a),k=n,c=s["".concat(m,".").concat(k)]||s[k]||u[k]||l;return a?r.createElement(c,o(o({ref:t},p),{},{components:a})):r.createElement(c,o({ref:t},p))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=k;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[s]="string"==typeof e?e:n,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},41258:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const l={id:"PIXI.GeometrySystem.pixi_core",title:"Class: PIXI.GeometrySystem",sidebar_label:"PIXI.GeometrySystem",custom_edit_url:null},o=void 0,i={unversionedId:"api/classes/PIXI.GeometrySystem.pixi_core",id:"api/classes/PIXI.GeometrySystem.pixi_core",title:"Class: PIXI.GeometrySystem",description:"@pixi/core.GeometrySystem",source:"@site/docs/api/classes/PIXI.GeometrySystem.pixi_core.mdx",sourceDirName:"api/classes",slug:"/api/classes/PIXI.GeometrySystem.pixi_core",permalink:"/api/classes/PIXI.GeometrySystem.pixi_core",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"PIXI.GeometrySystem.pixi_core",title:"Class: PIXI.GeometrySystem",sidebar_label:"PIXI.GeometrySystem",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"PIXI.Geometry",permalink:"/api/classes/PIXI.Geometry.pixi_core"},next:{title:"PIXI.Graphics",permalink:"/api/classes/PIXI.Graphics.pixi_graphics"}},m={},d=[{value:"new PIXI.GeometrySystem: <span><code>(renderer: Renderer) </code></span>",id:"new-pixigeometrysystem-renderer-renderer-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Members",id:"members",level:2},{value:"canUseUInt32ElementIndex: <span><code>boolean</code></span>",id:"canuseuint32elementindex-boolean",level:3},{value:"hasInstance: <span><code>boolean</code></span>",id:"hasinstance-boolean",level:3},{value:"hasVao: <span><code>boolean</code></span>",id:"hasvao-boolean",level:3},{value:"managedGeometries: <span><code>{ key: number: Geometry }</code></span>",id:"managedgeometries--key-number-geometry-",level:3},{value:"Methods",id:"methods",level:2},{value:"bind: <span><code>(geometry: Geometry, shader: Shader) -&gt; void</code></span>",id:"bind-geometry-geometry-shader-shader---void",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"disposeAll: <span><code>(contextLost: boolean) -&gt; void</code></span>",id:"disposeall-contextlost-boolean---void",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"disposeGeometry: <span><code>(geometry: Geometry, contextLost: boolean) -&gt; void</code></span>",id:"disposegeometry-geometry-geometry-contextlost-boolean---void",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"draw: <span><code>(type: DRAW_MODES, size: number, start: number, instanceCount: number) -&gt; this</code></span>",id:"draw-type-draw_modes-size-number-start-number-instancecount-number---this",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"Returns:",id:"returns",level:4},{value:"reset: <span><code>() -&gt; void</code></span>",id:"reset----void",level:3},{value:"updateBuffers: <span><code>() -&gt; void</code></span>",id:"updatebuffers----void",level:3},{value:"activateVao: <span><code>(geometry: Geometry, program: Program) -&gt; void</code></span>",id:"activatevao-geometry-geometry-program-program---void",level:3},{value:"Parameters:",id:"parameters-5",level:4},{value:"checkCompatibility: <span><code>(geometry: Geometry, program: Program) -&gt; void</code></span>",id:"checkcompatibility-geometry-geometry-program-program---void",level:3},{value:"Parameters:",id:"parameters-6",level:4},{value:"contextChange: <span><code>() -&gt; void</code></span>",id:"contextchange----void",level:3},{value:"getSignature: <span><code>(geometry: Geometry, program: Program) -&gt; string</code></span>",id:"getsignature-geometry-geometry-program-program---string",level:3},{value:"Parameters:",id:"parameters-7",level:4},{value:"Returns:",id:"returns-1",level:4},{value:"initGeometryVao: <span><code>(geometry: Geometry, shader: Shader, incRefCount: boolean) -&gt; WebGLVertexArrayObject</code></span>",id:"initgeometryvao-geometry-geometry-shader-shader-increfcount-boolean---webglvertexarrayobject",level:3},{value:"Parameters:",id:"parameters-8",level:4},{value:"Returns:",id:"returns-2",level:4},{value:"unbind: <span><code>() -&gt; void</code></span>",id:"unbind----void",level:3}],p={toc:d};function s(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../modules/pixi_core"},"@pixi/core"),".GeometrySystem"),(0,n.kt)("p",null,"System plugin to the renderer to manage geometry."),(0,n.kt)("p",null,"// TODO: @see"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"new-pixigeometrysystem-renderer-renderer-"},"new PIXI.GeometrySystem: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(renderer",":"," Renderer) "))),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Default"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"renderer"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Renderer")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null)),(0,n.kt)("td",{parentName:"tr",align:null},"The renderer this System works for."))))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"members"},"Members"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"canuseuint32elementindex-boolean"},"canUseUInt32ElementIndex: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if support ",(0,n.kt)("inlineCode",{parentName:"p"},"gl.UNSIGNED_INT")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"gl.drawElements")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"gl.drawElementsInstanced"),".")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"hasinstance-boolean"},"hasInstance: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if has ",(0,n.kt)("inlineCode",{parentName:"p"},"ANGLE_instanced_arrays")," extension.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"hasvao-boolean"},"hasVao: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"boolean"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if we has ",(0,n.kt)("inlineCode",{parentName:"p"},"*_vertex_array_object")," extension.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"managedgeometries--key-number-geometry-"},"managedGeometries: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"{"," ","[key",":"," number]",":"," Geometry ","}"))),(0,n.kt)("p",null,"Cache for all geometries by id, used in case renderer gets destroyed or for profiling.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"bind-geometry-geometry-shader-shader---void"},"bind: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(geometry",":"," Geometry, shader",":"," Shader) -",">"," void"))),(0,n.kt)("p",null,"Binds geometry so that is can be drawn. Creating a Vao if required"),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"geometry"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"Instance of geometry to bind.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"Instance of shader to use vao for."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"disposeall-contextlost-boolean---void"},"disposeAll: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(contextLost",":"," boolean) -",">"," void"))),(0,n.kt)("p",null,"Dispose all WebGL resources of all managed geometries."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"contextLost"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"If context was lost, we suppress ",(0,n.kt)("inlineCode",{parentName:"td"},"gl.delete")," calls"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"disposegeometry-geometry-geometry-contextlost-boolean---void"},"disposeGeometry: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(geometry",":"," Geometry, contextLost",":"," boolean) -",">"," void"))),(0,n.kt)("p",null,"Disposes geometry."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"geometry"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"Geometry with buffers. Only VAO will be disposed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"contextLost"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"If context was lost, we suppress deleteVertexArray"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"draw-type-draw_modes-size-number-start-number-instancecount-number---this"},"draw: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(type",":"," DRAW_MODES, size",":"," number, start",":"," number, instanceCount",":"," number) -",">"," this"))),(0,n.kt)("p",null,"Draws the currently bound geometry."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"type"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"DRAW_MODES")),(0,n.kt)("td",{parentName:"tr",align:null},"The type primitive to render.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"size"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The number of elements to be rendered. If not specified, all vertices after the starting vertex will be drawn.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"start"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The starting vertex in the geometry to start drawing from. If not specified, drawing will start from the first vertex.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"instanceCount"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"number")),(0,n.kt)("td",{parentName:"tr",align:null},"The number of instances of the set of elements to execute. If not specified, all instances will be drawn.")))),(0,n.kt)("h4",{id:"returns"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"this")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"reset----void"},"reset: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Reset and unbind any active VAO and geometry.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"updatebuffers----void"},"updateBuffers: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Update buffers of the currently bound geometry.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"activatevao-geometry-geometry-program-program---void"},"activateVao: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(geometry",":"," Geometry, program",":"," Program) -",">"," void"))),(0,n.kt)("p",null,"Activate vertex array object."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"geometry"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"Geometry instance.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"program"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Program")),(0,n.kt)("td",{parentName:"tr",align:null},"Shader program instance."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"checkcompatibility-geometry-geometry-program-program---void"},"checkCompatibility: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(geometry",":"," Geometry, program",":"," Program) -",">"," void"))),(0,n.kt)("p",null,"Check compatibility between a geometry and a program"),(0,n.kt)("h4",{id:"parameters-6"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"geometry"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"Geometry instance.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"program"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Program")),(0,n.kt)("td",{parentName:"tr",align:null},"Program instance."))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"contextchange----void"},"contextChange: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Sets up the renderer context and necessary buffers.")),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"getsignature-geometry-geometry-program-program---string"},"getSignature: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(geometry",":"," Geometry, program",":"," Program) -",">"," string"))),(0,n.kt)("p",null,"Takes a geometry and program and generates a unique signature for them."),(0,n.kt)("h4",{id:"parameters-7"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"geometry"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"To get signature from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"program"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Program")),(0,n.kt)("td",{parentName:"tr",align:null},"To test geometry against.")))),(0,n.kt)("h4",{id:"returns-1"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"string")),(0,n.kt)("td",{parentName:"tr",align:null},"* Unique signature of the geometry and program"))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"initgeometryvao-geometry-geometry-shader-shader-increfcount-boolean---webglvertexarrayobject"},"initGeometryVao: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"(geometry",":"," Geometry, shader",":"," Shader, incRefCount",":"," boolean) -",">"," WebGLVertexArrayObject"))),(0,n.kt)("p",null,"Creates or gets Vao with the same structure as the geometry and stores it on the geometry. If vao is created, it is bound automatically. We use a shader to infer what and how to set up the attribute locations."),(0,n.kt)("h4",{id:"parameters-8"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"geometry"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Geometry")),(0,n.kt)("td",{parentName:"tr",align:null},"Instance of geometry to to generate Vao for.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shader"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Shader")),(0,n.kt)("td",{parentName:"tr",align:null},"Instance of the shader.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"incRefCount"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"boolean")),(0,n.kt)("td",{parentName:"tr",align:null},"Increment refCount of all geometry buffers.")))),(0,n.kt)("h4",{id:"returns-2"},"Returns:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"WebGLVertexArrayObject")),(0,n.kt)("td",{parentName:"tr",align:null}))))),(0,n.kt)("hr",null),(0,n.kt)("article",null,(0,n.kt)("h3",{id:"unbind----void"},"unbind: ",(0,n.kt)("span",null,(0,n.kt)("code",null,"() -",">"," void"))),(0,n.kt)("p",null,"Unbind/reset everything.")),(0,n.kt)("hr",null))}s.isMDXComponent=!0}}]);